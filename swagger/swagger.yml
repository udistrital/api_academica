swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /actividad_aprendizaje/:
    get:
      tags:
      - actividad_aprendizaje
      description: get ActividadAprendizaje
      operationId: ActividadAprendizajeController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ActividadAprendizaje'
        "403": {}
    post:
      tags:
      - actividad_aprendizaje
      description: create ActividadAprendizaje
      operationId: ActividadAprendizajeController.Post
      parameters:
      - in: body
        name: body
        description: body for ActividadAprendizaje content
        required: true
        schema:
          $ref: '#/definitions/models.ActividadAprendizaje'
      responses:
        "201":
          description: '{int} models.ActividadAprendizaje'
        "403":
          description: body is empty
  /actividad_aprendizaje/{id}:
    get:
      tags:
      - actividad_aprendizaje
      description: get ActividadAprendizaje by id
      operationId: ActividadAprendizajeController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ActividadAprendizaje'
        "403":
          description: :id is empty
    put:
      tags:
      - actividad_aprendizaje
      description: update the ActividadAprendizaje
      operationId: ActividadAprendizajeController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ActividadAprendizaje content
        required: true
        schema:
          $ref: '#/definitions/models.ActividadAprendizaje'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ActividadAprendizaje'
        "403":
          description: :id is not int
    delete:
      tags:
      - actividad_aprendizaje
      description: delete the ActividadAprendizaje
      operationId: ActividadAprendizajeController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /actividad_recurso_aprendizaje/:
    get:
      tags:
      - actividad_recurso_aprendizaje
      description: get ActividadRecursoAprendizaje
      operationId: ActividadRecursoAprendizajeController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ActividadRecursoAprendizaje'
        "403": {}
    post:
      tags:
      - actividad_recurso_aprendizaje
      description: create ActividadRecursoAprendizaje
      operationId: ActividadRecursoAprendizajeController.Post
      parameters:
      - in: body
        name: body
        description: body for ActividadRecursoAprendizaje content
        required: true
        schema:
          $ref: '#/definitions/models.ActividadRecursoAprendizaje'
      responses:
        "201":
          description: '{int} models.ActividadRecursoAprendizaje'
        "403":
          description: body is empty
  /actividad_recurso_aprendizaje/{id}:
    get:
      tags:
      - actividad_recurso_aprendizaje
      description: get ActividadRecursoAprendizaje by id
      operationId: ActividadRecursoAprendizajeController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ActividadRecursoAprendizaje'
        "403":
          description: :id is empty
    put:
      tags:
      - actividad_recurso_aprendizaje
      description: update the ActividadRecursoAprendizaje
      operationId: ActividadRecursoAprendizajeController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ActividadRecursoAprendizaje content
        required: true
        schema:
          $ref: '#/definitions/models.ActividadRecursoAprendizaje'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ActividadRecursoAprendizaje'
        "403":
          description: :id is not int
    delete:
      tags:
      - actividad_recurso_aprendizaje
      description: delete the ActividadRecursoAprendizaje
      operationId: ActividadRecursoAprendizajeController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /acuerdo/:
    get:
      tags:
      - acuerdo
      description: get Acuerdo
      operationId: AcuerdoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Acuerdo'
        "403": {}
    post:
      tags:
      - acuerdo
      description: create Acuerdo
      operationId: AcuerdoController.Post
      parameters:
      - in: body
        name: body
        description: body for Acuerdo content
        required: true
        schema:
          $ref: '#/definitions/models.Acuerdo'
      responses:
        "201":
          description: '{int} models.Acuerdo'
        "403":
          description: body is empty
  /acuerdo/{id}:
    get:
      tags:
      - acuerdo
      description: get Acuerdo by id
      operationId: AcuerdoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Acuerdo'
        "403":
          description: :id is empty
    put:
      tags:
      - acuerdo
      description: update the Acuerdo
      operationId: AcuerdoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Acuerdo content
        required: true
        schema:
          $ref: '#/definitions/models.Acuerdo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Acuerdo'
        "403":
          description: :id is not int
    delete:
      tags:
      - acuerdo
      description: delete the Acuerdo
      operationId: AcuerdoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /apoyo_financiero/:
    get:
      tags:
      - apoyo_financiero
      description: get ApoyoFinanciero
      operationId: ApoyoFinancieroController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ApoyoFinanciero'
        "403": {}
    post:
      tags:
      - apoyo_financiero
      description: create ApoyoFinanciero
      operationId: ApoyoFinancieroController.Post
      parameters:
      - in: body
        name: body
        description: body for ApoyoFinanciero content
        required: true
        schema:
          $ref: '#/definitions/models.ApoyoFinanciero'
      responses:
        "201":
          description: '{int} models.ApoyoFinanciero'
        "403":
          description: body is empty
  /apoyo_financiero/{id}:
    get:
      tags:
      - apoyo_financiero
      description: get ApoyoFinanciero by id
      operationId: ApoyoFinancieroController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ApoyoFinanciero'
        "403":
          description: :id is empty
    put:
      tags:
      - apoyo_financiero
      description: update the ApoyoFinanciero
      operationId: ApoyoFinancieroController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ApoyoFinanciero content
        required: true
        schema:
          $ref: '#/definitions/models.ApoyoFinanciero'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ApoyoFinanciero'
        "403":
          description: :id is not int
    delete:
      tags:
      - apoyo_financiero
      description: delete the ApoyoFinanciero
      operationId: ApoyoFinancieroController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /area_conocimiento/:
    get:
      tags:
      - area_conocimiento
      description: get AreaConocimiento
      operationId: AreaConocimientoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.AreaConocimiento'
        "403": {}
    post:
      tags:
      - area_conocimiento
      description: create AreaConocimiento
      operationId: AreaConocimientoController.Post
      parameters:
      - in: body
        name: body
        description: body for AreaConocimiento content
        required: true
        schema:
          $ref: '#/definitions/models.AreaConocimiento'
      responses:
        "201":
          description: '{int} models.AreaConocimiento'
        "403":
          description: body is empty
  /area_conocimiento/{id}:
    get:
      tags:
      - area_conocimiento
      description: get AreaConocimiento by id
      operationId: AreaConocimientoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.AreaConocimiento'
        "403":
          description: :id is empty
    put:
      tags:
      - area_conocimiento
      description: update the AreaConocimiento
      operationId: AreaConocimientoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AreaConocimiento content
        required: true
        schema:
          $ref: '#/definitions/models.AreaConocimiento'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.AreaConocimiento'
        "403":
          description: :id is not int
    delete:
      tags:
      - area_conocimiento
      description: delete the AreaConocimiento
      operationId: AreaConocimientoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /asignacion_docente_clase/:
    get:
      tags:
      - asignacion_docente_clase
      description: get AsignacionDocenteClase
      operationId: AsignacionDocenteClaseController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.AsignacionDocenteClase'
        "403": {}
    post:
      tags:
      - asignacion_docente_clase
      description: create AsignacionDocenteClase
      operationId: AsignacionDocenteClaseController.Post
      parameters:
      - in: body
        name: body
        description: body for AsignacionDocenteClase content
        required: true
        schema:
          $ref: '#/definitions/models.AsignacionDocenteClase'
      responses:
        "201":
          description: '{int} models.AsignacionDocenteClase'
        "403":
          description: body is empty
  /asignacion_docente_clase/{id}:
    get:
      tags:
      - asignacion_docente_clase
      description: get AsignacionDocenteClase by id
      operationId: AsignacionDocenteClaseController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.AsignacionDocenteClase'
        "403":
          description: :id is empty
    put:
      tags:
      - asignacion_docente_clase
      description: update the AsignacionDocenteClase
      operationId: AsignacionDocenteClaseController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AsignacionDocenteClase content
        required: true
        schema:
          $ref: '#/definitions/models.AsignacionDocenteClase'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.AsignacionDocenteClase'
        "403":
          description: :id is not int
    delete:
      tags:
      - asignacion_docente_clase
      description: delete the AsignacionDocenteClase
      operationId: AsignacionDocenteClaseController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /beneficio_apoyo/:
    get:
      tags:
      - beneficio_apoyo
      description: get BeneficioApoyo
      operationId: BeneficioApoyoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.BeneficioApoyo'
        "403": {}
    post:
      tags:
      - beneficio_apoyo
      description: create BeneficioApoyo
      operationId: BeneficioApoyoController.Post
      parameters:
      - in: body
        name: body
        description: body for BeneficioApoyo content
        required: true
        schema:
          $ref: '#/definitions/models.BeneficioApoyo'
      responses:
        "201":
          description: '{int} models.BeneficioApoyo'
        "403":
          description: body is empty
  /beneficio_apoyo/{id}:
    get:
      tags:
      - beneficio_apoyo
      description: get BeneficioApoyo by id
      operationId: BeneficioApoyoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.BeneficioApoyo'
        "403":
          description: :id is empty
    put:
      tags:
      - beneficio_apoyo
      description: update the BeneficioApoyo
      operationId: BeneficioApoyoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for BeneficioApoyo content
        required: true
        schema:
          $ref: '#/definitions/models.BeneficioApoyo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.BeneficioApoyo'
        "403":
          description: :id is not int
    delete:
      tags:
      - beneficio_apoyo
      description: delete the BeneficioApoyo
      operationId: BeneficioApoyoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /calendario_organizacion/:
    get:
      tags:
      - calendario_organizacion
      description: get CalendarioOrganizacion
      operationId: CalendarioOrganizacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CalendarioOrganizacion'
        "403": {}
    post:
      tags:
      - calendario_organizacion
      description: create CalendarioOrganizacion
      operationId: CalendarioOrganizacionController.Post
      parameters:
      - in: body
        name: body
        description: body for CalendarioOrganizacion content
        required: true
        schema:
          $ref: '#/definitions/models.CalendarioOrganizacion'
      responses:
        "201":
          description: '{int} models.CalendarioOrganizacion'
        "403":
          description: body is empty
  /calendario_organizacion/{id}:
    get:
      tags:
      - calendario_organizacion
      description: get CalendarioOrganizacion by id
      operationId: CalendarioOrganizacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CalendarioOrganizacion'
        "403":
          description: :id is empty
    put:
      tags:
      - calendario_organizacion
      description: update the CalendarioOrganizacion
      operationId: CalendarioOrganizacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CalendarioOrganizacion content
        required: true
        schema:
          $ref: '#/definitions/models.CalendarioOrganizacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CalendarioOrganizacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - calendario_organizacion
      description: delete the CalendarioOrganizacion
      operationId: CalendarioOrganizacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /caracteristica_espacio/:
    get:
      tags:
      - caracteristica_espacio
      description: get CaracteristicaEspacio
      operationId: CaracteristicaEspacioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CaracteristicaEspacio'
        "403": {}
    post:
      tags:
      - caracteristica_espacio
      description: create CaracteristicaEspacio
      operationId: CaracteristicaEspacioController.Post
      parameters:
      - in: body
        name: body
        description: body for CaracteristicaEspacio content
        required: true
        schema:
          $ref: '#/definitions/models.CaracteristicaEspacio'
      responses:
        "201":
          description: '{int} models.CaracteristicaEspacio'
        "403":
          description: body is empty
  /caracteristica_espacio/{id}:
    get:
      tags:
      - caracteristica_espacio
      description: get CaracteristicaEspacio by id
      operationId: CaracteristicaEspacioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CaracteristicaEspacio'
        "403":
          description: :id is empty
    put:
      tags:
      - caracteristica_espacio
      description: update the CaracteristicaEspacio
      operationId: CaracteristicaEspacioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CaracteristicaEspacio content
        required: true
        schema:
          $ref: '#/definitions/models.CaracteristicaEspacio'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CaracteristicaEspacio'
        "403":
          description: :id is not int
    delete:
      tags:
      - caracteristica_espacio
      description: delete the CaracteristicaEspacio
      operationId: CaracteristicaEspacioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /cargo_academico/:
    get:
      tags:
      - cargo_academico
      description: get CargoAcademico
      operationId: CargoAcademicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CargoAcademico'
        "403": {}
    post:
      tags:
      - cargo_academico
      description: create CargoAcademico
      operationId: CargoAcademicoController.Post
      parameters:
      - in: body
        name: body
        description: body for CargoAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.CargoAcademico'
      responses:
        "201":
          description: '{int} models.CargoAcademico'
        "403":
          description: body is empty
  /cargo_academico/{id}:
    get:
      tags:
      - cargo_academico
      description: get CargoAcademico by id
      operationId: CargoAcademicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CargoAcademico'
        "403":
          description: :id is empty
    put:
      tags:
      - cargo_academico
      description: update the CargoAcademico
      operationId: CargoAcademicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CargoAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.CargoAcademico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CargoAcademico'
        "403":
          description: :id is not int
    delete:
      tags:
      - cargo_academico
      description: delete the CargoAcademico
      operationId: CargoAcademicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /categoria_certificado/:
    get:
      tags:
      - categoria_certificado
      description: get CategoriaCertificado
      operationId: CategoriaCertificadoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaCertificado'
        "403": {}
    post:
      tags:
      - categoria_certificado
      description: create CategoriaCertificado
      operationId: CategoriaCertificadoController.Post
      parameters:
      - in: body
        name: body
        description: body for CategoriaCertificado content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaCertificado'
      responses:
        "201":
          description: '{int} models.CategoriaCertificado'
        "403":
          description: body is empty
  /categoria_certificado/{id}:
    get:
      tags:
      - categoria_certificado
      description: get CategoriaCertificado by id
      operationId: CategoriaCertificadoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaCertificado'
        "403":
          description: :id is empty
    put:
      tags:
      - categoria_certificado
      description: update the CategoriaCertificado
      operationId: CategoriaCertificadoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CategoriaCertificado content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaCertificado'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaCertificado'
        "403":
          description: :id is not int
    delete:
      tags:
      - categoria_certificado
      description: delete the CategoriaCertificado
      operationId: CategoriaCertificadoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /categoria_criterio_rubrica/:
    get:
      tags:
      - categoria_criterio_rubrica
      description: get CategoriaCriterioRubrica
      operationId: CategoriaCriterioRubricaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaCriterioRubrica'
        "403": {}
    post:
      tags:
      - categoria_criterio_rubrica
      description: create CategoriaCriterioRubrica
      operationId: CategoriaCriterioRubricaController.Post
      parameters:
      - in: body
        name: body
        description: body for CategoriaCriterioRubrica content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaCriterioRubrica'
      responses:
        "201":
          description: '{int} models.CategoriaCriterioRubrica'
        "403":
          description: body is empty
  /categoria_criterio_rubrica/{id}:
    get:
      tags:
      - categoria_criterio_rubrica
      description: get CategoriaCriterioRubrica by id
      operationId: CategoriaCriterioRubricaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaCriterioRubrica'
        "403":
          description: :id is empty
    put:
      tags:
      - categoria_criterio_rubrica
      description: update the CategoriaCriterioRubrica
      operationId: CategoriaCriterioRubricaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CategoriaCriterioRubrica content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaCriterioRubrica'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaCriterioRubrica'
        "403":
          description: :id is not int
    delete:
      tags:
      - categoria_criterio_rubrica
      description: delete the CategoriaCriterioRubrica
      operationId: CategoriaCriterioRubricaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /categoria_ocupacional/:
    get:
      tags:
      - categoria_ocupacional
      description: get CategoriaOcupacional
      operationId: CategoriaOcupacionalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaOcupacional'
        "403": {}
    post:
      tags:
      - categoria_ocupacional
      description: create CategoriaOcupacional
      operationId: CategoriaOcupacionalController.Post
      parameters:
      - in: body
        name: body
        description: body for CategoriaOcupacional content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaOcupacional'
      responses:
        "201":
          description: '{int} models.CategoriaOcupacional'
        "403":
          description: body is empty
  /categoria_ocupacional/{id}:
    get:
      tags:
      - categoria_ocupacional
      description: get CategoriaOcupacional by id
      operationId: CategoriaOcupacionalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaOcupacional'
        "403":
          description: :id is empty
    put:
      tags:
      - categoria_ocupacional
      description: update the CategoriaOcupacional
      operationId: CategoriaOcupacionalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CategoriaOcupacional content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaOcupacional'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaOcupacional'
        "403":
          description: :id is not int
    delete:
      tags:
      - categoria_ocupacional
      description: delete the CategoriaOcupacional
      operationId: CategoriaOcupacionalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /categoria_titulacion/:
    get:
      tags:
      - categoria_titulacion
      description: get CategoriaTitulacion
      operationId: CategoriaTitulacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaTitulacion'
        "403": {}
    post:
      tags:
      - categoria_titulacion
      description: create CategoriaTitulacion
      operationId: CategoriaTitulacionController.Post
      parameters:
      - in: body
        name: body
        description: body for CategoriaTitulacion content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaTitulacion'
      responses:
        "201":
          description: '{int} models.CategoriaTitulacion'
        "403":
          description: body is empty
  /categoria_titulacion/{id}:
    get:
      tags:
      - categoria_titulacion
      description: get CategoriaTitulacion by id
      operationId: CategoriaTitulacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaTitulacion'
        "403":
          description: :id is empty
    put:
      tags:
      - categoria_titulacion
      description: update the CategoriaTitulacion
      operationId: CategoriaTitulacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CategoriaTitulacion content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaTitulacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaTitulacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - categoria_titulacion
      description: delete the CategoriaTitulacion
      operationId: CategoriaTitulacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /categoria_titulo/:
    get:
      tags:
      - categoria_titulo
      description: get CategoriaTitulo
      operationId: CategoriaTituloController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaTitulo'
        "403": {}
    post:
      tags:
      - categoria_titulo
      description: create CategoriaTitulo
      operationId: CategoriaTituloController.Post
      parameters:
      - in: body
        name: body
        description: body for CategoriaTitulo content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaTitulo'
      responses:
        "201":
          description: '{int} models.CategoriaTitulo'
        "403":
          description: body is empty
  /categoria_titulo/{id}:
    get:
      tags:
      - categoria_titulo
      description: get CategoriaTitulo by id
      operationId: CategoriaTituloController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaTitulo'
        "403":
          description: :id is empty
    put:
      tags:
      - categoria_titulo
      description: update the CategoriaTitulo
      operationId: CategoriaTituloController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CategoriaTitulo content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaTitulo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaTitulo'
        "403":
          description: :id is not int
    delete:
      tags:
      - categoria_titulo
      description: delete the CategoriaTitulo
      operationId: CategoriaTituloController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /clase_grupo_academico/:
    get:
      tags:
      - clase_grupo_academico
      description: get ClaseGrupoAcademico
      operationId: ClaseGrupoAcademicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ClaseGrupoAcademico'
        "403": {}
    post:
      tags:
      - clase_grupo_academico
      description: create ClaseGrupoAcademico
      operationId: ClaseGrupoAcademicoController.Post
      parameters:
      - in: body
        name: body
        description: body for ClaseGrupoAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.ClaseGrupoAcademico'
      responses:
        "201":
          description: '{int} models.ClaseGrupoAcademico'
        "403":
          description: body is empty
  /clase_grupo_academico/{id}:
    get:
      tags:
      - clase_grupo_academico
      description: get ClaseGrupoAcademico by id
      operationId: ClaseGrupoAcademicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ClaseGrupoAcademico'
        "403":
          description: :id is empty
    put:
      tags:
      - clase_grupo_academico
      description: update the ClaseGrupoAcademico
      operationId: ClaseGrupoAcademicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ClaseGrupoAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.ClaseGrupoAcademico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ClaseGrupoAcademico'
        "403":
          description: :id is not int
    delete:
      tags:
      - clase_grupo_academico
      description: delete the ClaseGrupoAcademico
      operationId: ClaseGrupoAcademicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /clasificacion_institucion/:
    get:
      tags:
      - clasificacion_institucion
      description: get ClasificacionInstitucion
      operationId: ClasificacionInstitucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ClasificacionInstitucion'
        "403": {}
    post:
      tags:
      - clasificacion_institucion
      description: create ClasificacionInstitucion
      operationId: ClasificacionInstitucionController.Post
      parameters:
      - in: body
        name: body
        description: body for ClasificacionInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.ClasificacionInstitucion'
      responses:
        "201":
          description: '{int} models.ClasificacionInstitucion'
        "403":
          description: body is empty
  /clasificacion_institucion/{id}:
    get:
      tags:
      - clasificacion_institucion
      description: get ClasificacionInstitucion by id
      operationId: ClasificacionInstitucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ClasificacionInstitucion'
        "403":
          description: :id is empty
    put:
      tags:
      - clasificacion_institucion
      description: update the ClasificacionInstitucion
      operationId: ClasificacionInstitucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ClasificacionInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.ClasificacionInstitucion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ClasificacionInstitucion'
        "403":
          description: :id is not int
    delete:
      tags:
      - clasificacion_institucion
      description: delete the ClasificacionInstitucion
      operationId: ClasificacionInstitucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /condicion_derechos_autor/:
    get:
      tags:
      - condicion_derechos_autor
      description: get CondicionDerechosAutor
      operationId: CondicionDerechosAutorController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CondicionDerechosAutor'
        "403": {}
    post:
      tags:
      - condicion_derechos_autor
      description: create CondicionDerechosAutor
      operationId: CondicionDerechosAutorController.Post
      parameters:
      - in: body
        name: body
        description: body for CondicionDerechosAutor content
        required: true
        schema:
          $ref: '#/definitions/models.CondicionDerechosAutor'
      responses:
        "201":
          description: '{int} models.CondicionDerechosAutor'
        "403":
          description: body is empty
  /condicion_derechos_autor/{id}:
    get:
      tags:
      - condicion_derechos_autor
      description: get CondicionDerechosAutor by id
      operationId: CondicionDerechosAutorController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CondicionDerechosAutor'
        "403":
          description: :id is empty
    put:
      tags:
      - condicion_derechos_autor
      description: update the CondicionDerechosAutor
      operationId: CondicionDerechosAutorController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CondicionDerechosAutor content
        required: true
        schema:
          $ref: '#/definitions/models.CondicionDerechosAutor'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CondicionDerechosAutor'
        "403":
          description: :id is not int
    delete:
      tags:
      - condicion_derechos_autor
      description: delete the CondicionDerechosAutor
      operationId: CondicionDerechosAutorController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /consejeria/:
    get:
      tags:
      - consejeria
      description: get Consejeria
      operationId: ConsejeriaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Consejeria'
        "403": {}
    post:
      tags:
      - consejeria
      description: create Consejeria
      operationId: ConsejeriaController.Post
      parameters:
      - in: body
        name: body
        description: body for Consejeria content
        required: true
        schema:
          $ref: '#/definitions/models.Consejeria'
      responses:
        "201":
          description: '{int} models.Consejeria'
        "403":
          description: body is empty
  /consejeria/{id}:
    get:
      tags:
      - consejeria
      description: get Consejeria by id
      operationId: ConsejeriaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Consejeria'
        "403":
          description: :id is empty
    put:
      tags:
      - consejeria
      description: update the Consejeria
      operationId: ConsejeriaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Consejeria content
        required: true
        schema:
          $ref: '#/definitions/models.Consejeria'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Consejeria'
        "403":
          description: :id is not int
    delete:
      tags:
      - consejeria
      description: delete the Consejeria
      operationId: ConsejeriaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /contenido_prog_docente/:
    get:
      tags:
      - contenido_prog_docente
      description: get ContenidoProgDocente
      operationId: ContenidoProgDocenteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ContenidoProgDocente'
        "403": {}
    post:
      tags:
      - contenido_prog_docente
      description: create ContenidoProgDocente
      operationId: ContenidoProgDocenteController.Post
      parameters:
      - in: body
        name: body
        description: body for ContenidoProgDocente content
        required: true
        schema:
          $ref: '#/definitions/models.ContenidoProgDocente'
      responses:
        "201":
          description: '{int} models.ContenidoProgDocente'
        "403":
          description: body is empty
  /contenido_prog_docente/{id}:
    get:
      tags:
      - contenido_prog_docente
      description: get ContenidoProgDocente by id
      operationId: ContenidoProgDocenteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ContenidoProgDocente'
        "403":
          description: :id is empty
    put:
      tags:
      - contenido_prog_docente
      description: update the ContenidoProgDocente
      operationId: ContenidoProgDocenteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ContenidoProgDocente content
        required: true
        schema:
          $ref: '#/definitions/models.ContenidoProgDocente'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ContenidoProgDocente'
        "403":
          description: :id is not int
    delete:
      tags:
      - contenido_prog_docente
      description: delete the ContenidoProgDocente
      operationId: ContenidoProgDocenteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /contenido_programatico/:
    get:
      tags:
      - contenido_programatico
      description: get ContenidoProgramatico
      operationId: ContenidoProgramaticoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ContenidoProgramatico'
        "403": {}
    post:
      tags:
      - contenido_programatico
      description: create ContenidoProgramatico
      operationId: ContenidoProgramaticoController.Post
      parameters:
      - in: body
        name: body
        description: body for ContenidoProgramatico content
        required: true
        schema:
          $ref: '#/definitions/models.ContenidoProgramatico'
      responses:
        "201":
          description: '{int} models.ContenidoProgramatico'
        "403":
          description: body is empty
  /contenido_programatico/{id}:
    get:
      tags:
      - contenido_programatico
      description: get ContenidoProgramatico by id
      operationId: ContenidoProgramaticoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ContenidoProgramatico'
        "403":
          description: :id is empty
    put:
      tags:
      - contenido_programatico
      description: update the ContenidoProgramatico
      operationId: ContenidoProgramaticoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ContenidoProgramatico content
        required: true
        schema:
          $ref: '#/definitions/models.ContenidoProgramatico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ContenidoProgramatico'
        "403":
          description: :id is not int
    delete:
      tags:
      - contenido_programatico
      description: delete the ContenidoProgramatico
      operationId: ContenidoProgramaticoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /control_institucion/:
    get:
      tags:
      - control_institucion
      description: get ControlInstitucion
      operationId: ControlInstitucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ControlInstitucion'
        "403": {}
    post:
      tags:
      - control_institucion
      description: create ControlInstitucion
      operationId: ControlInstitucionController.Post
      parameters:
      - in: body
        name: body
        description: body for ControlInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.ControlInstitucion'
      responses:
        "201":
          description: '{int} models.ControlInstitucion'
        "403":
          description: body is empty
  /control_institucion/{id}:
    get:
      tags:
      - control_institucion
      description: get ControlInstitucion by id
      operationId: ControlInstitucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ControlInstitucion'
        "403":
          description: :id is empty
    put:
      tags:
      - control_institucion
      description: update the ControlInstitucion
      operationId: ControlInstitucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ControlInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.ControlInstitucion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ControlInstitucion'
        "403":
          description: :id is not int
    delete:
      tags:
      - control_institucion
      description: delete the ControlInstitucion
      operationId: ControlInstitucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /corte_evaluacion/:
    get:
      tags:
      - corte_evaluacion
      description: get CorteEvaluacion
      operationId: CorteEvaluacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CorteEvaluacion'
        "403": {}
    post:
      tags:
      - corte_evaluacion
      description: create CorteEvaluacion
      operationId: CorteEvaluacionController.Post
      parameters:
      - in: body
        name: body
        description: body for CorteEvaluacion content
        required: true
        schema:
          $ref: '#/definitions/models.CorteEvaluacion'
      responses:
        "201":
          description: '{int} models.CorteEvaluacion'
        "403":
          description: body is empty
  /corte_evaluacion/{id}:
    get:
      tags:
      - corte_evaluacion
      description: get CorteEvaluacion by id
      operationId: CorteEvaluacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CorteEvaluacion'
        "403":
          description: :id is empty
    put:
      tags:
      - corte_evaluacion
      description: update the CorteEvaluacion
      operationId: CorteEvaluacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CorteEvaluacion content
        required: true
        schema:
          $ref: '#/definitions/models.CorteEvaluacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CorteEvaluacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - corte_evaluacion
      description: delete the CorteEvaluacion
      operationId: CorteEvaluacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /criterio_rubrica/:
    get:
      tags:
      - criterio_rubrica
      description: get CriterioRubrica
      operationId: CriterioRubricaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CriterioRubrica'
        "403": {}
    post:
      tags:
      - criterio_rubrica
      description: create CriterioRubrica
      operationId: CriterioRubricaController.Post
      parameters:
      - in: body
        name: body
        description: body for CriterioRubrica content
        required: true
        schema:
          $ref: '#/definitions/models.CriterioRubrica'
      responses:
        "201":
          description: '{int} models.CriterioRubrica'
        "403":
          description: body is empty
  /criterio_rubrica/{id}:
    get:
      tags:
      - criterio_rubrica
      description: get CriterioRubrica by id
      operationId: CriterioRubricaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CriterioRubrica'
        "403":
          description: :id is empty
    put:
      tags:
      - criterio_rubrica
      description: update the CriterioRubrica
      operationId: CriterioRubricaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CriterioRubrica content
        required: true
        schema:
          $ref: '#/definitions/models.CriterioRubrica'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CriterioRubrica'
        "403":
          description: :id is not int
    delete:
      tags:
      - criterio_rubrica
      description: delete the CriterioRubrica
      operationId: CriterioRubricaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /demografia_estudiante/:
    get:
      tags:
      - demografia_estudiante
      description: get DemografiaEstudiante
      operationId: DemografiaEstudianteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.DemografiaEstudiante'
        "403": {}
    post:
      tags:
      - demografia_estudiante
      description: create DemografiaEstudiante
      operationId: DemografiaEstudianteController.Post
      parameters:
      - in: body
        name: body
        description: body for DemografiaEstudiante content
        required: true
        schema:
          $ref: '#/definitions/models.DemografiaEstudiante'
      responses:
        "201":
          description: '{int} models.DemografiaEstudiante'
        "403":
          description: body is empty
  /demografia_estudiante/{id}:
    get:
      tags:
      - demografia_estudiante
      description: get DemografiaEstudiante by id
      operationId: DemografiaEstudianteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.DemografiaEstudiante'
        "403":
          description: :id is empty
    put:
      tags:
      - demografia_estudiante
      description: update the DemografiaEstudiante
      operationId: DemografiaEstudianteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DemografiaEstudiante content
        required: true
        schema:
          $ref: '#/definitions/models.DemografiaEstudiante'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.DemografiaEstudiante'
        "403":
          description: :id is not int
    delete:
      tags:
      - demografia_estudiante
      description: delete the DemografiaEstudiante
      operationId: DemografiaEstudianteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /dia_asesoria_docente/:
    get:
      tags:
      - dia_asesoria_docente
      description: get DiaAsesoriaDocente
      operationId: DiaAsesoriaDocenteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.DiaAsesoriaDocente'
        "403": {}
    post:
      tags:
      - dia_asesoria_docente
      description: create DiaAsesoriaDocente
      operationId: DiaAsesoriaDocenteController.Post
      parameters:
      - in: body
        name: body
        description: body for DiaAsesoriaDocente content
        required: true
        schema:
          $ref: '#/definitions/models.DiaAsesoriaDocente'
      responses:
        "201":
          description: '{int} models.DiaAsesoriaDocente'
        "403":
          description: body is empty
  /dia_asesoria_docente/{id}:
    get:
      tags:
      - dia_asesoria_docente
      description: get DiaAsesoriaDocente by id
      operationId: DiaAsesoriaDocenteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.DiaAsesoriaDocente'
        "403":
          description: :id is empty
    put:
      tags:
      - dia_asesoria_docente
      description: update the DiaAsesoriaDocente
      operationId: DiaAsesoriaDocenteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DiaAsesoriaDocente content
        required: true
        schema:
          $ref: '#/definitions/models.DiaAsesoriaDocente'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.DiaAsesoriaDocente'
        "403":
          description: :id is not int
    delete:
      tags:
      - dia_asesoria_docente
      description: delete the DiaAsesoriaDocente
      operationId: DiaAsesoriaDocenteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /educacion_distancia/:
    get:
      tags:
      - educacion_distancia
      description: get EducacionDistancia
      operationId: EducacionDistanciaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EducacionDistancia'
        "403": {}
    post:
      tags:
      - educacion_distancia
      description: create EducacionDistancia
      operationId: EducacionDistanciaController.Post
      parameters:
      - in: body
        name: body
        description: body for EducacionDistancia content
        required: true
        schema:
          $ref: '#/definitions/models.EducacionDistancia'
      responses:
        "201":
          description: '{int} models.EducacionDistancia'
        "403":
          description: body is empty
  /educacion_distancia/{id}:
    get:
      tags:
      - educacion_distancia
      description: get EducacionDistancia by id
      operationId: EducacionDistanciaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EducacionDistancia'
        "403":
          description: :id is empty
    put:
      tags:
      - educacion_distancia
      description: update the EducacionDistancia
      operationId: EducacionDistanciaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EducacionDistancia content
        required: true
        schema:
          $ref: '#/definitions/models.EducacionDistancia'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EducacionDistancia'
        "403":
          description: :id is not int
    delete:
      tags:
      - educacion_distancia
      description: delete the EducacionDistancia
      operationId: EducacionDistanciaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /empleado/:
    get:
      tags:
      - empleado
      description: get Empleado
      operationId: EmpleadoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Empleado'
        "403": {}
    post:
      tags:
      - empleado
      description: create Empleado
      operationId: EmpleadoController.Post
      parameters:
      - in: body
        name: body
        description: body for Empleado content
        required: true
        schema:
          $ref: '#/definitions/models.Empleado'
      responses:
        "201":
          description: '{int} models.Empleado'
        "403":
          description: body is empty
  /empleado/{id}:
    get:
      tags:
      - empleado
      description: get Empleado by id
      operationId: EmpleadoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Empleado'
        "403":
          description: :id is empty
    put:
      tags:
      - empleado
      description: update the Empleado
      operationId: EmpleadoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Empleado content
        required: true
        schema:
          $ref: '#/definitions/models.Empleado'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Empleado'
        "403":
          description: :id is not int
    delete:
      tags:
      - empleado
      description: delete the Empleado
      operationId: EmpleadoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /empleado_postsecundaria/:
    get:
      tags:
      - empleado_postsecundaria
      description: get EmpleadoPostsecundaria
      operationId: EmpleadoPostsecundariaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EmpleadoPostsecundaria'
        "403": {}
    post:
      tags:
      - empleado_postsecundaria
      description: create EmpleadoPostsecundaria
      operationId: EmpleadoPostsecundariaController.Post
      parameters:
      - in: body
        name: body
        description: body for EmpleadoPostsecundaria content
        required: true
        schema:
          $ref: '#/definitions/models.EmpleadoPostsecundaria'
      responses:
        "201":
          description: '{int} models.EmpleadoPostsecundaria'
        "403":
          description: body is empty
  /empleado_postsecundaria/{id}:
    get:
      tags:
      - empleado_postsecundaria
      description: get EmpleadoPostsecundaria by id
      operationId: EmpleadoPostsecundariaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EmpleadoPostsecundaria'
        "403":
          description: :id is empty
    put:
      tags:
      - empleado_postsecundaria
      description: update the EmpleadoPostsecundaria
      operationId: EmpleadoPostsecundariaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EmpleadoPostsecundaria content
        required: true
        schema:
          $ref: '#/definitions/models.EmpleadoPostsecundaria'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EmpleadoPostsecundaria'
        "403":
          description: :id is not int
    delete:
      tags:
      - empleado_postsecundaria
      description: delete the EmpleadoPostsecundaria
      operationId: EmpleadoPostsecundariaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /empleo_estudiante/:
    get:
      tags:
      - empleo_estudiante
      description: get EmpleoEstudiante
      operationId: EmpleoEstudianteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EmpleoEstudiante'
        "403": {}
    post:
      tags:
      - empleo_estudiante
      description: create EmpleoEstudiante
      operationId: EmpleoEstudianteController.Post
      parameters:
      - in: body
        name: body
        description: body for EmpleoEstudiante content
        required: true
        schema:
          $ref: '#/definitions/models.EmpleoEstudiante'
      responses:
        "201":
          description: '{int} models.EmpleoEstudiante'
        "403":
          description: body is empty
  /empleo_estudiante/{id}:
    get:
      tags:
      - empleo_estudiante
      description: get EmpleoEstudiante by id
      operationId: EmpleoEstudianteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EmpleoEstudiante'
        "403":
          description: :id is empty
    put:
      tags:
      - empleo_estudiante
      description: update the EmpleoEstudiante
      operationId: EmpleoEstudianteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EmpleoEstudiante content
        required: true
        schema:
          $ref: '#/definitions/models.EmpleoEstudiante'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EmpleoEstudiante'
        "403":
          description: :id is not int
    delete:
      tags:
      - empleo_estudiante
      description: delete the EmpleoEstudiante
      operationId: EmpleoEstudianteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /espacio_academico/:
    get:
      tags:
      - espacio_academico
      description: get EspacioAcademico
      operationId: EspacioAcademicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspacioAcademico'
        "403": {}
    post:
      tags:
      - espacio_academico
      description: create EspacioAcademico
      operationId: EspacioAcademicoController.Post
      parameters:
      - in: body
        name: body
        description: body for EspacioAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.EspacioAcademico'
      responses:
        "201":
          description: '{int} models.EspacioAcademico'
        "403":
          description: body is empty
  /espacio_academico/{id}:
    get:
      tags:
      - espacio_academico
      description: get EspacioAcademico by id
      operationId: EspacioAcademicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspacioAcademico'
        "403":
          description: :id is empty
    put:
      tags:
      - espacio_academico
      description: update the EspacioAcademico
      operationId: EspacioAcademicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EspacioAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.EspacioAcademico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspacioAcademico'
        "403":
          description: :id is not int
    delete:
      tags:
      - espacio_academico
      description: delete the EspacioAcademico
      operationId: EspacioAcademicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /espacio_academico_pregrado/:
    get:
      tags:
      - espacio_academico_pregrado
      description: get EspacioAcademicoPregrado
      operationId: EspacioAcademicoPregradoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspacioAcademicoPregrado'
        "403": {}
    post:
      tags:
      - espacio_academico_pregrado
      description: create EspacioAcademicoPregrado
      operationId: EspacioAcademicoPregradoController.Post
      parameters:
      - in: body
        name: body
        description: body for EspacioAcademicoPregrado content
        required: true
        schema:
          $ref: '#/definitions/models.EspacioAcademicoPregrado'
      responses:
        "201":
          description: '{int} models.EspacioAcademicoPregrado'
        "403":
          description: body is empty
  /espacio_academico_pregrado/{id}:
    get:
      tags:
      - espacio_academico_pregrado
      description: get EspacioAcademicoPregrado by id
      operationId: EspacioAcademicoPregradoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspacioAcademicoPregrado'
        "403":
          description: :id is empty
    put:
      tags:
      - espacio_academico_pregrado
      description: update the EspacioAcademicoPregrado
      operationId: EspacioAcademicoPregradoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EspacioAcademicoPregrado content
        required: true
        schema:
          $ref: '#/definitions/models.EspacioAcademicoPregrado'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspacioAcademicoPregrado'
        "403":
          description: :id is not int
    delete:
      tags:
      - espacio_academico_pregrado
      description: delete the EspacioAcademicoPregrado
      operationId: EspacioAcademicoPregradoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /espacio_fisico/:
    get:
      tags:
      - espacio_fisico
      description: get EspacioFisico
      operationId: EspacioFisicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspacioFisico'
        "403": {}
    post:
      tags:
      - espacio_fisico
      description: create EspacioFisico
      operationId: EspacioFisicoController.Post
      parameters:
      - in: body
        name: body
        description: body for EspacioFisico content
        required: true
        schema:
          $ref: '#/definitions/models.EspacioFisico'
      responses:
        "201":
          description: '{int} models.EspacioFisico'
        "403":
          description: body is empty
  /espacio_fisico/{id}:
    get:
      tags:
      - espacio_fisico
      description: get EspacioFisico by id
      operationId: EspacioFisicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspacioFisico'
        "403":
          description: :id is empty
    put:
      tags:
      - espacio_fisico
      description: update the EspacioFisico
      operationId: EspacioFisicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EspacioFisico content
        required: true
        schema:
          $ref: '#/definitions/models.EspacioFisico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspacioFisico'
        "403":
          description: :id is not int
    delete:
      tags:
      - espacio_fisico
      description: delete the EspacioFisico
      operationId: EspacioFisicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /espacios_homologables/:
    get:
      tags:
      - espacios_homologables
      description: get EspaciosHomologables
      operationId: EspaciosHomologablesController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspaciosHomologables'
        "403": {}
    post:
      tags:
      - espacios_homologables
      description: create EspaciosHomologables
      operationId: EspaciosHomologablesController.Post
      parameters:
      - in: body
        name: body
        description: body for EspaciosHomologables content
        required: true
        schema:
          $ref: '#/definitions/models.EspaciosHomologables'
      responses:
        "201":
          description: '{int} models.EspaciosHomologables'
        "403":
          description: body is empty
  /espacios_homologables/{id}:
    get:
      tags:
      - espacios_homologables
      description: get EspaciosHomologables by id
      operationId: EspaciosHomologablesController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspaciosHomologables'
        "403":
          description: :id is empty
    put:
      tags:
      - espacios_homologables
      description: update the EspaciosHomologables
      operationId: EspaciosHomologablesController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EspaciosHomologables content
        required: true
        schema:
          $ref: '#/definitions/models.EspaciosHomologables'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspaciosHomologables'
        "403":
          description: :id is not int
    delete:
      tags:
      - espacios_homologables
      description: delete the EspaciosHomologables
      operationId: EspaciosHomologablesController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /espacios_prerrequisitos/:
    get:
      tags:
      - espacios_prerrequisitos
      description: get EspaciosPrerrequisitos
      operationId: EspaciosPrerrequisitosController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspaciosPrerrequisitos'
        "403": {}
    post:
      tags:
      - espacios_prerrequisitos
      description: create EspaciosPrerrequisitos
      operationId: EspaciosPrerrequisitosController.Post
      parameters:
      - in: body
        name: body
        description: body for EspaciosPrerrequisitos content
        required: true
        schema:
          $ref: '#/definitions/models.EspaciosPrerrequisitos'
      responses:
        "201":
          description: '{int} models.EspaciosPrerrequisitos'
        "403":
          description: body is empty
  /espacios_prerrequisitos/{id}:
    get:
      tags:
      - espacios_prerrequisitos
      description: get EspaciosPrerrequisitos by id
      operationId: EspaciosPrerrequisitosController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspaciosPrerrequisitos'
        "403":
          description: :id is empty
    put:
      tags:
      - espacios_prerrequisitos
      description: update the EspaciosPrerrequisitos
      operationId: EspaciosPrerrequisitosController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EspaciosPrerrequisitos content
        required: true
        schema:
          $ref: '#/definitions/models.EspaciosPrerrequisitos'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EspaciosPrerrequisitos'
        "403":
          description: :id is not int
    delete:
      tags:
      - espacios_prerrequisitos
      description: delete the EspaciosPrerrequisitos
      operationId: EspaciosPrerrequisitosController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /esquema_identificacion_org/:
    get:
      tags:
      - esquema_identificacion_org
      description: get EsquemaIdentificacionOrg
      operationId: EsquemaIdentificacionOrgController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EsquemaIdentificacionOrg'
        "403": {}
    post:
      tags:
      - esquema_identificacion_org
      description: create EsquemaIdentificacionOrg
      operationId: EsquemaIdentificacionOrgController.Post
      parameters:
      - in: body
        name: body
        description: body for EsquemaIdentificacionOrg content
        required: true
        schema:
          $ref: '#/definitions/models.EsquemaIdentificacionOrg'
      responses:
        "201":
          description: '{int} models.EsquemaIdentificacionOrg'
        "403":
          description: body is empty
  /esquema_identificacion_org/{id}:
    get:
      tags:
      - esquema_identificacion_org
      description: get EsquemaIdentificacionOrg by id
      operationId: EsquemaIdentificacionOrgController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EsquemaIdentificacionOrg'
        "403":
          description: :id is empty
    put:
      tags:
      - esquema_identificacion_org
      description: update the EsquemaIdentificacionOrg
      operationId: EsquemaIdentificacionOrgController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EsquemaIdentificacionOrg content
        required: true
        schema:
          $ref: '#/definitions/models.EsquemaIdentificacionOrg'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EsquemaIdentificacionOrg'
        "403":
          description: :id is not int
    delete:
      tags:
      - esquema_identificacion_org
      description: delete the EsquemaIdentificacionOrg
      operationId: EsquemaIdentificacionOrgController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado_dependencia/:
    get:
      tags:
      - estado_dependencia
      description: get EstadoDependencia
      operationId: EstadoDependenciaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoDependencia'
        "403": {}
    post:
      tags:
      - estado_dependencia
      description: create EstadoDependencia
      operationId: EstadoDependenciaController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoDependencia content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoDependencia'
      responses:
        "201":
          description: '{int} models.EstadoDependencia'
        "403":
          description: body is empty
  /estado_dependencia/{id}:
    get:
      tags:
      - estado_dependencia
      description: get EstadoDependencia by id
      operationId: EstadoDependenciaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoDependencia'
        "403":
          description: :id is empty
    put:
      tags:
      - estado_dependencia
      description: update the EstadoDependencia
      operationId: EstadoDependenciaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoDependencia content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoDependencia'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoDependencia'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado_dependencia
      description: delete the EstadoDependencia
      operationId: EstadoDependenciaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado_empleo/:
    get:
      tags:
      - estado_empleo
      description: get EstadoEmpleo
      operationId: EstadoEmpleoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoEmpleo'
        "403": {}
    post:
      tags:
      - estado_empleo
      description: create EstadoEmpleo
      operationId: EstadoEmpleoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoEmpleo content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoEmpleo'
      responses:
        "201":
          description: '{int} models.EstadoEmpleo'
        "403":
          description: body is empty
  /estado_empleo/{id}:
    get:
      tags:
      - estado_empleo
      description: get EstadoEmpleo by id
      operationId: EstadoEmpleoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoEmpleo'
        "403":
          description: :id is empty
    put:
      tags:
      - estado_empleo
      description: update the EstadoEmpleo
      operationId: EstadoEmpleoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoEmpleo content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoEmpleo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoEmpleo'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado_empleo
      description: delete the EstadoEmpleo
      operationId: EstadoEmpleoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado_estudiante_proyecto/:
    get:
      tags:
      - estado_estudiante_proyecto
      description: get EstadoEstudianteProyecto
      operationId: EstadoEstudianteProyectoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoEstudianteProyecto'
        "403": {}
    post:
      tags:
      - estado_estudiante_proyecto
      description: create EstadoEstudianteProyecto
      operationId: EstadoEstudianteProyectoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoEstudianteProyecto content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoEstudianteProyecto'
      responses:
        "201":
          description: '{int} models.EstadoEstudianteProyecto'
        "403":
          description: body is empty
  /estado_estudiante_proyecto/{id}:
    get:
      tags:
      - estado_estudiante_proyecto
      description: get EstadoEstudianteProyecto by id
      operationId: EstadoEstudianteProyectoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoEstudianteProyecto'
        "403":
          description: :id is empty
    put:
      tags:
      - estado_estudiante_proyecto
      description: update the EstadoEstudianteProyecto
      operationId: EstadoEstudianteProyectoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoEstudianteProyecto content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoEstudianteProyecto'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoEstudianteProyecto'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado_estudiante_proyecto
      description: delete the EstadoEstudianteProyecto
      operationId: EstadoEstudianteProyectoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado_grupo/:
    get:
      tags:
      - estado_grupo
      description: get EstadoGrupo
      operationId: EstadoGrupoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoGrupo'
        "403": {}
    post:
      tags:
      - estado_grupo
      description: create EstadoGrupo
      operationId: EstadoGrupoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoGrupo content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoGrupo'
      responses:
        "201":
          description: '{int} models.EstadoGrupo'
        "403":
          description: body is empty
  /estado_grupo/{id}:
    get:
      tags:
      - estado_grupo
      description: get EstadoGrupo by id
      operationId: EstadoGrupoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoGrupo'
        "403":
          description: :id is empty
    put:
      tags:
      - estado_grupo
      description: update the EstadoGrupo
      operationId: EstadoGrupoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoGrupo content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoGrupo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoGrupo'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado_grupo
      description: delete the EstadoGrupo
      operationId: EstadoGrupoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado_rol/:
    get:
      tags:
      - estado_rol
      description: get EstadoRol
      operationId: EstadoRolController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoRol'
        "403": {}
    post:
      tags:
      - estado_rol
      description: create EstadoRol
      operationId: EstadoRolController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoRol content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoRol'
      responses:
        "201":
          description: '{int} models.EstadoRol'
        "403":
          description: body is empty
  /estado_rol/{id}:
    get:
      tags:
      - estado_rol
      description: get EstadoRol by id
      operationId: EstadoRolController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoRol'
        "403":
          description: :id is empty
    put:
      tags:
      - estado_rol
      description: update the EstadoRol
      operationId: EstadoRolController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoRol content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoRol'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoRol'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado_rol
      description: delete the EstadoRol
      operationId: EstadoRolController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado_tiempo_completo/:
    get:
      tags:
      - estado_tiempo_completo
      description: get EstadoTiempoCompleto
      operationId: EstadoTiempoCompletoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoTiempoCompleto'
        "403": {}
    post:
      tags:
      - estado_tiempo_completo
      description: create EstadoTiempoCompleto
      operationId: EstadoTiempoCompletoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoTiempoCompleto content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoTiempoCompleto'
      responses:
        "201":
          description: '{int} models.EstadoTiempoCompleto'
        "403":
          description: body is empty
  /estado_tiempo_completo/{id}:
    get:
      tags:
      - estado_tiempo_completo
      description: get EstadoTiempoCompleto by id
      operationId: EstadoTiempoCompletoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoTiempoCompleto'
        "403":
          description: :id is empty
    put:
      tags:
      - estado_tiempo_completo
      description: update the EstadoTiempoCompleto
      operationId: EstadoTiempoCompletoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoTiempoCompleto content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoTiempoCompleto'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoTiempoCompleto'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado_tiempo_completo
      description: delete the EstadoTiempoCompleto
      operationId: EstadoTiempoCompletoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado_tiempo_matricula/:
    get:
      tags:
      - estado_tiempo_matricula
      description: get EstadoTiempoMatricula
      operationId: EstadoTiempoMatriculaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoTiempoMatricula'
        "403": {}
    post:
      tags:
      - estado_tiempo_matricula
      description: create EstadoTiempoMatricula
      operationId: EstadoTiempoMatriculaController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoTiempoMatricula content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoTiempoMatricula'
      responses:
        "201":
          description: '{int} models.EstadoTiempoMatricula'
        "403":
          description: body is empty
  /estado_tiempo_matricula/{id}:
    get:
      tags:
      - estado_tiempo_matricula
      description: get EstadoTiempoMatricula by id
      operationId: EstadoTiempoMatriculaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoTiempoMatricula'
        "403":
          description: :id is empty
    put:
      tags:
      - estado_tiempo_matricula
      description: update the EstadoTiempoMatricula
      operationId: EstadoTiempoMatriculaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoTiempoMatricula content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoTiempoMatricula'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoTiempoMatricula'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado_tiempo_matricula
      description: delete the EstadoTiempoMatricula
      operationId: EstadoTiempoMatriculaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estudiante_proyecto/:
    get:
      tags:
      - estudiante_proyecto
      description: get EstudianteProyecto
      operationId: EstudianteProyectoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstudianteProyecto'
        "403": {}
    post:
      tags:
      - estudiante_proyecto
      description: create EstudianteProyecto
      operationId: EstudianteProyectoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstudianteProyecto content
        required: true
        schema:
          $ref: '#/definitions/models.EstudianteProyecto'
      responses:
        "201":
          description: '{int} models.EstudianteProyecto'
        "403":
          description: body is empty
  /estudiante_proyecto/{id}:
    get:
      tags:
      - estudiante_proyecto
      description: get EstudianteProyecto by id
      operationId: EstudianteProyectoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstudianteProyecto'
        "403":
          description: :id is empty
    put:
      tags:
      - estudiante_proyecto
      description: update the EstudianteProyecto
      operationId: EstudianteProyectoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstudianteProyecto content
        required: true
        schema:
          $ref: '#/definitions/models.EstudianteProyecto'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstudianteProyecto'
        "403":
          description: :id is not int
    delete:
      tags:
      - estudiante_proyecto
      description: delete the EstudianteProyecto
      operationId: EstudianteProyectoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estudiante_proyecto_plan_estudios/:
    get:
      tags:
      - estudiante_proyecto_plan_estudios
      description: get EstudianteProyectoPlanEstudios
      operationId: EstudianteProyectoPlanEstudiosController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstudianteProyectoPlanEstudios'
        "403": {}
    post:
      tags:
      - estudiante_proyecto_plan_estudios
      description: create EstudianteProyectoPlanEstudios
      operationId: EstudianteProyectoPlanEstudiosController.Post
      parameters:
      - in: body
        name: body
        description: body for EstudianteProyectoPlanEstudios content
        required: true
        schema:
          $ref: '#/definitions/models.EstudianteProyectoPlanEstudios'
      responses:
        "201":
          description: '{int} models.EstudianteProyectoPlanEstudios'
        "403":
          description: body is empty
  /estudiante_proyecto_plan_estudios/{id}:
    get:
      tags:
      - estudiante_proyecto_plan_estudios
      description: get EstudianteProyectoPlanEstudios by id
      operationId: EstudianteProyectoPlanEstudiosController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstudianteProyectoPlanEstudios'
        "403":
          description: :id is empty
    put:
      tags:
      - estudiante_proyecto_plan_estudios
      description: update the EstudianteProyectoPlanEstudios
      operationId: EstudianteProyectoPlanEstudiosController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstudianteProyectoPlanEstudios content
        required: true
        schema:
          $ref: '#/definitions/models.EstudianteProyectoPlanEstudios'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstudianteProyectoPlanEstudios'
        "403":
          description: :id is not int
    delete:
      tags:
      - estudiante_proyecto_plan_estudios
      description: delete the EstudianteProyectoPlanEstudios
      operationId: EstudianteProyectoPlanEstudiosController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /evento_organizacion/:
    get:
      tags:
      - evento_organizacion
      description: get EventoOrganizacion
      operationId: EventoOrganizacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EventoOrganizacion'
        "403": {}
    post:
      tags:
      - evento_organizacion
      description: create EventoOrganizacion
      operationId: EventoOrganizacionController.Post
      parameters:
      - in: body
        name: body
        description: body for EventoOrganizacion content
        required: true
        schema:
          $ref: '#/definitions/models.EventoOrganizacion'
      responses:
        "201":
          description: '{int} models.EventoOrganizacion'
        "403":
          description: body is empty
  /evento_organizacion/{id}:
    get:
      tags:
      - evento_organizacion
      description: get EventoOrganizacion by id
      operationId: EventoOrganizacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EventoOrganizacion'
        "403":
          description: :id is empty
    put:
      tags:
      - evento_organizacion
      description: update the EventoOrganizacion
      operationId: EventoOrganizacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EventoOrganizacion content
        required: true
        schema:
          $ref: '#/definitions/models.EventoOrganizacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EventoOrganizacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - evento_organizacion
      description: delete the EventoOrganizacion
      operationId: EventoOrganizacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /formato_libro/:
    get:
      tags:
      - formato_libro
      description: get FormatoLibro
      operationId: FormatoLibroController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.FormatoLibro'
        "403": {}
    post:
      tags:
      - formato_libro
      description: create FormatoLibro
      operationId: FormatoLibroController.Post
      parameters:
      - in: body
        name: body
        description: body for FormatoLibro content
        required: true
        schema:
          $ref: '#/definitions/models.FormatoLibro'
      responses:
        "201":
          description: '{int} models.FormatoLibro'
        "403":
          description: body is empty
  /formato_libro/{id}:
    get:
      tags:
      - formato_libro
      description: get FormatoLibro by id
      operationId: FormatoLibroController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.FormatoLibro'
        "403":
          description: :id is empty
    put:
      tags:
      - formato_libro
      description: update the FormatoLibro
      operationId: FormatoLibroController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for FormatoLibro content
        required: true
        schema:
          $ref: '#/definitions/models.FormatoLibro'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.FormatoLibro'
        "403":
          description: :id is not int
    delete:
      tags:
      - formato_libro
      description: delete the FormatoLibro
      operationId: FormatoLibroController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /franja_horaria/:
    get:
      tags:
      - franja_horaria
      description: get FranjaHoraria
      operationId: FranjaHorariaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.FranjaHoraria'
        "403": {}
    post:
      tags:
      - franja_horaria
      description: create FranjaHoraria
      operationId: FranjaHorariaController.Post
      parameters:
      - in: body
        name: body
        description: body for FranjaHoraria content
        required: true
        schema:
          $ref: '#/definitions/models.FranjaHoraria'
      responses:
        "201":
          description: '{int} models.FranjaHoraria'
        "403":
          description: body is empty
  /franja_horaria/{id}:
    get:
      tags:
      - franja_horaria
      description: get FranjaHoraria by id
      operationId: FranjaHorariaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.FranjaHoraria'
        "403":
          description: :id is empty
    put:
      tags:
      - franja_horaria
      description: update the FranjaHoraria
      operationId: FranjaHorariaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for FranjaHoraria content
        required: true
        schema:
          $ref: '#/definitions/models.FranjaHoraria'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.FranjaHoraria'
        "403":
          description: :id is not int
    delete:
      tags:
      - franja_horaria
      description: delete the FranjaHoraria
      operationId: FranjaHorariaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /grupo_academico/:
    get:
      tags:
      - grupo_academico
      description: get GrupoAcademico
      operationId: GrupoAcademicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.GrupoAcademico'
        "403": {}
    post:
      tags:
      - grupo_academico
      description: create GrupoAcademico
      operationId: GrupoAcademicoController.Post
      parameters:
      - in: body
        name: body
        description: body for GrupoAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.GrupoAcademico'
      responses:
        "201":
          description: '{int} models.GrupoAcademico'
        "403":
          description: body is empty
  /grupo_academico/{id}:
    get:
      tags:
      - grupo_academico
      description: get GrupoAcademico by id
      operationId: GrupoAcademicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.GrupoAcademico'
        "403":
          description: :id is empty
    put:
      tags:
      - grupo_academico
      description: update the GrupoAcademico
      operationId: GrupoAcademicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for GrupoAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.GrupoAcademico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.GrupoAcademico'
        "403":
          description: :id is not int
    delete:
      tags:
      - grupo_academico
      description: delete the GrupoAcademico
      operationId: GrupoAcademicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /grupo_actividad/:
    get:
      tags:
      - grupo_actividad
      description: get GrupoActividad
      operationId: GrupoActividadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.GrupoActividad'
        "403": {}
    post:
      tags:
      - grupo_actividad
      description: create GrupoActividad
      operationId: GrupoActividadController.Post
      parameters:
      - in: body
        name: body
        description: body for GrupoActividad content
        required: true
        schema:
          $ref: '#/definitions/models.GrupoActividad'
      responses:
        "201":
          description: '{int} models.GrupoActividad'
        "403":
          description: body is empty
  /grupo_actividad/{id}:
    get:
      tags:
      - grupo_actividad
      description: get GrupoActividad by id
      operationId: GrupoActividadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.GrupoActividad'
        "403":
          description: :id is empty
    put:
      tags:
      - grupo_actividad
      description: update the GrupoActividad
      operationId: GrupoActividadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for GrupoActividad content
        required: true
        schema:
          $ref: '#/definitions/models.GrupoActividad'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.GrupoActividad'
        "403":
          description: :id is not int
    delete:
      tags:
      - grupo_actividad
      description: delete the GrupoActividad
      operationId: GrupoActividadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /grupo_plan_estudios/:
    get:
      tags:
      - grupo_plan_estudios
      description: get GrupoPlanEstudios
      operationId: GrupoPlanEstudiosController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.GrupoPlanEstudios'
        "403": {}
    post:
      tags:
      - grupo_plan_estudios
      description: create GrupoPlanEstudios
      operationId: GrupoPlanEstudiosController.Post
      parameters:
      - in: body
        name: body
        description: body for GrupoPlanEstudios content
        required: true
        schema:
          $ref: '#/definitions/models.GrupoPlanEstudios'
      responses:
        "201":
          description: '{int} models.GrupoPlanEstudios'
        "403":
          description: body is empty
  /grupo_plan_estudios/{id}:
    get:
      tags:
      - grupo_plan_estudios
      description: get GrupoPlanEstudios by id
      operationId: GrupoPlanEstudiosController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.GrupoPlanEstudios'
        "403":
          description: :id is empty
    put:
      tags:
      - grupo_plan_estudios
      description: update the GrupoPlanEstudios
      operationId: GrupoPlanEstudiosController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for GrupoPlanEstudios content
        required: true
        schema:
          $ref: '#/definitions/models.GrupoPlanEstudios'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.GrupoPlanEstudios'
        "403":
          description: :id is not int
    delete:
      tags:
      - grupo_plan_estudios
      description: delete the GrupoPlanEstudios
      operationId: GrupoPlanEstudiosController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /horario/:
    get:
      tags:
      - horario
      description: get Horario
      operationId: HorarioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Horario'
        "403": {}
    post:
      tags:
      - horario
      description: create Horario
      operationId: HorarioController.Post
      parameters:
      - in: body
        name: body
        description: body for Horario content
        required: true
        schema:
          $ref: '#/definitions/models.Horario'
      responses:
        "201":
          description: '{int} models.Horario'
        "403":
          description: body is empty
  /horario/{id}:
    get:
      tags:
      - horario
      description: get Horario by id
      operationId: HorarioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Horario'
        "403":
          description: :id is empty
    put:
      tags:
      - horario
      description: update the Horario
      operationId: HorarioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Horario content
        required: true
        schema:
          $ref: '#/definitions/models.Horario'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Horario'
        "403":
          description: :id is not int
    delete:
      tags:
      - horario
      description: delete the Horario
      operationId: HorarioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /identificador_organizacion/:
    get:
      tags:
      - identificador_organizacion
      description: get IdentificadorOrganizacion
      operationId: IdentificadorOrganizacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.IdentificadorOrganizacion'
        "403": {}
    post:
      tags:
      - identificador_organizacion
      description: create IdentificadorOrganizacion
      operationId: IdentificadorOrganizacionController.Post
      parameters:
      - in: body
        name: body
        description: body for IdentificadorOrganizacion content
        required: true
        schema:
          $ref: '#/definitions/models.IdentificadorOrganizacion'
      responses:
        "201":
          description: '{int} models.IdentificadorOrganizacion'
        "403":
          description: body is empty
  /identificador_organizacion/{id}:
    get:
      tags:
      - identificador_organizacion
      description: get IdentificadorOrganizacion by id
      operationId: IdentificadorOrganizacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.IdentificadorOrganizacion'
        "403":
          description: :id is empty
    put:
      tags:
      - identificador_organizacion
      description: update the IdentificadorOrganizacion
      operationId: IdentificadorOrganizacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for IdentificadorOrganizacion content
        required: true
        schema:
          $ref: '#/definitions/models.IdentificadorOrganizacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.IdentificadorOrganizacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - identificador_organizacion
      description: delete the IdentificadorOrganizacion
      operationId: IdentificadorOrganizacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /idioma/:
    get:
      tags:
      - idioma
      description: get Idioma
      operationId: IdiomaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Idioma'
        "403": {}
    post:
      tags:
      - idioma
      description: create Idioma
      operationId: IdiomaController.Post
      parameters:
      - in: body
        name: body
        description: body for Idioma content
        required: true
        schema:
          $ref: '#/definitions/models.Idioma'
      responses:
        "201":
          description: '{int} models.Idioma'
        "403":
          description: body is empty
  /idioma/{id}:
    get:
      tags:
      - idioma
      description: get Idioma by id
      operationId: IdiomaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Idioma'
        "403":
          description: :id is empty
    put:
      tags:
      - idioma
      description: update the Idioma
      operationId: IdiomaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Idioma content
        required: true
        schema:
          $ref: '#/definitions/models.Idioma'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Idioma'
        "403":
          description: :id is not int
    delete:
      tags:
      - idioma
      description: delete the Idioma
      operationId: IdiomaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /inclusion_promedio/:
    get:
      tags:
      - inclusion_promedio
      description: get InclusionPromedio
      operationId: InclusionPromedioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.InclusionPromedio'
        "403": {}
    post:
      tags:
      - inclusion_promedio
      description: create InclusionPromedio
      operationId: InclusionPromedioController.Post
      parameters:
      - in: body
        name: body
        description: body for InclusionPromedio content
        required: true
        schema:
          $ref: '#/definitions/models.InclusionPromedio'
      responses:
        "201":
          description: '{int} models.InclusionPromedio'
        "403":
          description: body is empty
  /inclusion_promedio/{id}:
    get:
      tags:
      - inclusion_promedio
      description: get InclusionPromedio by id
      operationId: InclusionPromedioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.InclusionPromedio'
        "403":
          description: :id is empty
    put:
      tags:
      - inclusion_promedio
      description: update the InclusionPromedio
      operationId: InclusionPromedioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for InclusionPromedio content
        required: true
        schema:
          $ref: '#/definitions/models.InclusionPromedio'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.InclusionPromedio'
        "403":
          description: :id is not int
    delete:
      tags:
      - inclusion_promedio
      description: delete the InclusionPromedio
      operationId: InclusionPromedioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /inscripcion_grupos/:
    get:
      tags:
      - inscripcion_grupos
      description: get InscripcionGrupos
      operationId: InscripcionGruposController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.InscripcionGrupos'
        "403": {}
    post:
      tags:
      - inscripcion_grupos
      description: create InscripcionGrupos
      operationId: InscripcionGruposController.Post
      parameters:
      - in: body
        name: body
        description: body for InscripcionGrupos content
        required: true
        schema:
          $ref: '#/definitions/models.InscripcionGrupos'
      responses:
        "201":
          description: '{int} models.InscripcionGrupos'
        "403":
          description: body is empty
  /inscripcion_grupos/{id}:
    get:
      tags:
      - inscripcion_grupos
      description: get InscripcionGrupos by id
      operationId: InscripcionGruposController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.InscripcionGrupos'
        "403":
          description: :id is empty
    put:
      tags:
      - inscripcion_grupos
      description: update the InscripcionGrupos
      operationId: InscripcionGruposController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for InscripcionGrupos content
        required: true
        schema:
          $ref: '#/definitions/models.InscripcionGrupos'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.InscripcionGrupos'
        "403":
          description: :id is not int
    delete:
      tags:
      - inscripcion_grupos
      description: delete the InscripcionGrupos
      operationId: InscripcionGruposController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /limites_creditos/:
    get:
      tags:
      - limites_creditos
      description: get LimitesCreditos
      operationId: LimitesCreditosController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.LimitesCreditos'
        "403": {}
    post:
      tags:
      - limites_creditos
      description: create LimitesCreditos
      operationId: LimitesCreditosController.Post
      parameters:
      - in: body
        name: body
        description: body for LimitesCreditos content
        required: true
        schema:
          $ref: '#/definitions/models.LimitesCreditos'
      responses:
        "201":
          description: '{int} models.LimitesCreditos'
        "403":
          description: body is empty
  /limites_creditos/{id}:
    get:
      tags:
      - limites_creditos
      description: get LimitesCreditos by id
      operationId: LimitesCreditosController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.LimitesCreditos'
        "403":
          description: :id is empty
    put:
      tags:
      - limites_creditos
      description: update the LimitesCreditos
      operationId: LimitesCreditosController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for LimitesCreditos content
        required: true
        schema:
          $ref: '#/definitions/models.LimitesCreditos'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.LimitesCreditos'
        "403":
          description: :id is not int
    delete:
      tags:
      - limites_creditos
      description: delete the LimitesCreditos
      operationId: LimitesCreditosController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /matricula_estudiante/:
    get:
      tags:
      - matricula_estudiante
      description: get MatriculaEstudiante
      operationId: MatriculaEstudianteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MatriculaEstudiante'
        "403": {}
    post:
      tags:
      - matricula_estudiante
      description: create MatriculaEstudiante
      operationId: MatriculaEstudianteController.Post
      parameters:
      - in: body
        name: body
        description: body for MatriculaEstudiante content
        required: true
        schema:
          $ref: '#/definitions/models.MatriculaEstudiante'
      responses:
        "201":
          description: '{int} models.MatriculaEstudiante'
        "403":
          description: body is empty
  /matricula_estudiante/{id}:
    get:
      tags:
      - matricula_estudiante
      description: get MatriculaEstudiante by id
      operationId: MatriculaEstudianteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MatriculaEstudiante'
        "403":
          description: :id is empty
    put:
      tags:
      - matricula_estudiante
      description: update the MatriculaEstudiante
      operationId: MatriculaEstudianteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MatriculaEstudiante content
        required: true
        schema:
          $ref: '#/definitions/models.MatriculaEstudiante'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MatriculaEstudiante'
        "403":
          description: :id is not int
    delete:
      tags:
      - matricula_estudiante
      description: delete the MatriculaEstudiante
      operationId: MatriculaEstudianteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /medio_digital/:
    get:
      tags:
      - medio_digital
      description: get MedioDigital
      operationId: MedioDigitalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MedioDigital'
        "403": {}
    post:
      tags:
      - medio_digital
      description: create MedioDigital
      operationId: MedioDigitalController.Post
      parameters:
      - in: body
        name: body
        description: body for MedioDigital content
        required: true
        schema:
          $ref: '#/definitions/models.MedioDigital'
      responses:
        "201":
          description: '{int} models.MedioDigital'
        "403":
          description: body is empty
  /medio_digital/{id}:
    get:
      tags:
      - medio_digital
      description: get MedioDigital by id
      operationId: MedioDigitalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MedioDigital'
        "403":
          description: :id is empty
    put:
      tags:
      - medio_digital
      description: update the MedioDigital
      operationId: MedioDigitalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MedioDigital content
        required: true
        schema:
          $ref: '#/definitions/models.MedioDigital'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MedioDigital'
        "403":
          description: :id is not int
    delete:
      tags:
      - medio_digital
      description: delete the MedioDigital
      operationId: MedioDigitalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /metodo_entrada_recurso/:
    get:
      tags:
      - metodo_entrada_recurso
      description: get MetodoEntradaRecurso
      operationId: MetodoEntradaRecursoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MetodoEntradaRecurso'
        "403": {}
    post:
      tags:
      - metodo_entrada_recurso
      description: create MetodoEntradaRecurso
      operationId: MetodoEntradaRecursoController.Post
      parameters:
      - in: body
        name: body
        description: body for MetodoEntradaRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.MetodoEntradaRecurso'
      responses:
        "201":
          description: '{int} models.MetodoEntradaRecurso'
        "403":
          description: body is empty
  /metodo_entrada_recurso/{id}:
    get:
      tags:
      - metodo_entrada_recurso
      description: get MetodoEntradaRecurso by id
      operationId: MetodoEntradaRecursoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MetodoEntradaRecurso'
        "403":
          description: :id is empty
    put:
      tags:
      - metodo_entrada_recurso
      description: update the MetodoEntradaRecurso
      operationId: MetodoEntradaRecursoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MetodoEntradaRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.MetodoEntradaRecurso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MetodoEntradaRecurso'
        "403":
          description: :id is not int
    delete:
      tags:
      - metodo_entrada_recurso
      description: delete the MetodoEntradaRecurso
      operationId: MetodoEntradaRecursoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /metodo_instruccion/:
    get:
      tags:
      - metodo_instruccion
      description: get MetodoInstruccion
      operationId: MetodoInstruccionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MetodoInstruccion'
        "403": {}
    post:
      tags:
      - metodo_instruccion
      description: create MetodoInstruccion
      operationId: MetodoInstruccionController.Post
      parameters:
      - in: body
        name: body
        description: body for MetodoInstruccion content
        required: true
        schema:
          $ref: '#/definitions/models.MetodoInstruccion'
      responses:
        "201":
          description: '{int} models.MetodoInstruccion'
        "403":
          description: body is empty
  /metodo_instruccion/{id}:
    get:
      tags:
      - metodo_instruccion
      description: get MetodoInstruccion by id
      operationId: MetodoInstruccionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MetodoInstruccion'
        "403":
          description: :id is empty
    put:
      tags:
      - metodo_instruccion
      description: update the MetodoInstruccion
      operationId: MetodoInstruccionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MetodoInstruccion content
        required: true
        schema:
          $ref: '#/definitions/models.MetodoInstruccion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MetodoInstruccion'
        "403":
          description: :id is not int
    delete:
      tags:
      - metodo_instruccion
      description: delete the MetodoInstruccion
      operationId: MetodoInstruccionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /metodologia_apoyo/:
    get:
      tags:
      - metodologia_apoyo
      description: get MetodologiaApoyo
      operationId: MetodologiaApoyoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MetodologiaApoyo'
        "403": {}
    post:
      tags:
      - metodologia_apoyo
      description: create MetodologiaApoyo
      operationId: MetodologiaApoyoController.Post
      parameters:
      - in: body
        name: body
        description: body for MetodologiaApoyo content
        required: true
        schema:
          $ref: '#/definitions/models.MetodologiaApoyo'
      responses:
        "201":
          description: '{int} models.MetodologiaApoyo'
        "403":
          description: body is empty
  /metodologia_apoyo/{id}:
    get:
      tags:
      - metodologia_apoyo
      description: get MetodologiaApoyo by id
      operationId: MetodologiaApoyoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MetodologiaApoyo'
        "403":
          description: :id is empty
    put:
      tags:
      - metodologia_apoyo
      description: update the MetodologiaApoyo
      operationId: MetodologiaApoyoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MetodologiaApoyo content
        required: true
        schema:
          $ref: '#/definitions/models.MetodologiaApoyo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MetodologiaApoyo'
        "403":
          description: :id is not int
    delete:
      tags:
      - metodologia_apoyo
      description: delete the MetodologiaApoyo
      operationId: MetodologiaApoyoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /modalidad_programa/:
    get:
      tags:
      - modalidad_programa
      description: get ModalidadPrograma
      operationId: ModalidadProgramaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModalidadPrograma'
        "403": {}
    post:
      tags:
      - modalidad_programa
      description: create ModalidadPrograma
      operationId: ModalidadProgramaController.Post
      parameters:
      - in: body
        name: body
        description: body for ModalidadPrograma content
        required: true
        schema:
          $ref: '#/definitions/models.ModalidadPrograma'
      responses:
        "201":
          description: '{int} models.ModalidadPrograma'
        "403":
          description: body is empty
  /modalidad_programa/{id}:
    get:
      tags:
      - modalidad_programa
      description: get ModalidadPrograma by id
      operationId: ModalidadProgramaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModalidadPrograma'
        "403":
          description: :id is empty
    put:
      tags:
      - modalidad_programa
      description: update the ModalidadPrograma
      operationId: ModalidadProgramaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ModalidadPrograma content
        required: true
        schema:
          $ref: '#/definitions/models.ModalidadPrograma'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModalidadPrograma'
        "403":
          description: :id is not int
    delete:
      tags:
      - modalidad_programa
      description: delete the ModalidadPrograma
      operationId: ModalidadProgramaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /modo_acceso/:
    get:
      tags:
      - modo_acceso
      description: get ModoAcceso
      operationId: ModoAccesoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModoAcceso'
        "403": {}
    post:
      tags:
      - modo_acceso
      description: create ModoAcceso
      operationId: ModoAccesoController.Post
      parameters:
      - in: body
        name: body
        description: body for ModoAcceso content
        required: true
        schema:
          $ref: '#/definitions/models.ModoAcceso'
      responses:
        "201":
          description: '{int} models.ModoAcceso'
        "403":
          description: body is empty
  /modo_acceso/{id}:
    get:
      tags:
      - modo_acceso
      description: get ModoAcceso by id
      operationId: ModoAccesoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModoAcceso'
        "403":
          description: :id is empty
    put:
      tags:
      - modo_acceso
      description: update the ModoAcceso
      operationId: ModoAccesoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ModoAcceso content
        required: true
        schema:
          $ref: '#/definitions/models.ModoAcceso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModoAcceso'
        "403":
          description: :id is not int
    delete:
      tags:
      - modo_acceso
      description: delete the ModoAcceso
      operationId: ModoAccesoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /modo_instruccion/:
    get:
      tags:
      - modo_instruccion
      description: get ModoInstruccion
      operationId: ModoInstruccionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModoInstruccion'
        "403": {}
    post:
      tags:
      - modo_instruccion
      description: create ModoInstruccion
      operationId: ModoInstruccionController.Post
      parameters:
      - in: body
        name: body
        description: body for ModoInstruccion content
        required: true
        schema:
          $ref: '#/definitions/models.ModoInstruccion'
      responses:
        "201":
          description: '{int} models.ModoInstruccion'
        "403":
          description: body is empty
  /modo_instruccion/{id}:
    get:
      tags:
      - modo_instruccion
      description: get ModoInstruccion by id
      operationId: ModoInstruccionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModoInstruccion'
        "403":
          description: :id is empty
    put:
      tags:
      - modo_instruccion
      description: update the ModoInstruccion
      operationId: ModoInstruccionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ModoInstruccion content
        required: true
        schema:
          $ref: '#/definitions/models.ModoInstruccion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModoInstruccion'
        "403":
          description: :id is not int
    delete:
      tags:
      - modo_instruccion
      description: delete the ModoInstruccion
      operationId: ModoInstruccionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nivel_consideracion_admision/:
    get:
      tags:
      - nivel_consideracion_admision
      description: get NivelConsideracionAdmision
      operationId: NivelConsideracionAdmisionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelConsideracionAdmision'
        "403": {}
    post:
      tags:
      - nivel_consideracion_admision
      description: create NivelConsideracionAdmision
      operationId: NivelConsideracionAdmisionController.Post
      parameters:
      - in: body
        name: body
        description: body for NivelConsideracionAdmision content
        required: true
        schema:
          $ref: '#/definitions/models.NivelConsideracionAdmision'
      responses:
        "201":
          description: '{int} models.NivelConsideracionAdmision'
        "403":
          description: body is empty
  /nivel_consideracion_admision/{id}:
    get:
      tags:
      - nivel_consideracion_admision
      description: get NivelConsideracionAdmision by id
      operationId: NivelConsideracionAdmisionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelConsideracionAdmision'
        "403":
          description: :id is empty
    put:
      tags:
      - nivel_consideracion_admision
      description: update the NivelConsideracionAdmision
      operationId: NivelConsideracionAdmisionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NivelConsideracionAdmision content
        required: true
        schema:
          $ref: '#/definitions/models.NivelConsideracionAdmision'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelConsideracionAdmision'
        "403":
          description: :id is not int
    delete:
      tags:
      - nivel_consideracion_admision
      description: delete the NivelConsideracionAdmision
      operationId: NivelConsideracionAdmisionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nivel_criterio_rubrica/:
    get:
      tags:
      - nivel_criterio_rubrica
      description: get NivelCriterioRubrica
      operationId: NivelCriterioRubricaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelCriterioRubrica'
        "403": {}
    post:
      tags:
      - nivel_criterio_rubrica
      description: create NivelCriterioRubrica
      operationId: NivelCriterioRubricaController.Post
      parameters:
      - in: body
        name: body
        description: body for NivelCriterioRubrica content
        required: true
        schema:
          $ref: '#/definitions/models.NivelCriterioRubrica'
      responses:
        "201":
          description: '{int} models.NivelCriterioRubrica'
        "403":
          description: body is empty
  /nivel_criterio_rubrica/{id}:
    get:
      tags:
      - nivel_criterio_rubrica
      description: get NivelCriterioRubrica by id
      operationId: NivelCriterioRubricaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelCriterioRubrica'
        "403":
          description: :id is empty
    put:
      tags:
      - nivel_criterio_rubrica
      description: update the NivelCriterioRubrica
      operationId: NivelCriterioRubricaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NivelCriterioRubrica content
        required: true
        schema:
          $ref: '#/definitions/models.NivelCriterioRubrica'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelCriterioRubrica'
        "403":
          description: :id is not int
    delete:
      tags:
      - nivel_criterio_rubrica
      description: delete the NivelCriterioRubrica
      operationId: NivelCriterioRubricaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nivel_educativo/:
    get:
      tags:
      - nivel_educativo
      description: get NivelEducativo
      operationId: NivelEducativoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelEducativo'
        "403": {}
    post:
      tags:
      - nivel_educativo
      description: create NivelEducativo
      operationId: NivelEducativoController.Post
      parameters:
      - in: body
        name: body
        description: body for NivelEducativo content
        required: true
        schema:
          $ref: '#/definitions/models.NivelEducativo'
      responses:
        "201":
          description: '{int} models.NivelEducativo'
        "403":
          description: body is empty
  /nivel_educativo/{id}:
    get:
      tags:
      - nivel_educativo
      description: get NivelEducativo by id
      operationId: NivelEducativoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelEducativo'
        "403":
          description: :id is empty
    put:
      tags:
      - nivel_educativo
      description: update the NivelEducativo
      operationId: NivelEducativoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NivelEducativo content
        required: true
        schema:
          $ref: '#/definitions/models.NivelEducativo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelEducativo'
        "403":
          description: :id is not int
    delete:
      tags:
      - nivel_educativo
      description: delete the NivelEducativo
      operationId: NivelEducativoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nivel_educativo_recurso/:
    get:
      tags:
      - nivel_educativo_recurso
      description: get NivelEducativoRecurso
      operationId: NivelEducativoRecursoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelEducativoRecurso'
        "403": {}
    post:
      tags:
      - nivel_educativo_recurso
      description: create NivelEducativoRecurso
      operationId: NivelEducativoRecursoController.Post
      parameters:
      - in: body
        name: body
        description: body for NivelEducativoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.NivelEducativoRecurso'
      responses:
        "201":
          description: '{int} models.NivelEducativoRecurso'
        "403":
          description: body is empty
  /nivel_educativo_recurso/{id}:
    get:
      tags:
      - nivel_educativo_recurso
      description: get NivelEducativoRecurso by id
      operationId: NivelEducativoRecursoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelEducativoRecurso'
        "403":
          description: :id is empty
    put:
      tags:
      - nivel_educativo_recurso
      description: update the NivelEducativoRecurso
      operationId: NivelEducativoRecursoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NivelEducativoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.NivelEducativoRecurso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelEducativoRecurso'
        "403":
          description: :id is not int
    delete:
      tags:
      - nivel_educativo_recurso
      description: delete the NivelEducativoRecurso
      operationId: NivelEducativoRecursoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nivel_institucion/:
    get:
      tags:
      - nivel_institucion
      description: get NivelInstitucion
      operationId: NivelInstitucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelInstitucion'
        "403": {}
    post:
      tags:
      - nivel_institucion
      description: create NivelInstitucion
      operationId: NivelInstitucionController.Post
      parameters:
      - in: body
        name: body
        description: body for NivelInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.NivelInstitucion'
      responses:
        "201":
          description: '{int} models.NivelInstitucion'
        "403":
          description: body is empty
  /nivel_institucion/{id}:
    get:
      tags:
      - nivel_institucion
      description: get NivelInstitucion by id
      operationId: NivelInstitucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelInstitucion'
        "403":
          description: :id is empty
    put:
      tags:
      - nivel_institucion
      description: update the NivelInstitucion
      operationId: NivelInstitucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NivelInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.NivelInstitucion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelInstitucion'
        "403":
          description: :id is not int
    delete:
      tags:
      - nivel_institucion
      description: delete the NivelInstitucion
      operationId: NivelInstitucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nivel_programa/:
    get:
      tags:
      - nivel_programa
      description: get NivelPrograma
      operationId: NivelProgramaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelPrograma'
        "403": {}
    post:
      tags:
      - nivel_programa
      description: create NivelPrograma
      operationId: NivelProgramaController.Post
      parameters:
      - in: body
        name: body
        description: body for NivelPrograma content
        required: true
        schema:
          $ref: '#/definitions/models.NivelPrograma'
      responses:
        "201":
          description: '{int} models.NivelPrograma'
        "403":
          description: body is empty
  /nivel_programa/{id}:
    get:
      tags:
      - nivel_programa
      description: get NivelPrograma by id
      operationId: NivelProgramaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelPrograma'
        "403":
          description: :id is empty
    put:
      tags:
      - nivel_programa
      description: update the NivelPrograma
      operationId: NivelProgramaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NivelPrograma content
        required: true
        schema:
          $ref: '#/definitions/models.NivelPrograma'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelPrograma'
        "403":
          description: :id is not int
    delete:
      tags:
      - nivel_programa
      description: delete the NivelPrograma
      operationId: NivelProgramaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nivel_semestre/:
    get:
      tags:
      - nivel_semestre
      description: get NivelSemestre
      operationId: NivelSemestreController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelSemestre'
        "403": {}
    post:
      tags:
      - nivel_semestre
      description: create NivelSemestre
      operationId: NivelSemestreController.Post
      parameters:
      - in: body
        name: body
        description: body for NivelSemestre content
        required: true
        schema:
          $ref: '#/definitions/models.NivelSemestre'
      responses:
        "201":
          description: '{int} models.NivelSemestre'
        "403":
          description: body is empty
  /nivel_semestre/{id}:
    get:
      tags:
      - nivel_semestre
      description: get NivelSemestre by id
      operationId: NivelSemestreController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelSemestre'
        "403":
          description: :id is empty
    put:
      tags:
      - nivel_semestre
      description: update the NivelSemestre
      operationId: NivelSemestreController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NivelSemestre content
        required: true
        schema:
          $ref: '#/definitions/models.NivelSemestre'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelSemestre'
        "403":
          description: :id is not int
    delete:
      tags:
      - nivel_semestre
      description: delete the NivelSemestre
      operationId: NivelSemestreController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /norma_acuerdo/:
    get:
      tags:
      - norma_acuerdo
      description: get NormaAcuerdo
      operationId: NormaAcuerdoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NormaAcuerdo'
        "403": {}
    post:
      tags:
      - norma_acuerdo
      description: create NormaAcuerdo
      operationId: NormaAcuerdoController.Post
      parameters:
      - in: body
        name: body
        description: body for NormaAcuerdo content
        required: true
        schema:
          $ref: '#/definitions/models.NormaAcuerdo'
      responses:
        "201":
          description: '{int} models.NormaAcuerdo'
        "403":
          description: body is empty
  /norma_acuerdo/{id}:
    get:
      tags:
      - norma_acuerdo
      description: get NormaAcuerdo by id
      operationId: NormaAcuerdoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NormaAcuerdo'
        "403":
          description: :id is empty
    put:
      tags:
      - norma_acuerdo
      description: update the NormaAcuerdo
      operationId: NormaAcuerdoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NormaAcuerdo content
        required: true
        schema:
          $ref: '#/definitions/models.NormaAcuerdo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NormaAcuerdo'
        "403":
          description: :id is not int
    delete:
      tags:
      - norma_acuerdo
      description: delete the NormaAcuerdo
      operationId: NormaAcuerdoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nota_estudiante/:
    get:
      tags:
      - nota_estudiante
      description: get NotaEstudiante
      operationId: NotaEstudianteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NotaEstudiante'
        "403": {}
    post:
      tags:
      - nota_estudiante
      description: create NotaEstudiante
      operationId: NotaEstudianteController.Post
      parameters:
      - in: body
        name: body
        description: body for NotaEstudiante content
        required: true
        schema:
          $ref: '#/definitions/models.NotaEstudiante'
      responses:
        "201":
          description: '{int} models.NotaEstudiante'
        "403":
          description: body is empty
  /nota_estudiante/{id}:
    get:
      tags:
      - nota_estudiante
      description: get NotaEstudiante by id
      operationId: NotaEstudianteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NotaEstudiante'
        "403":
          description: :id is empty
    put:
      tags:
      - nota_estudiante
      description: update the NotaEstudiante
      operationId: NotaEstudianteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NotaEstudiante content
        required: true
        schema:
          $ref: '#/definitions/models.NotaEstudiante'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NotaEstudiante'
        "403":
          description: :id is not int
    delete:
      tags:
      - nota_estudiante
      description: delete the NotaEstudiante
      operationId: NotaEstudianteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nucleo_basico_conocimiento/:
    get:
      tags:
      - nucleo_basico_conocimiento
      description: get NucleoBasicoConocimiento
      operationId: NucleoBasicoConocimientoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NucleoBasicoConocimiento'
        "403": {}
    post:
      tags:
      - nucleo_basico_conocimiento
      description: create NucleoBasicoConocimiento
      operationId: NucleoBasicoConocimientoController.Post
      parameters:
      - in: body
        name: body
        description: body for NucleoBasicoConocimiento content
        required: true
        schema:
          $ref: '#/definitions/models.NucleoBasicoConocimiento'
      responses:
        "201":
          description: '{int} models.NucleoBasicoConocimiento'
        "403":
          description: body is empty
  /nucleo_basico_conocimiento/{id}:
    get:
      tags:
      - nucleo_basico_conocimiento
      description: get NucleoBasicoConocimiento by id
      operationId: NucleoBasicoConocimientoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NucleoBasicoConocimiento'
        "403":
          description: :id is empty
    put:
      tags:
      - nucleo_basico_conocimiento
      description: update the NucleoBasicoConocimiento
      operationId: NucleoBasicoConocimientoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NucleoBasicoConocimiento content
        required: true
        schema:
          $ref: '#/definitions/models.NucleoBasicoConocimiento'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NucleoBasicoConocimiento'
        "403":
          description: :id is not int
    delete:
      tags:
      - nucleo_basico_conocimiento
      description: delete the NucleoBasicoConocimiento
      operationId: NucleoBasicoConocimientoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /oportunidad_aprendizaje/:
    get:
      tags:
      - oportunidad_aprendizaje
      description: get OportunidadAprendizaje
      operationId: OportunidadAprendizajeController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.OportunidadAprendizaje'
        "403": {}
    post:
      tags:
      - oportunidad_aprendizaje
      description: create OportunidadAprendizaje
      operationId: OportunidadAprendizajeController.Post
      parameters:
      - in: body
        name: body
        description: body for OportunidadAprendizaje content
        required: true
        schema:
          $ref: '#/definitions/models.OportunidadAprendizaje'
      responses:
        "201":
          description: '{int} models.OportunidadAprendizaje'
        "403":
          description: body is empty
  /oportunidad_aprendizaje/{id}:
    get:
      tags:
      - oportunidad_aprendizaje
      description: get OportunidadAprendizaje by id
      operationId: OportunidadAprendizajeController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.OportunidadAprendizaje'
        "403":
          description: :id is empty
    put:
      tags:
      - oportunidad_aprendizaje
      description: update the OportunidadAprendizaje
      operationId: OportunidadAprendizajeController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for OportunidadAprendizaje content
        required: true
        schema:
          $ref: '#/definitions/models.OportunidadAprendizaje'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.OportunidadAprendizaje'
        "403":
          description: :id is not int
    delete:
      tags:
      - oportunidad_aprendizaje
      description: delete the OportunidadAprendizaje
      operationId: OportunidadAprendizajeController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /organizacion/:
    get:
      tags:
      - organizacion
      description: get Organizacion
      operationId: OrganizacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Organizacion'
        "403": {}
    post:
      tags:
      - organizacion
      description: create Organizacion
      operationId: OrganizacionController.Post
      parameters:
      - in: body
        name: body
        description: body for Organizacion content
        required: true
        schema:
          $ref: '#/definitions/models.Organizacion'
      responses:
        "201":
          description: '{int} models.Organizacion'
        "403":
          description: body is empty
  /organizacion/{id}:
    get:
      tags:
      - organizacion
      description: get Organizacion by id
      operationId: OrganizacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Organizacion'
        "403":
          description: :id is empty
    put:
      tags:
      - organizacion
      description: update the Organizacion
      operationId: OrganizacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Organizacion content
        required: true
        schema:
          $ref: '#/definitions/models.Organizacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Organizacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - organizacion
      description: delete the Organizacion
      operationId: OrganizacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /organizacion_persona_rol/:
    get:
      tags:
      - organizacion_persona_rol
      description: get OrganizacionPersonaRol
      operationId: OrganizacionPersonaRolController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.OrganizacionPersonaRol'
        "403": {}
    post:
      tags:
      - organizacion_persona_rol
      description: create OrganizacionPersonaRol
      operationId: OrganizacionPersonaRolController.Post
      parameters:
      - in: body
        name: body
        description: body for OrganizacionPersonaRol content
        required: true
        schema:
          $ref: '#/definitions/models.OrganizacionPersonaRol'
      responses:
        "201":
          description: '{int} models.OrganizacionPersonaRol'
        "403":
          description: body is empty
  /organizacion_persona_rol/{id}:
    get:
      tags:
      - organizacion_persona_rol
      description: get OrganizacionPersonaRol by id
      operationId: OrganizacionPersonaRolController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.OrganizacionPersonaRol'
        "403":
          description: :id is empty
    put:
      tags:
      - organizacion_persona_rol
      description: update the OrganizacionPersonaRol
      operationId: OrganizacionPersonaRolController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for OrganizacionPersonaRol content
        required: true
        schema:
          $ref: '#/definitions/models.OrganizacionPersonaRol'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.OrganizacionPersonaRol'
        "403":
          description: :id is not int
    delete:
      tags:
      - organizacion_persona_rol
      description: delete the OrganizacionPersonaRol
      operationId: OrganizacionPersonaRolController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /participacion_programa/:
    get:
      tags:
      - participacion_programa
      description: get ParticipacionPrograma
      operationId: ParticipacionProgramaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ParticipacionPrograma'
        "403": {}
    post:
      tags:
      - participacion_programa
      description: create ParticipacionPrograma
      operationId: ParticipacionProgramaController.Post
      parameters:
      - in: body
        name: body
        description: body for ParticipacionPrograma content
        required: true
        schema:
          $ref: '#/definitions/models.ParticipacionPrograma'
      responses:
        "201":
          description: '{int} models.ParticipacionPrograma'
        "403":
          description: body is empty
  /participacion_programa/{id}:
    get:
      tags:
      - participacion_programa
      description: get ParticipacionPrograma by id
      operationId: ParticipacionProgramaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ParticipacionPrograma'
        "403":
          description: :id is empty
    put:
      tags:
      - participacion_programa
      description: update the ParticipacionPrograma
      operationId: ParticipacionProgramaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ParticipacionPrograma content
        required: true
        schema:
          $ref: '#/definitions/models.ParticipacionPrograma'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ParticipacionPrograma'
        "403":
          description: :id is not int
    delete:
      tags:
      - participacion_programa
      description: delete the ParticipacionPrograma
      operationId: ParticipacionProgramaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /perfil_titulacion/:
    get:
      tags:
      - perfil_titulacion
      description: get PerfilTitulacion
      operationId: PerfilTitulacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PerfilTitulacion'
        "403": {}
    post:
      tags:
      - perfil_titulacion
      description: create PerfilTitulacion
      operationId: PerfilTitulacionController.Post
      parameters:
      - in: body
        name: body
        description: body for PerfilTitulacion content
        required: true
        schema:
          $ref: '#/definitions/models.PerfilTitulacion'
      responses:
        "201":
          description: '{int} models.PerfilTitulacion'
        "403":
          description: body is empty
  /perfil_titulacion/{id}:
    get:
      tags:
      - perfil_titulacion
      description: get PerfilTitulacion by id
      operationId: PerfilTitulacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PerfilTitulacion'
        "403":
          description: :id is empty
    put:
      tags:
      - perfil_titulacion
      description: update the PerfilTitulacion
      operationId: PerfilTitulacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PerfilTitulacion content
        required: true
        schema:
          $ref: '#/definitions/models.PerfilTitulacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PerfilTitulacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - perfil_titulacion
      description: delete the PerfilTitulacion
      operationId: PerfilTitulacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /persona/:
    get:
      tags:
      - persona
      description: get Persona
      operationId: PersonaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Persona'
        "403": {}
    post:
      tags:
      - persona
      description: create Persona
      operationId: PersonaController.Post
      parameters:
      - in: body
        name: body
        description: body for Persona content
        required: true
        schema:
          $ref: '#/definitions/models.Persona'
      responses:
        "201":
          description: '{int} models.Persona'
        "403":
          description: body is empty
  /persona/{id}:
    get:
      tags:
      - persona
      description: get Persona by id
      operationId: PersonaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Persona'
        "403":
          description: :id is empty
    put:
      tags:
      - persona
      description: update the Persona
      operationId: PersonaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Persona content
        required: true
        schema:
          $ref: '#/definitions/models.Persona'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Persona'
        "403":
          description: :id is not int
    delete:
      tags:
      - persona
      description: delete the Persona
      operationId: PersonaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /plan_estudios/:
    get:
      tags:
      - plan_estudios
      description: get PlanEstudios
      operationId: PlanEstudiosController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PlanEstudios'
        "403": {}
    post:
      tags:
      - plan_estudios
      description: create PlanEstudios
      operationId: PlanEstudiosController.Post
      parameters:
      - in: body
        name: body
        description: body for PlanEstudios content
        required: true
        schema:
          $ref: '#/definitions/models.PlanEstudios'
      responses:
        "201":
          description: '{int} models.PlanEstudios'
        "403":
          description: body is empty
  /plan_estudios/{id}:
    get:
      tags:
      - plan_estudios
      description: get PlanEstudios by id
      operationId: PlanEstudiosController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PlanEstudios'
        "403":
          description: :id is empty
    put:
      tags:
      - plan_estudios
      description: update the PlanEstudios
      operationId: PlanEstudiosController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PlanEstudios content
        required: true
        schema:
          $ref: '#/definitions/models.PlanEstudios'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PlanEstudios'
        "403":
          description: :id is not int
    delete:
      tags:
      - plan_estudios
      description: delete the PlanEstudios
      operationId: PlanEstudiosController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /plan_estudios_espacio/:
    get:
      tags:
      - plan_estudios_espacio
      description: get PlanEstudiosEspacio
      operationId: PlanEstudiosEspacioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PlanEstudiosEspacio'
        "403": {}
    post:
      tags:
      - plan_estudios_espacio
      description: create PlanEstudiosEspacio
      operationId: PlanEstudiosEspacioController.Post
      parameters:
      - in: body
        name: body
        description: body for PlanEstudiosEspacio content
        required: true
        schema:
          $ref: '#/definitions/models.PlanEstudiosEspacio'
      responses:
        "201":
          description: '{int} models.PlanEstudiosEspacio'
        "403":
          description: body is empty
  /plan_estudios_espacio/{id}:
    get:
      tags:
      - plan_estudios_espacio
      description: get PlanEstudiosEspacio by id
      operationId: PlanEstudiosEspacioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PlanEstudiosEspacio'
        "403":
          description: :id is empty
    put:
      tags:
      - plan_estudios_espacio
      description: update the PlanEstudiosEspacio
      operationId: PlanEstudiosEspacioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PlanEstudiosEspacio content
        required: true
        schema:
          $ref: '#/definitions/models.PlanEstudiosEspacio'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PlanEstudiosEspacio'
        "403":
          description: :id is not int
    delete:
      tags:
      - plan_estudios_espacio
      description: delete the PlanEstudiosEspacio
      operationId: PlanEstudiosEspacioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /preinscripcion_espacios/:
    get:
      tags:
      - preinscripcion_espacios
      description: get PreinscripcionEspacios
      operationId: PreinscripcionEspaciosController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PreinscripcionEspacios'
        "403": {}
    post:
      tags:
      - preinscripcion_espacios
      description: create PreinscripcionEspacios
      operationId: PreinscripcionEspaciosController.Post
      parameters:
      - in: body
        name: body
        description: body for PreinscripcionEspacios content
        required: true
        schema:
          $ref: '#/definitions/models.PreinscripcionEspacios'
      responses:
        "201":
          description: '{int} models.PreinscripcionEspacios'
        "403":
          description: body is empty
  /preinscripcion_espacios/{id}:
    get:
      tags:
      - preinscripcion_espacios
      description: get PreinscripcionEspacios by id
      operationId: PreinscripcionEspaciosController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PreinscripcionEspacios'
        "403":
          description: :id is empty
    put:
      tags:
      - preinscripcion_espacios
      description: update the PreinscripcionEspacios
      operationId: PreinscripcionEspaciosController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PreinscripcionEspacios content
        required: true
        schema:
          $ref: '#/definitions/models.PreinscripcionEspacios'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PreinscripcionEspacios'
        "403":
          description: :id is not int
    delete:
      tags:
      - preinscripcion_espacios
      description: delete the PreinscripcionEspacios
      operationId: PreinscripcionEspaciosController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /prioridad_consejeria/:
    get:
      tags:
      - prioridad_consejeria
      description: get PrioridadConsejeria
      operationId: PrioridadConsejeriaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PrioridadConsejeria'
        "403": {}
    post:
      tags:
      - prioridad_consejeria
      description: create PrioridadConsejeria
      operationId: PrioridadConsejeriaController.Post
      parameters:
      - in: body
        name: body
        description: body for PrioridadConsejeria content
        required: true
        schema:
          $ref: '#/definitions/models.PrioridadConsejeria'
      responses:
        "201":
          description: '{int} models.PrioridadConsejeria'
        "403":
          description: body is empty
  /prioridad_consejeria/{id}:
    get:
      tags:
      - prioridad_consejeria
      description: get PrioridadConsejeria by id
      operationId: PrioridadConsejeriaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PrioridadConsejeria'
        "403":
          description: :id is empty
    put:
      tags:
      - prioridad_consejeria
      description: update the PrioridadConsejeria
      operationId: PrioridadConsejeriaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PrioridadConsejeria content
        required: true
        schema:
          $ref: '#/definitions/models.PrioridadConsejeria'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PrioridadConsejeria'
        "403":
          description: :id is not int
    delete:
      tags:
      - prioridad_consejeria
      description: delete the PrioridadConsejeria
      operationId: PrioridadConsejeriaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /programa_laboral/:
    get:
      tags:
      - programa_laboral
      description: get ProgramaLaboral
      operationId: ProgramaLaboralController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProgramaLaboral'
        "403": {}
    post:
      tags:
      - programa_laboral
      description: create ProgramaLaboral
      operationId: ProgramaLaboralController.Post
      parameters:
      - in: body
        name: body
        description: body for ProgramaLaboral content
        required: true
        schema:
          $ref: '#/definitions/models.ProgramaLaboral'
      responses:
        "201":
          description: '{int} models.ProgramaLaboral'
        "403":
          description: body is empty
  /programa_laboral/{id}:
    get:
      tags:
      - programa_laboral
      description: get ProgramaLaboral by id
      operationId: ProgramaLaboralController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProgramaLaboral'
        "403":
          description: :id is empty
    put:
      tags:
      - programa_laboral
      description: update the ProgramaLaboral
      operationId: ProgramaLaboralController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProgramaLaboral content
        required: true
        schema:
          $ref: '#/definitions/models.ProgramaLaboral'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProgramaLaboral'
        "403":
          description: :id is not int
    delete:
      tags:
      - programa_laboral
      description: delete the ProgramaLaboral
      operationId: ProgramaLaboralController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proposito_recurso/:
    get:
      tags:
      - proposito_recurso
      description: get PropositoRecurso
      operationId: PropositoRecursoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PropositoRecurso'
        "403": {}
    post:
      tags:
      - proposito_recurso
      description: create PropositoRecurso
      operationId: PropositoRecursoController.Post
      parameters:
      - in: body
        name: body
        description: body for PropositoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.PropositoRecurso'
      responses:
        "201":
          description: '{int} models.PropositoRecurso'
        "403":
          description: body is empty
  /proposito_recurso/{id}:
    get:
      tags:
      - proposito_recurso
      description: get PropositoRecurso by id
      operationId: PropositoRecursoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PropositoRecurso'
        "403":
          description: :id is empty
    put:
      tags:
      - proposito_recurso
      description: update the PropositoRecurso
      operationId: PropositoRecursoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PropositoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.PropositoRecurso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PropositoRecurso'
        "403":
          description: :id is not int
    delete:
      tags:
      - proposito_recurso
      description: delete the PropositoRecurso
      operationId: PropositoRecursoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proyecto_curricular/:
    get:
      tags:
      - proyecto_curricular
      description: get ProyectoCurricular
      operationId: ProyectoCurricularController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProyectoCurricular'
        "403": {}
    post:
      tags:
      - proyecto_curricular
      description: create ProyectoCurricular
      operationId: ProyectoCurricularController.Post
      parameters:
      - in: body
        name: body
        description: body for ProyectoCurricular content
        required: true
        schema:
          $ref: '#/definitions/models.ProyectoCurricular'
      responses:
        "201":
          description: '{int} models.ProyectoCurricular'
        "403":
          description: body is empty
  /proyecto_curricular/{id}:
    get:
      tags:
      - proyecto_curricular
      description: get ProyectoCurricular by id
      operationId: ProyectoCurricularController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProyectoCurricular'
        "403":
          description: :id is empty
    put:
      tags:
      - proyecto_curricular
      description: update the ProyectoCurricular
      operationId: ProyectoCurricularController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProyectoCurricular content
        required: true
        schema:
          $ref: '#/definitions/models.ProyectoCurricular'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProyectoCurricular'
        "403":
          description: :id is not int
    delete:
      tags:
      - proyecto_curricular
      description: delete the ProyectoCurricular
      operationId: ProyectoCurricularController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proyecto_curricular_maestria/:
    get:
      tags:
      - proyecto_curricular_maestria
      description: get ProyectoCurricularMaestria
      operationId: ProyectoCurricularMaestriaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProyectoCurricularMaestria'
        "403": {}
    post:
      tags:
      - proyecto_curricular_maestria
      description: create ProyectoCurricularMaestria
      operationId: ProyectoCurricularMaestriaController.Post
      parameters:
      - in: body
        name: body
        description: body for ProyectoCurricularMaestria content
        required: true
        schema:
          $ref: '#/definitions/models.ProyectoCurricularMaestria'
      responses:
        "201":
          description: '{int} models.ProyectoCurricularMaestria'
        "403":
          description: body is empty
  /proyecto_curricular_maestria/{id}:
    get:
      tags:
      - proyecto_curricular_maestria
      description: get ProyectoCurricularMaestria by id
      operationId: ProyectoCurricularMaestriaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProyectoCurricularMaestria'
        "403":
          description: :id is empty
    put:
      tags:
      - proyecto_curricular_maestria
      description: update the ProyectoCurricularMaestria
      operationId: ProyectoCurricularMaestriaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProyectoCurricularMaestria content
        required: true
        schema:
          $ref: '#/definitions/models.ProyectoCurricularMaestria'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProyectoCurricularMaestria'
        "403":
          description: :id is not int
    delete:
      tags:
      - proyecto_curricular_maestria
      description: delete the ProyectoCurricularMaestria
      operationId: ProyectoCurricularMaestriaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proyecto_curricular_pregrado/:
    get:
      tags:
      - proyecto_curricular_pregrado
      description: get ProyectoCurricularPregrado
      operationId: ProyectoCurricularPregradoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProyectoCurricularPregrado'
        "403": {}
    post:
      tags:
      - proyecto_curricular_pregrado
      description: create ProyectoCurricularPregrado
      operationId: ProyectoCurricularPregradoController.Post
      parameters:
      - in: body
        name: body
        description: body for ProyectoCurricularPregrado content
        required: true
        schema:
          $ref: '#/definitions/models.ProyectoCurricularPregrado'
      responses:
        "201":
          description: '{int} models.ProyectoCurricularPregrado'
        "403":
          description: body is empty
  /proyecto_curricular_pregrado/{id}:
    get:
      tags:
      - proyecto_curricular_pregrado
      description: get ProyectoCurricularPregrado by id
      operationId: ProyectoCurricularPregradoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProyectoCurricularPregrado'
        "403":
          description: :id is empty
    put:
      tags:
      - proyecto_curricular_pregrado
      description: update the ProyectoCurricularPregrado
      operationId: ProyectoCurricularPregradoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProyectoCurricularPregrado content
        required: true
        schema:
          $ref: '#/definitions/models.ProyectoCurricularPregrado'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ProyectoCurricularPregrado'
        "403":
          description: :id is not int
    delete:
      tags:
      - proyecto_curricular_pregrado
      description: delete the ProyectoCurricularPregrado
      operationId: ProyectoCurricularPregradoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /prueba_admision_estudiante/:
    get:
      tags:
      - prueba_admision_estudiante
      description: get PruebaAdmisionEstudiante
      operationId: PruebaAdmisionEstudianteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PruebaAdmisionEstudiante'
        "403": {}
    post:
      tags:
      - prueba_admision_estudiante
      description: create PruebaAdmisionEstudiante
      operationId: PruebaAdmisionEstudianteController.Post
      parameters:
      - in: body
        name: body
        description: body for PruebaAdmisionEstudiante content
        required: true
        schema:
          $ref: '#/definitions/models.PruebaAdmisionEstudiante'
      responses:
        "201":
          description: '{int} models.PruebaAdmisionEstudiante'
        "403":
          description: body is empty
  /prueba_admision_estudiante/{id}:
    get:
      tags:
      - prueba_admision_estudiante
      description: get PruebaAdmisionEstudiante by id
      operationId: PruebaAdmisionEstudianteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PruebaAdmisionEstudiante'
        "403":
          description: :id is empty
    put:
      tags:
      - prueba_admision_estudiante
      description: update the PruebaAdmisionEstudiante
      operationId: PruebaAdmisionEstudianteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PruebaAdmisionEstudiante content
        required: true
        schema:
          $ref: '#/definitions/models.PruebaAdmisionEstudiante'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PruebaAdmisionEstudiante'
        "403":
          description: :id is not int
    delete:
      tags:
      - prueba_admision_estudiante
      description: delete the PruebaAdmisionEstudiante
      operationId: PruebaAdmisionEstudianteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ps_institucion/:
    get:
      tags:
      - ps_institucion
      description: get PsInstitucion
      operationId: PsInstitucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PsInstitucion'
        "403": {}
    post:
      tags:
      - ps_institucion
      description: create PsInstitucion
      operationId: PsInstitucionController.Post
      parameters:
      - in: body
        name: body
        description: body for PsInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.PsInstitucion'
      responses:
        "201":
          description: '{int} models.PsInstitucion'
        "403":
          description: body is empty
  /ps_institucion/{id}:
    get:
      tags:
      - ps_institucion
      description: get PsInstitucion by id
      operationId: PsInstitucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PsInstitucion'
        "403":
          description: :id is empty
    put:
      tags:
      - ps_institucion
      description: update the PsInstitucion
      operationId: PsInstitucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PsInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.PsInstitucion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PsInstitucion'
        "403":
          description: :id is not int
    delete:
      tags:
      - ps_institucion
      description: delete the PsInstitucion
      operationId: PsInstitucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /razon_fin_grupo_docente/:
    get:
      tags:
      - razon_fin_grupo_docente
      description: get RazonFinGrupoDocente
      operationId: RazonFinGrupoDocenteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RazonFinGrupoDocente'
        "403": {}
    post:
      tags:
      - razon_fin_grupo_docente
      description: create RazonFinGrupoDocente
      operationId: RazonFinGrupoDocenteController.Post
      parameters:
      - in: body
        name: body
        description: body for RazonFinGrupoDocente content
        required: true
        schema:
          $ref: '#/definitions/models.RazonFinGrupoDocente'
      responses:
        "201":
          description: '{int} models.RazonFinGrupoDocente'
        "403":
          description: body is empty
  /razon_fin_grupo_docente/{id}:
    get:
      tags:
      - razon_fin_grupo_docente
      description: get RazonFinGrupoDocente by id
      operationId: RazonFinGrupoDocenteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RazonFinGrupoDocente'
        "403":
          description: :id is empty
    put:
      tags:
      - razon_fin_grupo_docente
      description: update the RazonFinGrupoDocente
      operationId: RazonFinGrupoDocenteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RazonFinGrupoDocente content
        required: true
        schema:
          $ref: '#/definitions/models.RazonFinGrupoDocente'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RazonFinGrupoDocente'
        "403":
          description: :id is not int
    delete:
      tags:
      - razon_fin_grupo_docente
      description: delete the RazonFinGrupoDocente
      operationId: RazonFinGrupoDocenteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /razon_salida_programa/:
    get:
      tags:
      - razon_salida_programa
      description: get RazonSalidaPrograma
      operationId: RazonSalidaProgramaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RazonSalidaPrograma'
        "403": {}
    post:
      tags:
      - razon_salida_programa
      description: create RazonSalidaPrograma
      operationId: RazonSalidaProgramaController.Post
      parameters:
      - in: body
        name: body
        description: body for RazonSalidaPrograma content
        required: true
        schema:
          $ref: '#/definitions/models.RazonSalidaPrograma'
      responses:
        "201":
          description: '{int} models.RazonSalidaPrograma'
        "403":
          description: body is empty
  /razon_salida_programa/{id}:
    get:
      tags:
      - razon_salida_programa
      description: get RazonSalidaPrograma by id
      operationId: RazonSalidaProgramaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RazonSalidaPrograma'
        "403":
          description: :id is empty
    put:
      tags:
      - razon_salida_programa
      description: update the RazonSalidaPrograma
      operationId: RazonSalidaProgramaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RazonSalidaPrograma content
        required: true
        schema:
          $ref: '#/definitions/models.RazonSalidaPrograma'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RazonSalidaPrograma'
        "403":
          description: :id is not int
    delete:
      tags:
      - razon_salida_programa
      description: delete the RazonSalidaPrograma
      operationId: RazonSalidaProgramaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /razon_separacion/:
    get:
      tags:
      - razon_separacion
      description: get RazonSeparacion
      operationId: RazonSeparacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RazonSeparacion'
        "403": {}
    post:
      tags:
      - razon_separacion
      description: create RazonSeparacion
      operationId: RazonSeparacionController.Post
      parameters:
      - in: body
        name: body
        description: body for RazonSeparacion content
        required: true
        schema:
          $ref: '#/definitions/models.RazonSeparacion'
      responses:
        "201":
          description: '{int} models.RazonSeparacion'
        "403":
          description: body is empty
  /razon_separacion/{id}:
    get:
      tags:
      - razon_separacion
      description: get RazonSeparacion by id
      operationId: RazonSeparacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RazonSeparacion'
        "403":
          description: :id is empty
    put:
      tags:
      - razon_separacion
      description: update the RazonSeparacion
      operationId: RazonSeparacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RazonSeparacion content
        required: true
        schema:
          $ref: '#/definitions/models.RazonSeparacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RazonSeparacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - razon_separacion
      description: delete the RazonSeparacion
      operationId: RazonSeparacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /recurso_aprendizaje/:
    get:
      tags:
      - recurso_aprendizaje
      description: get RecursoAprendizaje
      operationId: RecursoAprendizajeController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RecursoAprendizaje'
        "403": {}
    post:
      tags:
      - recurso_aprendizaje
      description: create RecursoAprendizaje
      operationId: RecursoAprendizajeController.Post
      parameters:
      - in: body
        name: body
        description: body for RecursoAprendizaje content
        required: true
        schema:
          $ref: '#/definitions/models.RecursoAprendizaje'
      responses:
        "201":
          description: '{int} models.RecursoAprendizaje'
        "403":
          description: body is empty
  /recurso_aprendizaje/{id}:
    get:
      tags:
      - recurso_aprendizaje
      description: get RecursoAprendizaje by id
      operationId: RecursoAprendizajeController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RecursoAprendizaje'
        "403":
          description: :id is empty
    put:
      tags:
      - recurso_aprendizaje
      description: update the RecursoAprendizaje
      operationId: RecursoAprendizajeController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RecursoAprendizaje content
        required: true
        schema:
          $ref: '#/definitions/models.RecursoAprendizaje'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RecursoAprendizaje'
        "403":
          description: :id is not int
    delete:
      tags:
      - recurso_aprendizaje
      description: delete the RecursoAprendizaje
      operationId: RecursoAprendizajeController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ref_estado_estudiante_proyecto/:
    get:
      tags:
      - ref_estado_estudiante_proyecto
      description: get RefEstadoEstudianteProyecto
      operationId: RefEstadoEstudianteProyectoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefEstadoEstudianteProyecto'
        "403": {}
    post:
      tags:
      - ref_estado_estudiante_proyecto
      description: create RefEstadoEstudianteProyecto
      operationId: RefEstadoEstudianteProyectoController.Post
      parameters:
      - in: body
        name: body
        description: body for RefEstadoEstudianteProyecto content
        required: true
        schema:
          $ref: '#/definitions/models.RefEstadoEstudianteProyecto'
      responses:
        "201":
          description: '{int} models.RefEstadoEstudianteProyecto'
        "403":
          description: body is empty
  /ref_estado_estudiante_proyecto/{id}:
    get:
      tags:
      - ref_estado_estudiante_proyecto
      description: get RefEstadoEstudianteProyecto by id
      operationId: RefEstadoEstudianteProyectoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefEstadoEstudianteProyecto'
        "403":
          description: :id is empty
    put:
      tags:
      - ref_estado_estudiante_proyecto
      description: update the RefEstadoEstudianteProyecto
      operationId: RefEstadoEstudianteProyectoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RefEstadoEstudianteProyecto content
        required: true
        schema:
          $ref: '#/definitions/models.RefEstadoEstudianteProyecto'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefEstadoEstudianteProyecto'
        "403":
          description: :id is not int
    delete:
      tags:
      - ref_estado_estudiante_proyecto
      description: delete the RefEstadoEstudianteProyecto
      operationId: RefEstadoEstudianteProyectoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ref_estado_grupo/:
    get:
      tags:
      - ref_estado_grupo
      description: get RefEstadoGrupo
      operationId: RefEstadoGrupoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefEstadoGrupo'
        "403": {}
    post:
      tags:
      - ref_estado_grupo
      description: create RefEstadoGrupo
      operationId: RefEstadoGrupoController.Post
      parameters:
      - in: body
        name: body
        description: body for RefEstadoGrupo content
        required: true
        schema:
          $ref: '#/definitions/models.RefEstadoGrupo'
      responses:
        "201":
          description: '{int} models.RefEstadoGrupo'
        "403":
          description: body is empty
  /ref_estado_grupo/{id}:
    get:
      tags:
      - ref_estado_grupo
      description: get RefEstadoGrupo by id
      operationId: RefEstadoGrupoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefEstadoGrupo'
        "403":
          description: :id is empty
    put:
      tags:
      - ref_estado_grupo
      description: update the RefEstadoGrupo
      operationId: RefEstadoGrupoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RefEstadoGrupo content
        required: true
        schema:
          $ref: '#/definitions/models.RefEstadoGrupo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefEstadoGrupo'
        "403":
          description: :id is not int
    delete:
      tags:
      - ref_estado_grupo
      description: delete the RefEstadoGrupo
      operationId: RefEstadoGrupoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ref_norma_acuerdo/:
    get:
      tags:
      - ref_norma_acuerdo
      description: get RefNormaAcuerdo
      operationId: RefNormaAcuerdoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefNormaAcuerdo'
        "403": {}
    post:
      tags:
      - ref_norma_acuerdo
      description: create RefNormaAcuerdo
      operationId: RefNormaAcuerdoController.Post
      parameters:
      - in: body
        name: body
        description: body for RefNormaAcuerdo content
        required: true
        schema:
          $ref: '#/definitions/models.RefNormaAcuerdo'
      responses:
        "201":
          description: '{int} models.RefNormaAcuerdo'
        "403":
          description: body is empty
  /ref_norma_acuerdo/{id}:
    get:
      tags:
      - ref_norma_acuerdo
      description: get RefNormaAcuerdo by id
      operationId: RefNormaAcuerdoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefNormaAcuerdo'
        "403":
          description: :id is empty
    put:
      tags:
      - ref_norma_acuerdo
      description: update the RefNormaAcuerdo
      operationId: RefNormaAcuerdoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RefNormaAcuerdo content
        required: true
        schema:
          $ref: '#/definitions/models.RefNormaAcuerdo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefNormaAcuerdo'
        "403":
          description: :id is not int
    delete:
      tags:
      - ref_norma_acuerdo
      description: delete the RefNormaAcuerdo
      operationId: RefNormaAcuerdoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ref_tipo_relacion_org/:
    get:
      tags:
      - ref_tipo_relacion_org
      description: get RefTipoRelacionOrg
      operationId: RefTipoRelacionOrgController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefTipoRelacionOrg'
        "403": {}
    post:
      tags:
      - ref_tipo_relacion_org
      description: create RefTipoRelacionOrg
      operationId: RefTipoRelacionOrgController.Post
      parameters:
      - in: body
        name: body
        description: body for RefTipoRelacionOrg content
        required: true
        schema:
          $ref: '#/definitions/models.RefTipoRelacionOrg'
      responses:
        "201":
          description: '{int} models.RefTipoRelacionOrg'
        "403":
          description: body is empty
  /ref_tipo_relacion_org/{id}:
    get:
      tags:
      - ref_tipo_relacion_org
      description: get RefTipoRelacionOrg by id
      operationId: RefTipoRelacionOrgController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefTipoRelacionOrg'
        "403":
          description: :id is empty
    put:
      tags:
      - ref_tipo_relacion_org
      description: update the RefTipoRelacionOrg
      operationId: RefTipoRelacionOrgController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RefTipoRelacionOrg content
        required: true
        schema:
          $ref: '#/definitions/models.RefTipoRelacionOrg'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.RefTipoRelacionOrg'
        "403":
          description: :id is not int
    delete:
      tags:
      - ref_tipo_relacion_org
      description: delete the RefTipoRelacionOrg
      operationId: RefTipoRelacionOrgController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /responsable/:
    get:
      tags:
      - responsable
      description: get Responsable
      operationId: ResponsableController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Responsable'
        "403": {}
    post:
      tags:
      - responsable
      description: create Responsable
      operationId: ResponsableController.Post
      parameters:
      - in: body
        name: body
        description: body for Responsable content
        required: true
        schema:
          $ref: '#/definitions/models.Responsable'
      responses:
        "201":
          description: '{int} models.Responsable'
        "403":
          description: body is empty
  /responsable/{id}:
    get:
      tags:
      - responsable
      description: get Responsable by id
      operationId: ResponsableController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Responsable'
        "403":
          description: :id is empty
    put:
      tags:
      - responsable
      description: update the Responsable
      operationId: ResponsableController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Responsable content
        required: true
        schema:
          $ref: '#/definitions/models.Responsable'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Responsable'
        "403":
          description: :id is not int
    delete:
      tags:
      - responsable
      description: delete the Responsable
      operationId: ResponsableController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /responsable_sesion/:
    get:
      tags:
      - responsable_sesion
      description: get ResponsableSesion
      operationId: ResponsableSesionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ResponsableSesion'
        "403": {}
    post:
      tags:
      - responsable_sesion
      description: create ResponsableSesion
      operationId: ResponsableSesionController.Post
      parameters:
      - in: body
        name: body
        description: body for ResponsableSesion content
        required: true
        schema:
          $ref: '#/definitions/models.ResponsableSesion'
      responses:
        "201":
          description: '{int} models.ResponsableSesion'
        "403":
          description: body is empty
  /responsable_sesion/{id}:
    get:
      tags:
      - responsable_sesion
      description: get ResponsableSesion by id
      operationId: ResponsableSesionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ResponsableSesion'
        "403":
          description: :id is empty
    put:
      tags:
      - responsable_sesion
      description: update the ResponsableSesion
      operationId: ResponsableSesionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ResponsableSesion content
        required: true
        schema:
          $ref: '#/definitions/models.ResponsableSesion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ResponsableSesion'
        "403":
          description: :id is not int
    delete:
      tags:
      - responsable_sesion
      description: delete the ResponsableSesion
      operationId: ResponsableSesionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /resumen_academico/:
    get:
      tags:
      - resumen_academico
      description: get ResumenAcademico
      operationId: ResumenAcademicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ResumenAcademico'
        "403": {}
    post:
      tags:
      - resumen_academico
      description: create ResumenAcademico
      operationId: ResumenAcademicoController.Post
      parameters:
      - in: body
        name: body
        description: body for ResumenAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.ResumenAcademico'
      responses:
        "201":
          description: '{int} models.ResumenAcademico'
        "403":
          description: body is empty
  /resumen_academico/{id}:
    get:
      tags:
      - resumen_academico
      description: get ResumenAcademico by id
      operationId: ResumenAcademicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ResumenAcademico'
        "403":
          description: :id is empty
    put:
      tags:
      - resumen_academico
      description: update the ResumenAcademico
      operationId: ResumenAcademicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ResumenAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.ResumenAcademico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ResumenAcademico'
        "403":
          description: :id is not int
    delete:
      tags:
      - resumen_academico
      description: delete the ResumenAcademico
      operationId: ResumenAcademicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /rol/:
    get:
      tags:
      - rol
      description: get Rol
      operationId: RolController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Rol'
        "403": {}
    post:
      tags:
      - rol
      description: create Rol
      operationId: RolController.Post
      parameters:
      - in: body
        name: body
        description: body for Rol content
        required: true
        schema:
          $ref: '#/definitions/models.Rol'
      responses:
        "201":
          description: '{int} models.Rol'
        "403":
          description: body is empty
  /rol/{id}:
    get:
      tags:
      - rol
      description: get Rol by id
      operationId: RolController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Rol'
        "403":
          description: :id is empty
    put:
      tags:
      - rol
      description: update the Rol
      operationId: RolController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Rol content
        required: true
        schema:
          $ref: '#/definitions/models.Rol'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Rol'
        "403":
          description: :id is not int
    delete:
      tags:
      - rol
      description: delete the Rol
      operationId: RolController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /rubrica/:
    get:
      tags:
      - rubrica
      description: get Rubrica
      operationId: RubricaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Rubrica'
        "403": {}
    post:
      tags:
      - rubrica
      description: create Rubrica
      operationId: RubricaController.Post
      parameters:
      - in: body
        name: body
        description: body for Rubrica content
        required: true
        schema:
          $ref: '#/definitions/models.Rubrica'
      responses:
        "201":
          description: '{int} models.Rubrica'
        "403":
          description: body is empty
  /rubrica/{id}:
    get:
      tags:
      - rubrica
      description: get Rubrica by id
      operationId: RubricaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Rubrica'
        "403":
          description: :id is empty
    put:
      tags:
      - rubrica
      description: update the Rubrica
      operationId: RubricaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Rubrica content
        required: true
        schema:
          $ref: '#/definitions/models.Rubrica'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Rubrica'
        "403":
          description: :id is not int
    delete:
      tags:
      - rubrica
      description: delete the Rubrica
      operationId: RubricaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /sesion_organizacion/:
    get:
      tags:
      - sesion_organizacion
      description: get SesionOrganizacion
      operationId: SesionOrganizacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SesionOrganizacion'
        "403": {}
    post:
      tags:
      - sesion_organizacion
      description: create SesionOrganizacion
      operationId: SesionOrganizacionController.Post
      parameters:
      - in: body
        name: body
        description: body for SesionOrganizacion content
        required: true
        schema:
          $ref: '#/definitions/models.SesionOrganizacion'
      responses:
        "201":
          description: '{int} models.SesionOrganizacion'
        "403":
          description: body is empty
  /sesion_organizacion/{id}:
    get:
      tags:
      - sesion_organizacion
      description: get SesionOrganizacion by id
      operationId: SesionOrganizacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SesionOrganizacion'
        "403":
          description: :id is empty
    put:
      tags:
      - sesion_organizacion
      description: update the SesionOrganizacion
      operationId: SesionOrganizacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SesionOrganizacion content
        required: true
        schema:
          $ref: '#/definitions/models.SesionOrganizacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SesionOrganizacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - sesion_organizacion
      description: delete the SesionOrganizacion
      operationId: SesionOrganizacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /sistema_calendario/:
    get:
      tags:
      - sistema_calendario
      description: get SistemaCalendario
      operationId: SistemaCalendarioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SistemaCalendario'
        "403": {}
    post:
      tags:
      - sistema_calendario
      description: create SistemaCalendario
      operationId: SistemaCalendarioController.Post
      parameters:
      - in: body
        name: body
        description: body for SistemaCalendario content
        required: true
        schema:
          $ref: '#/definitions/models.SistemaCalendario'
      responses:
        "201":
          description: '{int} models.SistemaCalendario'
        "403":
          description: body is empty
  /sistema_calendario/{id}:
    get:
      tags:
      - sistema_calendario
      description: get SistemaCalendario by id
      operationId: SistemaCalendarioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SistemaCalendario'
        "403":
          description: :id is empty
    put:
      tags:
      - sistema_calendario
      description: update the SistemaCalendario
      operationId: SistemaCalendarioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SistemaCalendario content
        required: true
        schema:
          $ref: '#/definitions/models.SistemaCalendario'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SistemaCalendario'
        "403":
          description: :id is not int
    delete:
      tags:
      - sistema_calendario
      description: delete the SistemaCalendario
      operationId: SistemaCalendarioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /solicitud_admision/:
    get:
      tags:
      - solicitud_admision
      description: get SolicitudAdmision
      operationId: SolicitudAdmisionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SolicitudAdmision'
        "403": {}
    post:
      tags:
      - solicitud_admision
      description: create SolicitudAdmision
      operationId: SolicitudAdmisionController.Post
      parameters:
      - in: body
        name: body
        description: body for SolicitudAdmision content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudAdmision'
      responses:
        "201":
          description: '{int} models.SolicitudAdmision'
        "403":
          description: body is empty
  /solicitud_admision/{id}:
    get:
      tags:
      - solicitud_admision
      description: get SolicitudAdmision by id
      operationId: SolicitudAdmisionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SolicitudAdmision'
        "403":
          description: :id is empty
    put:
      tags:
      - solicitud_admision
      description: update the SolicitudAdmision
      operationId: SolicitudAdmisionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SolicitudAdmision content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudAdmision'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SolicitudAdmision'
        "403":
          description: :id is not int
    delete:
      tags:
      - solicitud_admision
      description: delete the SolicitudAdmision
      operationId: SolicitudAdmisionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /solicitud_apoyo/:
    get:
      tags:
      - solicitud_apoyo
      description: get SolicitudApoyo
      operationId: SolicitudApoyoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SolicitudApoyo'
        "403": {}
    post:
      tags:
      - solicitud_apoyo
      description: create SolicitudApoyo
      operationId: SolicitudApoyoController.Post
      parameters:
      - in: body
        name: body
        description: body for SolicitudApoyo content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudApoyo'
      responses:
        "201":
          description: '{int} models.SolicitudApoyo'
        "403":
          description: body is empty
  /solicitud_apoyo/{id}:
    get:
      tags:
      - solicitud_apoyo
      description: get SolicitudApoyo by id
      operationId: SolicitudApoyoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SolicitudApoyo'
        "403":
          description: :id is empty
    put:
      tags:
      - solicitud_apoyo
      description: update the SolicitudApoyo
      operationId: SolicitudApoyoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SolicitudApoyo content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudApoyo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SolicitudApoyo'
        "403":
          description: :id is not int
    delete:
      tags:
      - solicitud_apoyo
      description: delete the SolicitudApoyo
      operationId: SolicitudApoyoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /solicitud_consejeria/:
    get:
      tags:
      - solicitud_consejeria
      description: get SolicitudConsejeria
      operationId: SolicitudConsejeriaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SolicitudConsejeria'
        "403": {}
    post:
      tags:
      - solicitud_consejeria
      description: create SolicitudConsejeria
      operationId: SolicitudConsejeriaController.Post
      parameters:
      - in: body
        name: body
        description: body for SolicitudConsejeria content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudConsejeria'
      responses:
        "201":
          description: '{int} models.SolicitudConsejeria'
        "403":
          description: body is empty
  /solicitud_consejeria/{id}:
    get:
      tags:
      - solicitud_consejeria
      description: get SolicitudConsejeria by id
      operationId: SolicitudConsejeriaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SolicitudConsejeria'
        "403":
          description: :id is empty
    put:
      tags:
      - solicitud_consejeria
      description: update the SolicitudConsejeria
      operationId: SolicitudConsejeriaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SolicitudConsejeria content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudConsejeria'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SolicitudConsejeria'
        "403":
          description: :id is not int
    delete:
      tags:
      - solicitud_consejeria
      description: delete the SolicitudConsejeria
      operationId: SolicitudConsejeriaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /soporte_fisico/:
    get:
      tags:
      - soporte_fisico
      description: get SoporteFisico
      operationId: SoporteFisicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SoporteFisico'
        "403": {}
    post:
      tags:
      - soporte_fisico
      description: create SoporteFisico
      operationId: SoporteFisicoController.Post
      parameters:
      - in: body
        name: body
        description: body for SoporteFisico content
        required: true
        schema:
          $ref: '#/definitions/models.SoporteFisico'
      responses:
        "201":
          description: '{int} models.SoporteFisico'
        "403":
          description: body is empty
  /soporte_fisico/{id}:
    get:
      tags:
      - soporte_fisico
      description: get SoporteFisico by id
      operationId: SoporteFisicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SoporteFisico'
        "403":
          description: :id is empty
    put:
      tags:
      - soporte_fisico
      description: update the SoporteFisico
      operationId: SoporteFisicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SoporteFisico content
        required: true
        schema:
          $ref: '#/definitions/models.SoporteFisico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SoporteFisico'
        "403":
          description: :id is not int
    delete:
      tags:
      - soporte_fisico
      description: delete the SoporteFisico
      operationId: SoporteFisicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /soporte_fisico_recurso/:
    get:
      tags:
      - soporte_fisico_recurso
      description: get SoporteFisicoRecurso
      operationId: SoporteFisicoRecursoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SoporteFisicoRecurso'
        "403": {}
    post:
      tags:
      - soporte_fisico_recurso
      description: create SoporteFisicoRecurso
      operationId: SoporteFisicoRecursoController.Post
      parameters:
      - in: body
        name: body
        description: body for SoporteFisicoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.SoporteFisicoRecurso'
      responses:
        "201":
          description: '{int} models.SoporteFisicoRecurso'
        "403":
          description: body is empty
  /soporte_fisico_recurso/{id}:
    get:
      tags:
      - soporte_fisico_recurso
      description: get SoporteFisicoRecurso by id
      operationId: SoporteFisicoRecursoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SoporteFisicoRecurso'
        "403":
          description: :id is empty
    put:
      tags:
      - soporte_fisico_recurso
      description: update the SoporteFisicoRecurso
      operationId: SoporteFisicoRecursoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SoporteFisicoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.SoporteFisicoRecurso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.SoporteFisicoRecurso'
        "403":
          description: :id is not int
    delete:
      tags:
      - soporte_fisico_recurso
      description: delete the SoporteFisicoRecurso
      operationId: SoporteFisicoRecursoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_actividad/:
    get:
      tags:
      - tipo_actividad
      description: get TipoActividad
      operationId: TipoActividadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoActividad'
        "403": {}
    post:
      tags:
      - tipo_actividad
      description: create TipoActividad
      operationId: TipoActividadController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoActividad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoActividad'
      responses:
        "201":
          description: '{int} models.TipoActividad'
        "403":
          description: body is empty
  /tipo_actividad/{id}:
    get:
      tags:
      - tipo_actividad
      description: get TipoActividad by id
      operationId: TipoActividadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoActividad'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_actividad
      description: update the TipoActividad
      operationId: TipoActividadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoActividad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoActividad'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoActividad'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_actividad
      description: delete the TipoActividad
      operationId: TipoActividadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_admision/:
    get:
      tags:
      - tipo_admision
      description: get TipoAdmision
      operationId: TipoAdmisionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAdmision'
        "403": {}
    post:
      tags:
      - tipo_admision
      description: create TipoAdmision
      operationId: TipoAdmisionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoAdmision content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAdmision'
      responses:
        "201":
          description: '{int} models.TipoAdmision'
        "403":
          description: body is empty
  /tipo_admision/{id}:
    get:
      tags:
      - tipo_admision
      description: get TipoAdmision by id
      operationId: TipoAdmisionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAdmision'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_admision
      description: update the TipoAdmision
      operationId: TipoAdmisionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoAdmision content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAdmision'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAdmision'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_admision
      description: delete the TipoAdmision
      operationId: TipoAdmisionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_admision_institucion/:
    get:
      tags:
      - tipo_admision_institucion
      description: get TipoAdmisionInstitucion
      operationId: TipoAdmisionInstitucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAdmisionInstitucion'
        "403": {}
    post:
      tags:
      - tipo_admision_institucion
      description: create TipoAdmisionInstitucion
      operationId: TipoAdmisionInstitucionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoAdmisionInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAdmisionInstitucion'
      responses:
        "201":
          description: '{int} models.TipoAdmisionInstitucion'
        "403":
          description: body is empty
  /tipo_admision_institucion/{id}:
    get:
      tags:
      - tipo_admision_institucion
      description: get TipoAdmisionInstitucion by id
      operationId: TipoAdmisionInstitucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAdmisionInstitucion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_admision_institucion
      description: update the TipoAdmisionInstitucion
      operationId: TipoAdmisionInstitucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoAdmisionInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAdmisionInstitucion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAdmisionInstitucion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_admision_institucion
      description: delete the TipoAdmisionInstitucion
      operationId: TipoAdmisionInstitucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_api_acceso/:
    get:
      tags:
      - tipo_api_acceso
      description: get TipoApiAcceso
      operationId: TipoApiAccesoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoApiAcceso'
        "403": {}
    post:
      tags:
      - tipo_api_acceso
      description: create TipoApiAcceso
      operationId: TipoApiAccesoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoApiAcceso content
        required: true
        schema:
          $ref: '#/definitions/models.TipoApiAcceso'
      responses:
        "201":
          description: '{int} models.TipoApiAcceso'
        "403":
          description: body is empty
  /tipo_api_acceso/{id}:
    get:
      tags:
      - tipo_api_acceso
      description: get TipoApiAcceso by id
      operationId: TipoApiAccesoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoApiAcceso'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_api_acceso
      description: update the TipoApiAcceso
      operationId: TipoApiAccesoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoApiAcceso content
        required: true
        schema:
          $ref: '#/definitions/models.TipoApiAcceso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoApiAcceso'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_api_acceso
      description: delete the TipoApiAcceso
      operationId: TipoApiAccesoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_autor/:
    get:
      tags:
      - tipo_autor
      description: get TipoAutor
      operationId: TipoAutorController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAutor'
        "403": {}
    post:
      tags:
      - tipo_autor
      description: create TipoAutor
      operationId: TipoAutorController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoAutor content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAutor'
      responses:
        "201":
          description: '{int} models.TipoAutor'
        "403":
          description: body is empty
  /tipo_autor/{id}:
    get:
      tags:
      - tipo_autor
      description: get TipoAutor by id
      operationId: TipoAutorController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAutor'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_autor
      description: update the TipoAutor
      operationId: TipoAutorController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoAutor content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAutor'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAutor'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_autor
      description: delete the TipoAutor
      operationId: TipoAutorController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_contrato/:
    get:
      tags:
      - tipo_contrato
      description: get TipoContrato
      operationId: TipoContratoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoContrato'
        "403": {}
    post:
      tags:
      - tipo_contrato
      description: create TipoContrato
      operationId: TipoContratoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoContrato content
        required: true
        schema:
          $ref: '#/definitions/models.TipoContrato'
      responses:
        "201":
          description: '{int} models.TipoContrato'
        "403":
          description: body is empty
  /tipo_contrato/{id}:
    get:
      tags:
      - tipo_contrato
      description: get TipoContrato by id
      operationId: TipoContratoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoContrato'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_contrato
      description: update the TipoContrato
      operationId: TipoContratoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoContrato content
        required: true
        schema:
          $ref: '#/definitions/models.TipoContrato'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoContrato'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_contrato
      description: delete the TipoContrato
      operationId: TipoContratoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_espacio_academico/:
    get:
      tags:
      - tipo_espacio_academico
      description: get TipoEspacioAcademico
      operationId: TipoEspacioAcademicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEspacioAcademico'
        "403": {}
    post:
      tags:
      - tipo_espacio_academico
      description: create TipoEspacioAcademico
      operationId: TipoEspacioAcademicoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoEspacioAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEspacioAcademico'
      responses:
        "201":
          description: '{int} models.TipoEspacioAcademico'
        "403":
          description: body is empty
  /tipo_espacio_academico/{id}:
    get:
      tags:
      - tipo_espacio_academico
      description: get TipoEspacioAcademico by id
      operationId: TipoEspacioAcademicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEspacioAcademico'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_espacio_academico
      description: update the TipoEspacioAcademico
      operationId: TipoEspacioAcademicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoEspacioAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEspacioAcademico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEspacioAcademico'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_espacio_academico
      description: delete the TipoEspacioAcademico
      operationId: TipoEspacioAcademicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_estado_rol/:
    get:
      tags:
      - tipo_estado_rol
      description: get TipoEstadoRol
      operationId: TipoEstadoRolController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEstadoRol'
        "403": {}
    post:
      tags:
      - tipo_estado_rol
      description: create TipoEstadoRol
      operationId: TipoEstadoRolController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoEstadoRol content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEstadoRol'
      responses:
        "201":
          description: '{int} models.TipoEstadoRol'
        "403":
          description: body is empty
  /tipo_estado_rol/{id}:
    get:
      tags:
      - tipo_estado_rol
      description: get TipoEstadoRol by id
      operationId: TipoEstadoRolController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEstadoRol'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_estado_rol
      description: update the TipoEstadoRol
      operationId: TipoEstadoRolController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoEstadoRol content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEstadoRol'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEstadoRol'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_estado_rol
      description: delete the TipoEstadoRol
      operationId: TipoEstadoRolController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_evento/:
    get:
      tags:
      - tipo_evento
      description: get TipoEvento
      operationId: TipoEventoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEvento'
        "403": {}
    post:
      tags:
      - tipo_evento
      description: create TipoEvento
      operationId: TipoEventoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoEvento content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEvento'
      responses:
        "201":
          description: '{int} models.TipoEvento'
        "403":
          description: body is empty
  /tipo_evento/{id}:
    get:
      tags:
      - tipo_evento
      description: get TipoEvento by id
      operationId: TipoEventoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEvento'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_evento
      description: update the TipoEvento
      operationId: TipoEventoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoEvento content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEvento'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEvento'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_evento
      description: delete the TipoEvento
      operationId: TipoEventoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_identificacion_org/:
    get:
      tags:
      - tipo_identificacion_org
      description: get TipoIdentificacionOrg
      operationId: TipoIdentificacionOrgController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoIdentificacionOrg'
        "403": {}
    post:
      tags:
      - tipo_identificacion_org
      description: create TipoIdentificacionOrg
      operationId: TipoIdentificacionOrgController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoIdentificacionOrg content
        required: true
        schema:
          $ref: '#/definitions/models.TipoIdentificacionOrg'
      responses:
        "201":
          description: '{int} models.TipoIdentificacionOrg'
        "403":
          description: body is empty
  /tipo_identificacion_org/{id}:
    get:
      tags:
      - tipo_identificacion_org
      description: get TipoIdentificacionOrg by id
      operationId: TipoIdentificacionOrgController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoIdentificacionOrg'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_identificacion_org
      description: update the TipoIdentificacionOrg
      operationId: TipoIdentificacionOrgController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoIdentificacionOrg content
        required: true
        schema:
          $ref: '#/definitions/models.TipoIdentificacionOrg'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoIdentificacionOrg'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_identificacion_org
      description: delete the TipoIdentificacionOrg
      operationId: TipoIdentificacionOrgController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_interactividad/:
    get:
      tags:
      - tipo_interactividad
      description: get TipoInteractividad
      operationId: TipoInteractividadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoInteractividad'
        "403": {}
    post:
      tags:
      - tipo_interactividad
      description: create TipoInteractividad
      operationId: TipoInteractividadController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoInteractividad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoInteractividad'
      responses:
        "201":
          description: '{int} models.TipoInteractividad'
        "403":
          description: body is empty
  /tipo_interactividad/{id}:
    get:
      tags:
      - tipo_interactividad
      description: get TipoInteractividad by id
      operationId: TipoInteractividadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoInteractividad'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_interactividad
      description: update the TipoInteractividad
      operationId: TipoInteractividadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoInteractividad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoInteractividad'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoInteractividad'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_interactividad
      description: delete the TipoInteractividad
      operationId: TipoInteractividadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_jornada/:
    get:
      tags:
      - tipo_jornada
      description: get TipoJornada
      operationId: TipoJornadaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoJornada'
        "403": {}
    post:
      tags:
      - tipo_jornada
      description: create TipoJornada
      operationId: TipoJornadaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoJornada content
        required: true
        schema:
          $ref: '#/definitions/models.TipoJornada'
      responses:
        "201":
          description: '{int} models.TipoJornada'
        "403":
          description: body is empty
  /tipo_jornada/{id}:
    get:
      tags:
      - tipo_jornada
      description: get TipoJornada by id
      operationId: TipoJornadaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoJornada'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_jornada
      description: update the TipoJornada
      operationId: TipoJornadaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoJornada content
        required: true
        schema:
          $ref: '#/definitions/models.TipoJornada'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoJornada'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_jornada
      description: delete the TipoJornada
      operationId: TipoJornadaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_matricula/:
    get:
      tags:
      - tipo_matricula
      description: get TipoMatricula
      operationId: TipoMatriculaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoMatricula'
        "403": {}
    post:
      tags:
      - tipo_matricula
      description: create TipoMatricula
      operationId: TipoMatriculaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoMatricula content
        required: true
        schema:
          $ref: '#/definitions/models.TipoMatricula'
      responses:
        "201":
          description: '{int} models.TipoMatricula'
        "403":
          description: body is empty
  /tipo_matricula/{id}:
    get:
      tags:
      - tipo_matricula
      description: get TipoMatricula by id
      operationId: TipoMatriculaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoMatricula'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_matricula
      description: update the TipoMatricula
      operationId: TipoMatriculaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoMatricula content
        required: true
        schema:
          $ref: '#/definitions/models.TipoMatricula'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoMatricula'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_matricula
      description: delete the TipoMatricula
      operationId: TipoMatriculaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_observacion_grupo/:
    get:
      tags:
      - tipo_observacion_grupo
      description: get TipoObservacionGrupo
      operationId: TipoObservacionGrupoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoObservacionGrupo'
        "403": {}
    post:
      tags:
      - tipo_observacion_grupo
      description: create TipoObservacionGrupo
      operationId: TipoObservacionGrupoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoObservacionGrupo content
        required: true
        schema:
          $ref: '#/definitions/models.TipoObservacionGrupo'
      responses:
        "201":
          description: '{int} models.TipoObservacionGrupo'
        "403":
          description: body is empty
  /tipo_observacion_grupo/{id}:
    get:
      tags:
      - tipo_observacion_grupo
      description: get TipoObservacionGrupo by id
      operationId: TipoObservacionGrupoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoObservacionGrupo'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_observacion_grupo
      description: update the TipoObservacionGrupo
      operationId: TipoObservacionGrupoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoObservacionGrupo content
        required: true
        schema:
          $ref: '#/definitions/models.TipoObservacionGrupo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoObservacionGrupo'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_observacion_grupo
      description: delete the TipoObservacionGrupo
      operationId: TipoObservacionGrupoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_observacion_nota/:
    get:
      tags:
      - tipo_observacion_nota
      description: get TipoObservacionNota
      operationId: TipoObservacionNotaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoObservacionNota'
        "403": {}
    post:
      tags:
      - tipo_observacion_nota
      description: create TipoObservacionNota
      operationId: TipoObservacionNotaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoObservacionNota content
        required: true
        schema:
          $ref: '#/definitions/models.TipoObservacionNota'
      responses:
        "201":
          description: '{int} models.TipoObservacionNota'
        "403":
          description: body is empty
  /tipo_observacion_nota/{id}:
    get:
      tags:
      - tipo_observacion_nota
      description: get TipoObservacionNota by id
      operationId: TipoObservacionNotaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoObservacionNota'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_observacion_nota
      description: update the TipoObservacionNota
      operationId: TipoObservacionNotaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoObservacionNota content
        required: true
        schema:
          $ref: '#/definitions/models.TipoObservacionNota'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoObservacionNota'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_observacion_nota
      description: delete the TipoObservacionNota
      operationId: TipoObservacionNotaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_organizacion/:
    get:
      tags:
      - tipo_organizacion
      description: get TipoOrganizacion
      operationId: TipoOrganizacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoOrganizacion'
        "403": {}
    post:
      tags:
      - tipo_organizacion
      description: create TipoOrganizacion
      operationId: TipoOrganizacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoOrganizacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoOrganizacion'
      responses:
        "201":
          description: '{int} models.TipoOrganizacion'
        "403":
          description: body is empty
  /tipo_organizacion/{id}:
    get:
      tags:
      - tipo_organizacion
      description: get TipoOrganizacion by id
      operationId: TipoOrganizacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoOrganizacion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_organizacion
      description: update the TipoOrganizacion
      operationId: TipoOrganizacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoOrganizacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoOrganizacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoOrganizacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_organizacion
      description: delete the TipoOrganizacion
      operationId: TipoOrganizacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_participacion/:
    get:
      tags:
      - tipo_participacion
      description: get TipoParticipacion
      operationId: TipoParticipacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoParticipacion'
        "403": {}
    post:
      tags:
      - tipo_participacion
      description: create TipoParticipacion
      operationId: TipoParticipacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoParticipacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoParticipacion'
      responses:
        "201":
          description: '{int} models.TipoParticipacion'
        "403":
          description: body is empty
  /tipo_participacion/{id}:
    get:
      tags:
      - tipo_participacion
      description: get TipoParticipacion by id
      operationId: TipoParticipacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoParticipacion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_participacion
      description: update the TipoParticipacion
      operationId: TipoParticipacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoParticipacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoParticipacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoParticipacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_participacion
      description: delete the TipoParticipacion
      operationId: TipoParticipacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_programa_laboral/:
    get:
      tags:
      - tipo_programa_laboral
      description: get TipoProgramaLaboral
      operationId: TipoProgramaLaboralController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoProgramaLaboral'
        "403": {}
    post:
      tags:
      - tipo_programa_laboral
      description: create TipoProgramaLaboral
      operationId: TipoProgramaLaboralController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoProgramaLaboral content
        required: true
        schema:
          $ref: '#/definitions/models.TipoProgramaLaboral'
      responses:
        "201":
          description: '{int} models.TipoProgramaLaboral'
        "403":
          description: body is empty
  /tipo_programa_laboral/{id}:
    get:
      tags:
      - tipo_programa_laboral
      description: get TipoProgramaLaboral by id
      operationId: TipoProgramaLaboralController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoProgramaLaboral'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_programa_laboral
      description: update the TipoProgramaLaboral
      operationId: TipoProgramaLaboralController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoProgramaLaboral content
        required: true
        schema:
          $ref: '#/definitions/models.TipoProgramaLaboral'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoProgramaLaboral'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_programa_laboral
      description: delete the TipoProgramaLaboral
      operationId: TipoProgramaLaboralController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_prueba_admision/:
    get:
      tags:
      - tipo_prueba_admision
      description: get TipoPruebaAdmision
      operationId: TipoPruebaAdmisionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoPruebaAdmision'
        "403": {}
    post:
      tags:
      - tipo_prueba_admision
      description: create TipoPruebaAdmision
      operationId: TipoPruebaAdmisionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoPruebaAdmision content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPruebaAdmision'
      responses:
        "201":
          description: '{int} models.TipoPruebaAdmision'
        "403":
          description: body is empty
  /tipo_prueba_admision/{id}:
    get:
      tags:
      - tipo_prueba_admision
      description: get TipoPruebaAdmision by id
      operationId: TipoPruebaAdmisionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoPruebaAdmision'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_prueba_admision
      description: update the TipoPruebaAdmision
      operationId: TipoPruebaAdmisionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoPruebaAdmision content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPruebaAdmision'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoPruebaAdmision'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_prueba_admision
      description: delete the TipoPruebaAdmision
      operationId: TipoPruebaAdmisionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_recurso_aprendizaje/:
    get:
      tags:
      - tipo_recurso_aprendizaje
      description: get TipoRecursoAprendizaje
      operationId: TipoRecursoAprendizajeController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRecursoAprendizaje'
        "403": {}
    post:
      tags:
      - tipo_recurso_aprendizaje
      description: create TipoRecursoAprendizaje
      operationId: TipoRecursoAprendizajeController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoRecursoAprendizaje content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRecursoAprendizaje'
      responses:
        "201":
          description: '{int} models.TipoRecursoAprendizaje'
        "403":
          description: body is empty
  /tipo_recurso_aprendizaje/{id}:
    get:
      tags:
      - tipo_recurso_aprendizaje
      description: get TipoRecursoAprendizaje by id
      operationId: TipoRecursoAprendizajeController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRecursoAprendizaje'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_recurso_aprendizaje
      description: update the TipoRecursoAprendizaje
      operationId: TipoRecursoAprendizajeController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoRecursoAprendizaje content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRecursoAprendizaje'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRecursoAprendizaje'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_recurso_aprendizaje
      description: delete the TipoRecursoAprendizaje
      operationId: TipoRecursoAprendizajeController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_relacion_org/:
    get:
      tags:
      - tipo_relacion_org
      description: get TipoRelacionOrg
      operationId: TipoRelacionOrgController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRelacionOrg'
        "403": {}
    post:
      tags:
      - tipo_relacion_org
      description: create TipoRelacionOrg
      operationId: TipoRelacionOrgController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoRelacionOrg content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRelacionOrg'
      responses:
        "201":
          description: '{int} models.TipoRelacionOrg'
        "403":
          description: body is empty
  /tipo_relacion_org/{id}:
    get:
      tags:
      - tipo_relacion_org
      description: get TipoRelacionOrg by id
      operationId: TipoRelacionOrgController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRelacionOrg'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_relacion_org
      description: update the TipoRelacionOrg
      operationId: TipoRelacionOrgController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoRelacionOrg content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRelacionOrg'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRelacionOrg'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_relacion_org
      description: delete the TipoRelacionOrg
      operationId: TipoRelacionOrgController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_residencia/:
    get:
      tags:
      - tipo_residencia
      description: get TipoResidencia
      operationId: TipoResidenciaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoResidencia'
        "403": {}
    post:
      tags:
      - tipo_residencia
      description: create TipoResidencia
      operationId: TipoResidenciaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoResidencia content
        required: true
        schema:
          $ref: '#/definitions/models.TipoResidencia'
      responses:
        "201":
          description: '{int} models.TipoResidencia'
        "403":
          description: body is empty
  /tipo_residencia/{id}:
    get:
      tags:
      - tipo_residencia
      description: get TipoResidencia by id
      operationId: TipoResidenciaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoResidencia'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_residencia
      description: update the TipoResidencia
      operationId: TipoResidenciaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoResidencia content
        required: true
        schema:
          $ref: '#/definitions/models.TipoResidencia'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoResidencia'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_residencia
      description: delete the TipoResidencia
      operationId: TipoResidenciaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_residencia_campus/:
    get:
      tags:
      - tipo_residencia_campus
      description: get TipoResidenciaCampus
      operationId: TipoResidenciaCampusController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoResidenciaCampus'
        "403": {}
    post:
      tags:
      - tipo_residencia_campus
      description: create TipoResidenciaCampus
      operationId: TipoResidenciaCampusController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoResidenciaCampus content
        required: true
        schema:
          $ref: '#/definitions/models.TipoResidenciaCampus'
      responses:
        "201":
          description: '{int} models.TipoResidenciaCampus'
        "403":
          description: body is empty
  /tipo_residencia_campus/{id}:
    get:
      tags:
      - tipo_residencia_campus
      description: get TipoResidenciaCampus by id
      operationId: TipoResidenciaCampusController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoResidenciaCampus'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_residencia_campus
      description: update the TipoResidenciaCampus
      operationId: TipoResidenciaCampusController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoResidenciaCampus content
        required: true
        schema:
          $ref: '#/definitions/models.TipoResidenciaCampus'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoResidenciaCampus'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_residencia_campus
      description: delete the TipoResidenciaCampus
      operationId: TipoResidenciaCampusController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_riesgo_recurso/:
    get:
      tags:
      - tipo_riesgo_recurso
      description: get TipoRiesgoRecurso
      operationId: TipoRiesgoRecursoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRiesgoRecurso'
        "403": {}
    post:
      tags:
      - tipo_riesgo_recurso
      description: create TipoRiesgoRecurso
      operationId: TipoRiesgoRecursoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoRiesgoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRiesgoRecurso'
      responses:
        "201":
          description: '{int} models.TipoRiesgoRecurso'
        "403":
          description: body is empty
  /tipo_riesgo_recurso/{id}:
    get:
      tags:
      - tipo_riesgo_recurso
      description: get TipoRiesgoRecurso by id
      operationId: TipoRiesgoRecursoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRiesgoRecurso'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_riesgo_recurso
      description: update the TipoRiesgoRecurso
      operationId: TipoRiesgoRecursoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoRiesgoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRiesgoRecurso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRiesgoRecurso'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_riesgo_recurso
      description: delete the TipoRiesgoRecurso
      operationId: TipoRiesgoRecursoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_separacion/:
    get:
      tags:
      - tipo_separacion
      description: get TipoSeparacion
      operationId: TipoSeparacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSeparacion'
        "403": {}
    post:
      tags:
      - tipo_separacion
      description: create TipoSeparacion
      operationId: TipoSeparacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoSeparacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoSeparacion'
      responses:
        "201":
          description: '{int} models.TipoSeparacion'
        "403":
          description: body is empty
  /tipo_separacion/{id}:
    get:
      tags:
      - tipo_separacion
      description: get TipoSeparacion by id
      operationId: TipoSeparacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSeparacion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_separacion
      description: update the TipoSeparacion
      operationId: TipoSeparacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoSeparacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoSeparacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSeparacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_separacion
      description: delete the TipoSeparacion
      operationId: TipoSeparacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_sesion/:
    get:
      tags:
      - tipo_sesion
      description: get TipoSesion
      operationId: TipoSesionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSesion'
        "403": {}
    post:
      tags:
      - tipo_sesion
      description: create TipoSesion
      operationId: TipoSesionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoSesion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoSesion'
      responses:
        "201":
          description: '{int} models.TipoSesion'
        "403":
          description: body is empty
  /tipo_sesion/{id}:
    get:
      tags:
      - tipo_sesion
      description: get TipoSesion by id
      operationId: TipoSesionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSesion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_sesion
      description: update the TipoSesion
      operationId: TipoSesionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoSesion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoSesion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSesion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_sesion
      description: delete the TipoSesion
      operationId: TipoSesionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_solicitud_apoyo/:
    get:
      tags:
      - tipo_solicitud_apoyo
      description: get TipoSolicitudApoyo
      operationId: TipoSolicitudApoyoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSolicitudApoyo'
        "403": {}
    post:
      tags:
      - tipo_solicitud_apoyo
      description: create TipoSolicitudApoyo
      operationId: TipoSolicitudApoyoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoSolicitudApoyo content
        required: true
        schema:
          $ref: '#/definitions/models.TipoSolicitudApoyo'
      responses:
        "201":
          description: '{int} models.TipoSolicitudApoyo'
        "403":
          description: body is empty
  /tipo_solicitud_apoyo/{id}:
    get:
      tags:
      - tipo_solicitud_apoyo
      description: get TipoSolicitudApoyo by id
      operationId: TipoSolicitudApoyoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSolicitudApoyo'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_solicitud_apoyo
      description: update the TipoSolicitudApoyo
      operationId: TipoSolicitudApoyoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoSolicitudApoyo content
        required: true
        schema:
          $ref: '#/definitions/models.TipoSolicitudApoyo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSolicitudApoyo'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_solicitud_apoyo
      description: delete the TipoSolicitudApoyo
      operationId: TipoSolicitudApoyoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_solicitud_consejeria/:
    get:
      tags:
      - tipo_solicitud_consejeria
      description: get TipoSolicitudConsejeria
      operationId: TipoSolicitudConsejeriaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSolicitudConsejeria'
        "403": {}
    post:
      tags:
      - tipo_solicitud_consejeria
      description: create TipoSolicitudConsejeria
      operationId: TipoSolicitudConsejeriaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoSolicitudConsejeria content
        required: true
        schema:
          $ref: '#/definitions/models.TipoSolicitudConsejeria'
      responses:
        "201":
          description: '{int} models.TipoSolicitudConsejeria'
        "403":
          description: body is empty
  /tipo_solicitud_consejeria/{id}:
    get:
      tags:
      - tipo_solicitud_consejeria
      description: get TipoSolicitudConsejeria by id
      operationId: TipoSolicitudConsejeriaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSolicitudConsejeria'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_solicitud_consejeria
      description: update the TipoSolicitudConsejeria
      operationId: TipoSolicitudConsejeriaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoSolicitudConsejeria content
        required: true
        schema:
          $ref: '#/definitions/models.TipoSolicitudConsejeria'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoSolicitudConsejeria'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_solicitud_consejeria
      description: delete the TipoSolicitudConsejeria
      operationId: TipoSolicitudConsejeriaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /titulo_otorgado/:
    get:
      tags:
      - titulo_otorgado
      description: get TituloOtorgado
      operationId: TituloOtorgadoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TituloOtorgado'
        "403": {}
    post:
      tags:
      - titulo_otorgado
      description: create TituloOtorgado
      operationId: TituloOtorgadoController.Post
      parameters:
      - in: body
        name: body
        description: body for TituloOtorgado content
        required: true
        schema:
          $ref: '#/definitions/models.TituloOtorgado'
      responses:
        "201":
          description: '{int} models.TituloOtorgado'
        "403":
          description: body is empty
  /titulo_otorgado/{id}:
    get:
      tags:
      - titulo_otorgado
      description: get TituloOtorgado by id
      operationId: TituloOtorgadoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TituloOtorgado'
        "403":
          description: :id is empty
    put:
      tags:
      - titulo_otorgado
      description: update the TituloOtorgado
      operationId: TituloOtorgadoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TituloOtorgado content
        required: true
        schema:
          $ref: '#/definitions/models.TituloOtorgado'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TituloOtorgado'
        "403":
          description: :id is not int
    delete:
      tags:
      - titulo_otorgado
      description: delete the TituloOtorgado
      operationId: TituloOtorgadoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /transferencia_lista/:
    get:
      tags:
      - transferencia_lista
      description: get TransferenciaLista
      operationId: TransferenciaListaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TransferenciaLista'
        "403": {}
    post:
      tags:
      - transferencia_lista
      description: create TransferenciaLista
      operationId: TransferenciaListaController.Post
      parameters:
      - in: body
        name: body
        description: body for TransferenciaLista content
        required: true
        schema:
          $ref: '#/definitions/models.TransferenciaLista'
      responses:
        "201":
          description: '{int} models.TransferenciaLista'
        "403":
          description: body is empty
  /transferencia_lista/{id}:
    get:
      tags:
      - transferencia_lista
      description: get TransferenciaLista by id
      operationId: TransferenciaListaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TransferenciaLista'
        "403":
          description: :id is empty
    put:
      tags:
      - transferencia_lista
      description: update the TransferenciaLista
      operationId: TransferenciaListaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TransferenciaLista content
        required: true
        schema:
          $ref: '#/definitions/models.TransferenciaLista'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TransferenciaLista'
        "403":
          description: :id is not int
    delete:
      tags:
      - transferencia_lista
      description: delete the TransferenciaLista
      operationId: TransferenciaListaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /unidad_dedicacion/:
    get:
      tags:
      - unidad_dedicacion
      description: get UnidadDedicacion
      operationId: UnidadDedicacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UnidadDedicacion'
        "403": {}
    post:
      tags:
      - unidad_dedicacion
      description: create UnidadDedicacion
      operationId: UnidadDedicacionController.Post
      parameters:
      - in: body
        name: body
        description: body for UnidadDedicacion content
        required: true
        schema:
          $ref: '#/definitions/models.UnidadDedicacion'
      responses:
        "201":
          description: '{int} models.UnidadDedicacion'
        "403":
          description: body is empty
  /unidad_dedicacion/{id}:
    get:
      tags:
      - unidad_dedicacion
      description: get UnidadDedicacion by id
      operationId: UnidadDedicacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UnidadDedicacion'
        "403":
          description: :id is empty
    put:
      tags:
      - unidad_dedicacion
      description: update the UnidadDedicacion
      operationId: UnidadDedicacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for UnidadDedicacion content
        required: true
        schema:
          $ref: '#/definitions/models.UnidadDedicacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UnidadDedicacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - unidad_dedicacion
      description: delete the UnidadDedicacion
      operationId: UnidadDedicacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /unidad_tiempo/:
    get:
      tags:
      - unidad_tiempo
      description: get UnidadTiempo
      operationId: UnidadTiempoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UnidadTiempo'
        "403": {}
    post:
      tags:
      - unidad_tiempo
      description: create UnidadTiempo
      operationId: UnidadTiempoController.Post
      parameters:
      - in: body
        name: body
        description: body for UnidadTiempo content
        required: true
        schema:
          $ref: '#/definitions/models.UnidadTiempo'
      responses:
        "201":
          description: '{int} models.UnidadTiempo'
        "403":
          description: body is empty
  /unidad_tiempo/{id}:
    get:
      tags:
      - unidad_tiempo
      description: get UnidadTiempo by id
      operationId: UnidadTiempoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UnidadTiempo'
        "403":
          description: :id is empty
    put:
      tags:
      - unidad_tiempo
      description: update the UnidadTiempo
      operationId: UnidadTiempoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for UnidadTiempo content
        required: true
        schema:
          $ref: '#/definitions/models.UnidadTiempo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UnidadTiempo'
        "403":
          description: :id is not int
    delete:
      tags:
      - unidad_tiempo
      description: delete the UnidadTiempo
      operationId: UnidadTiempoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /usuario_final/:
    get:
      tags:
      - usuario_final
      description: get UsuarioFinal
      operationId: UsuarioFinalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UsuarioFinal'
        "403": {}
    post:
      tags:
      - usuario_final
      description: create UsuarioFinal
      operationId: UsuarioFinalController.Post
      parameters:
      - in: body
        name: body
        description: body for UsuarioFinal content
        required: true
        schema:
          $ref: '#/definitions/models.UsuarioFinal'
      responses:
        "201":
          description: '{int} models.UsuarioFinal'
        "403":
          description: body is empty
  /usuario_final/{id}:
    get:
      tags:
      - usuario_final
      description: get UsuarioFinal by id
      operationId: UsuarioFinalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UsuarioFinal'
        "403":
          description: :id is empty
    put:
      tags:
      - usuario_final
      description: update the UsuarioFinal
      operationId: UsuarioFinalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for UsuarioFinal content
        required: true
        schema:
          $ref: '#/definitions/models.UsuarioFinal'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UsuarioFinal'
        "403":
          description: :id is not int
    delete:
      tags:
      - usuario_final
      description: delete the UsuarioFinal
      operationId: UsuarioFinalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  .Time:
    type: object
  .int16:
    type: object
  models.ActividadAprendizaje:
    title: ActividadAprendizaje
    type: object
    properties:
      Descripcion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Idioma:
        $ref: '#/definitions/models.Idioma'
      IntentosMaximos:
        type: integer
        format: int64
      Prerrequisito:
        type: string
      TiempoRequerido:
        type: number
        format: double
      TipoActividad:
        $ref: '#/definitions/models.TipoActividad'
      Titulo:
        type: string
      UnidadTiempo:
        $ref: '#/definitions/models.UnidadTiempo'
  models.ActividadRecursoAprendizaje:
    title: ActividadRecursoAprendizaje
    type: object
    properties:
      ActividadAprendizaje:
        $ref: '#/definitions/models.ActividadAprendizaje'
      Id:
        type: integer
        format: int64
      RecursoAprendizaje:
        $ref: '#/definitions/models.RecursoAprendizaje'
  models.Acuerdo:
    title: Acuerdo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaPublicacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
  models.ApoyoFinanciero:
    title: ApoyoFinanciero
    type: object
    properties:
      BeneficioApoyo:
        $ref: '#/definitions/models.BeneficioApoyo'
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      MetodologiaApoyo:
        $ref: '#/definitions/models.MetodologiaApoyo'
      MontoNecesidad:
        type: number
        format: double
      NivelIngreso:
        type: number
        format: double
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
  models.AreaConocimiento:
    title: AreaConocimiento
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.AsignacionDocenteClase:
    title: AsignacionDocenteClase
    type: object
    properties:
      ClaseGrupoAcademico:
        $ref: '#/definitions/models.ClaseGrupoAcademico'
      FechaAsignacion:
        $ref: '#/definitions/time.Time'
      FechaTerminacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      RazonFinGrupoDocente:
        $ref: '#/definitions/models.RazonFinGrupoDocente'
      SesionOrganizacion:
        $ref: '#/definitions/models.SesionOrganizacion'
  models.BeneficioApoyo:
    title: BeneficioApoyo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.CalendarioOrganizacion:
    title: CalendarioOrganizacion
    type: object
    properties:
      Ano:
        type: number
        format: double
      Codigo:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
  models.CaracteristicaEspacio:
    title: CaracteristicaEspacio
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.CargoAcademico:
    title: CargoAcademico
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.CategoriaCertificado:
    title: CategoriaCertificado
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.CategoriaCriterioRubrica:
    title: CategoriaCriterioRubrica
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.CategoriaOcupacional:
    title: CategoriaOcupacional
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.CategoriaTitulacion:
    title: CategoriaTitulacion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.CategoriaTitulo:
    title: CategoriaTitulo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.ClaseGrupoAcademico:
    title: ClaseGrupoAcademico
    type: object
    properties:
      EspacioFisico:
        $ref: '#/definitions/models.EspacioFisico'
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      GrupoAcademico:
        $ref: '#/definitions/models.GrupoAcademico'
      HorarioClase:
        $ref: '#/definitions/models.Horario'
      Id:
        type: integer
        format: int64
      ModoInstruccion:
        $ref: '#/definitions/models.ModoInstruccion'
  models.ClasificacionInstitucion:
    title: ClasificacionInstitucion
    type: object
    properties:
      CodigoAbrevicion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.CondicionDerechosAutor:
    title: CondicionDerechosAutor
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.Consejeria:
    title: Consejeria
    type: object
    properties:
      EstudiantePlanEstudios:
        $ref: '#/definitions/models.EstudianteProyecto'
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      SesionOrganizacion:
        $ref: '#/definitions/models.SesionOrganizacion'
  models.ContenidoProgDocente:
    title: ContenidoProgDocente
    type: object
    properties:
      EstrategiaMetodologica:
        type: string
      GrupoAcademico:
        $ref: '#/definitions/models.GrupoAcademico'
      Id:
        type: integer
        format: int64
      MetodoInstruccion:
        $ref: '#/definitions/models.MetodoInstruccion'
  models.ContenidoProgramatico:
    title: ContenidoProgramatico
    type: object
    properties:
      Competencias:
        type: string
      EspacioAcademico:
        $ref: '#/definitions/models.EspacioAcademico'
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Justificacion:
        type: string
      ObjetivoGeneral:
        type: string
      ObjetivosEspecificos:
        type: string
      TipoEspacioAcademico:
        $ref: '#/definitions/models.TipoEspacioAcademico'
  models.ControlInstitucion:
    title: ControlInstitucion
    type: object
    properties:
      CodigoAbrevicion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.CorteEvaluacion:
    title: CorteEvaluacion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.CriterioRubrica:
    title: CriterioRubrica
    type: object
    properties:
      CategoriaCriterioRubrica:
        $ref: '#/definitions/models.CategoriaCriterioRubrica'
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      PesoNumerico:
        type: integer
        format: int64
      Posicion:
        type: integer
        format: int64
      Rubrica:
        $ref: '#/definitions/models.Rubrica'
      Titulo:
        type: string
  models.DemografiaEstudiante:
    title: DemografiaEstudiante
    type: object
    properties:
      EstadoDependencia:
        $ref: '#/definitions/models.EstadoDependencia'
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      NivelEducativoMaterno:
        $ref: '#/definitions/models.NivelEducativo'
      NivelEducativoPaterno:
        $ref: '#/definitions/models.NivelEducativo'
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      PersonasDependientes:
        type: number
        format: double
      TipoResidencia:
        $ref: '#/definitions/models.TipoResidencia'
      TipoResidenciaCampus:
        $ref: '#/definitions/models.TipoResidenciaCampus'
  models.DiaAsesoriaDocente:
    title: DiaAsesoriaDocente
    type: object
    properties:
      AsignacionDocenteGrupo:
        $ref: '#/definitions/models.AsignacionDocenteClase'
      Descripcion:
        type: string
      EspacioFisico:
        $ref: '#/definitions/models.EspacioFisico'
      Horario:
        $ref: '#/definitions/models.Horario'
      Id:
        type: integer
        format: int64
  models.EducacionDistancia:
    title: EducacionDistancia
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.Empleado:
    title: Empleado
    type: object
    properties:
      Cargo:
        type: string
      FechaContrato:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      RazonSeparacion:
        $ref: '#/definitions/models.RazonSeparacion'
      SemanasEmpleadas:
        type: number
        format: double
      TipoSeparacion:
        $ref: '#/definitions/models.TipoSeparacion'
  models.EmpleadoPostsecundaria:
    title: EmpleadoPostsecundaria
    type: object
    properties:
      AsistenteEnseñanza:
        type: boolean
      CargoAcademico:
        $ref: '#/definitions/models.CargoAcademico'
      CategoriaOcupacional:
        $ref: '#/definitions/models.CategoriaOcupacional'
      ClasificacionOcupacion:
        type: string
      Empleado:
        $ref: '#/definitions/models.Empleado'
      EmpleadoInstruccion:
        type: boolean
      EstadoTiempoCompleto:
        $ref: '#/definitions/models.EstadoTiempoCompleto'
      Id:
        type: integer
        format: int64
      SalarioContractual:
        type: number
        format: double
      TipoContrato:
        $ref: '#/definitions/models.TipoContrato'
  models.EmpleoEstudiante:
    title: EmpleoEstudiante
    type: object
    properties:
      CodigoEmpleo:
        type: string
      EstadoEmpleo:
        $ref: '#/definitions/models.EstadoEmpleo'
      FechaRegistro:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
  models.EspacioAcademico:
    title: EspacioAcademico
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      DescripcionCertificacion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Idioma:
        $ref: '#/definitions/models.Idioma'
  models.EspacioAcademicoPregrado:
    title: EspacioAcademicoPregrado
    type: object
    properties:
      ClasificacionPrograma:
        $ref: '#/definitions/models.NucleoBasicoConocimiento'
      EspacioAcademico:
        $ref: '#/definitions/models.EspacioAcademico'
      Id:
        type: integer
        format: int64
      IdentificadorOriginal:
        type: string
  models.EspacioFisico:
    title: EspacioFisico
    type: object
    properties:
      Id:
        type: integer
        format: int64
  models.EspaciosHomologables:
    title: EspaciosHomologables
    type: object
    properties:
      Descripcion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      PrimerEspacio:
        $ref: '#/definitions/models.PlanEstudiosEspacio'
      SegundoEspacio:
        $ref: '#/definitions/models.PlanEstudiosEspacio'
  models.EspaciosPrerrequisitos:
    title: EspaciosPrerrequisitos
    type: object
    properties:
      Descripcion:
        type: string
      EspacioPrerrequisito:
        $ref: '#/definitions/models.PlanEstudiosEspacio'
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      PlanEstudiosEspacio:
        $ref: '#/definitions/models.PlanEstudiosEspacio'
  models.EsquemaIdentificacionOrg:
    title: EsquemaIdentificacionOrg
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
      TipoIdentificacionOrg:
        $ref: '#/definitions/models.TipoIdentificacionOrg'
  models.EstadoDependencia:
    title: EstadoDependencia
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.EstadoEmpleo:
    title: EstadoEmpleo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.EstadoEstudianteProyecto:
    title: EstadoEstudianteProyecto
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.EstadoGrupo:
    title: EstadoGrupo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.EstadoRol:
    title: EstadoRol
    type: object
    properties:
      FechaFin:
        $ref: '#/definitions/time.Time'
      FechaInicio:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      TipoEstadoRol:
        $ref: '#/definitions/models.TipoEstadoRol'
  models.EstadoTiempoCompleto:
    title: EstadoTiempoCompleto
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.EstadoTiempoMatricula:
    title: EstadoTiempoMatricula
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.EstudianteProyecto:
    title: EstudianteProyecto
    type: object
    properties:
      Acuerdo:
        $ref: '#/definitions/models.Acuerdo'
      FechaIngreso:
        $ref: '#/definitions/time.Time'
      FechaSalida:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      ProyectoCurricular:
        $ref: '#/definitions/models.ProyectoCurricular'
  models.EstudianteProyectoPlanEstudios:
    title: EstudianteProyectoPlanEstudios
    type: object
    properties:
      EstudianteProyecto:
        $ref: '#/definitions/models.EstudianteProyecto'
      FechaFin:
        $ref: '#/definitions/time.Time'
      FechaInicio:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      PlanEstudios:
        $ref: '#/definitions/models.PlanEstudios'
  models.EventoOrganizacion:
    title: EventoOrganizacion
    type: object
    properties:
      CalendarioOrganizacion:
        $ref: '#/definitions/models.CalendarioOrganizacion'
      Descripcion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      FechaRealizacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      TipoEvento:
        $ref: '#/definitions/models.TipoEvento'
  models.FormatoLibro:
    title: FormatoLibro
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.FranjaHoraria:
    title: FranjaHoraria
    type: object
    properties:
      Descripcion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Horario:
        $ref: '#/definitions/models.Horario'
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
      SesionOrganizacion:
        $ref: '#/definitions/models.SesionOrganizacion'
  models.GrupoAcademico:
    title: GrupoAcademico
    type: object
    properties:
      CapacidadMaxima:
        type: integer
        format: int64
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      EscalaCalificacion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Idioma:
        $ref: '#/definitions/models.Idioma'
      SesionOrganizacion:
        $ref: '#/definitions/models.SesionOrganizacion'
      TiempoRequeridoFinalizacion:
        type: number
        format: double
  models.GrupoActividad:
    title: GrupoActividad
    type: object
    properties:
      ActividadAprendizaje:
        $ref: '#/definitions/models.ActividadAprendizaje'
      ContenidoProgDocente:
        $ref: '#/definitions/models.ContenidoProgDocente'
      CorteEvaluacion:
        $ref: '#/definitions/models.CorteEvaluacion'
      Descripcion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaEsperada:
        $ref: '#/definitions/time.Time'
      FechaModificación:
        $ref: '#/definitions/time.Time'
      FechaRealizacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      PorcentajeActividad:
        type: number
        format: double
      Rubrica:
        $ref: '#/definitions/models.Rubrica'
  models.GrupoPlanEstudios:
    title: GrupoPlanEstudios
    type: object
    properties:
      GrupoAcademico:
        $ref: '#/definitions/models.GrupoAcademico'
      Id:
        type: integer
        format: int64
      PlanEstudiosEspacio:
        $ref: '#/definitions/models.PlanEstudiosEspacio'
  models.Horario:
    title: Horario
    type: object
    properties:
      Dia:
        type: string
      HoraFin:
        type: string
      HoraInicio:
        type: string
      Id:
        type: integer
        format: int64
  models.IdentificadorOrganizacion:
    title: IdentificadorOrganizacion
    type: object
    properties:
      EsquemaIdentificacionOrg:
        $ref: '#/definitions/models.EsquemaIdentificacionOrg'
      Id:
        type: integer
        format: int64
      Identificador:
        type: string
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
      TipoIdentificacionOrg:
        $ref: '#/definitions/models.TipoIdentificacionOrg'
  models.Idioma:
    title: Idioma
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      NumeroOrden:
        type: integer
        format: int64
  models.InclusionPromedio:
    title: InclusionPromedio
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.InscripcionGrupos:
    title: InscripcionGrupos
    type: object
    properties:
      EstudiantePlanEstudios:
        $ref: '#/definitions/models.EstudianteProyecto'
      FechaEspacioInscrito:
        $ref: '#/definitions/time.Time'
      GrupoAcademico:
        $ref: '#/definitions/models.GrupoAcademico'
      Id:
        type: integer
        format: int64
      NotaDefinitiva:
        type: number
        format: double
      SesionOrganizacion:
        $ref: '#/definitions/models.SesionOrganizacion'
      TipoObservacionGrupo:
        $ref: '#/definitions/models.TipoObservacionGrupo'
  models.LimitesCreditos:
    title: LimitesCreditos
    type: object
    properties:
      CantidadMaxima:
        type: integer
        format: int64
      CantidadMinima:
        type: integer
        format: int64
      CaracteristicaEspacio:
        $ref: '#/definitions/models.CaracteristicaEspacio'
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/models.int16'
      Id:
        type: integer
        format: int64
      PlanEstudios:
        $ref: '#/definitions/models.PlanEstudios'
  models.MatriculaEstudiante:
    title: MatriculaEstudiante
    type: object
    properties:
      CreditosCompletados:
        type: number
        format: double
      CreditosInscritos:
        type: number
        format: double
      EdadEstudiante:
        type: number
        format: double
      EducacionDistancia:
        $ref: '#/definitions/models.EducacionDistancia'
      EstadoTiempoMatricula:
        $ref: '#/definitions/models.EstadoTiempoMatricula'
      EstudianteProyectoCurricular:
        $ref: '#/definitions/models.EstudianteProyecto'
      Id:
        type: integer
        format: int64
      MatriculaInicial:
        type: boolean
      PregradoPrimeraVez:
        type: boolean
      PromedioAcumulado:
        type: number
        format: double
      PromedioPeriodo:
        type: number
        format: double
      SesionOrganizacion:
        $ref: '#/definitions/models.SesionOrganizacion'
      TipoMatricula:
        $ref: '#/definitions/models.TipoMatricula'
      TransferenciaLista:
        $ref: '#/definitions/models.TransferenciaLista'
      UnidadCredito:
        $ref: '#/definitions/models.UnidadDedicacion'
  models.MedioDigital:
    title: MedioDigital
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.MetodoEntradaRecurso:
    title: MetodoEntradaRecurso
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.MetodoInstruccion:
    title: MetodoInstruccion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.MetodologiaApoyo:
    title: MetodologiaApoyo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.ModalidadPrograma:
    title: ModalidadPrograma
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.ModoAcceso:
    title: ModoAcceso
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.ModoInstruccion:
    title: ModoInstruccion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.NivelConsideracionAdmision:
    title: NivelConsideracionAdmision
    type: object
    properties:
      CodigoAbrevicion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.NivelCriterioRubrica:
    title: NivelCriterioRubrica
    type: object
    properties:
      CalificacionCualitativa:
        type: string
      CriterioRubrica:
        $ref: '#/definitions/models.CriterioRubrica'
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Posicion:
        type: integer
        format: int64
      Puntaje:
        type: number
        format: double
      Retroalimentacion:
        type: string
  models.NivelEducativo:
    title: NivelEducativo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.NivelEducativoRecurso:
    title: NivelEducativoRecurso
    type: object
    properties:
      Id:
        type: integer
        format: int64
      NivelEducativo:
        $ref: '#/definitions/models.NivelEducativo'
      RecursoAprendizaje:
        $ref: '#/definitions/models.RecursoAprendizaje'
  models.NivelInstitucion:
    title: NivelInstitucion
    type: object
    properties:
      CodigoAbrevicion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.NivelPrograma:
    title: NivelPrograma
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.NivelSemestre:
    title: NivelSemestre
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.NormaAcuerdo:
    title: NormaAcuerdo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.NotaEstudiante:
    title: NotaEstudiante
    type: object
    properties:
      CriterioRubrica:
        $ref: '#/definitions/models.CriterioRubrica'
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      GrupoActividad:
        $ref: '#/definitions/models.GrupoActividad'
      Id:
        type: integer
        format: int64
      InscripcionGrupos:
        $ref: '#/definitions/models.InscripcionGrupos'
      Nota:
        type: number
        format: double
      NotaDefinitiva:
        type: boolean
      TipoObservacion:
        $ref: '#/definitions/models.TipoObservacionNota'
  models.NucleoBasicoConocimiento:
    title: NucleoBasicoConocimiento
    type: object
    properties:
      AreaConocimiento:
        $ref: '#/definitions/models.AreaConocimiento'
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.OportunidadAprendizaje:
    title: OportunidadAprendizaje
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.Organizacion:
    title: Organizacion
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NombreCorto:
        type: string
      TipoOrganizacion:
        $ref: '#/definitions/models.TipoOrganizacion'
  models.OrganizacionPersonaRol:
    title: OrganizacionPersonaRol
    type: object
    properties:
      FechaIngreso:
        $ref: '#/definitions/time.Time'
      FechaSalida:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
      Persona:
        $ref: '#/definitions/models.Persona'
      Rol:
        $ref: '#/definitions/models.Rol'
  models.ParticipacionPrograma:
    title: ParticipacionPrograma
    type: object
    properties:
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      RazonSalidaPrograma:
        $ref: '#/definitions/models.RazonSalidaPrograma'
      TipoParticipacion:
        $ref: '#/definitions/models.TipoParticipacion'
  models.PerfilTitulacion:
    title: PerfilTitulacion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
  models.Persona:
    title: Persona
    type: object
    properties:
      FechaNacimiento:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      PrimerApellido:
        type: string
      PrimerNombre:
        type: string
      SegundoApellido:
        type: string
      SegundoNombre:
        type: string
  models.PlanEstudios:
    title: PlanEstudios
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaAprobacion:
        $ref: '#/definitions/time.Time'
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      ModalidadPrograma:
        $ref: '#/definitions/models.ModalidadPrograma'
      PerfilTitulacion:
        $ref: '#/definitions/models.PerfilTitulacion'
      ProyectoCurricular:
        $ref: '#/definitions/models.ProyectoCurricular'
      TiempoDuracion:
        type: number
        format: double
      TipoJornada:
        $ref: '#/definitions/models.TipoJornada'
      TotalDedicacion:
        type: number
        format: double
      UnidadDedicacion:
        $ref: '#/definitions/models.UnidadDedicacion'
      UnidadTiempo:
        $ref: '#/definitions/models.UnidadTiempo'
  models.PlanEstudiosEspacio:
    title: PlanEstudiosEspacio
    type: object
    properties:
      CaracteristicaEspacio:
        $ref: '#/definitions/models.CaracteristicaEspacio'
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      EspacioAcademico:
        $ref: '#/definitions/models.EspacioAcademico'
      HorasTrabajoAutonomo:
        type: number
        format: double
      HorasTrabajoCooperativo:
        type: number
        format: double
      HorasTrabajoDirecto:
        type: number
        format: double
      Id:
        type: integer
        format: int64
      InclusionPromedio:
        $ref: '#/definitions/models.InclusionPromedio'
      NivelSemestre:
        $ref: '#/definitions/models.NivelSemestre'
      OportunidadAprendizaje:
        $ref: '#/definitions/models.OportunidadAprendizaje'
      PlanEstudios:
        $ref: '#/definitions/models.PlanEstudios'
      TotalDedicacion:
        type: number
        format: double
  models.PreinscripcionEspacios:
    title: PreinscripcionEspacios
    type: object
    properties:
      EspacioAcademicoCancelado:
        type: boolean
      EstudiantePlanEstudios:
        $ref: '#/definitions/models.EstudianteProyecto'
      FechaEspacioPreinscrito:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      PlanEstudiosEspacio:
        $ref: '#/definitions/models.PlanEstudiosEspacio'
      SesionOrganizacion:
        $ref: '#/definitions/models.SesionOrganizacion'
  models.PrioridadConsejeria:
    title: PrioridadConsejeria
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.ProgramaLaboral:
    title: ProgramaLaboral
    type: object
    properties:
      CategoriaTitulacion:
        $ref: '#/definitions/models.CategoriaTitulacion'
      FechaTitulacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      ParticipacionPrograma:
        $ref: '#/definitions/models.ParticipacionPrograma'
      TipoProgramaLaboral:
        $ref: '#/definitions/models.TipoProgramaLaboral'
  models.PropositoRecurso:
    title: PropositoRecurso
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.ProyectoCurricular:
    title: ProyectoCurricular
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      NivelPrograma:
        $ref: '#/definitions/models.NivelPrograma'
      NucleoBasicoConocimiento:
        $ref: '#/definitions/models.NucleoBasicoConocimiento'
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
      UnidadDuracion:
        $ref: '#/definitions/models.UnidadTiempo'
  models.ProyectoCurricularMaestria:
    title: ProyectoCurricularMaestria
    type: object
    properties:
      Id:
        type: integer
        format: int64
      ProyectoCurricular:
        $ref: '#/definitions/models.ProyectoCurricular'
  models.ProyectoCurricularPregrado:
    title: ProyectoCurricularPregrado
    type: object
    properties:
      Id:
        type: integer
        format: int64
      ProyectoCurricular:
        $ref: '#/definitions/models.ProyectoCurricular'
  models.PruebaAdmisionEstudiante:
    title: PruebaAdmisionEstudiante
    type: object
    properties:
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      Puntaje:
        type: number
        format: double
      TipoPruebaAdmision:
        $ref: '#/definitions/models.TipoPruebaAdmision'
  models.PsInstitucion:
    title: PsInstitucion
    type: object
    properties:
      ClasificacionInstitucion:
        $ref: '#/definitions/models.ClasificacionInstitucion'
      ControlInstitucion:
        $ref: '#/definitions/models.ControlInstitucion'
      Id:
        type: integer
        format: int64
      IndicadorVirtual:
        type: boolean
      NivelConsideracionAdmision:
        $ref: '#/definitions/models.NivelConsideracionAdmision'
      NivelInstitucion:
        $ref: '#/definitions/models.NivelInstitucion'
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
      SistemaCalendario:
        $ref: '#/definitions/models.SistemaCalendario'
      SistemaTenencia:
        type: boolean
      TipoAdmisionInstitucion:
        $ref: '#/definitions/models.TipoAdmisionInstitucion'
  models.RazonFinGrupoDocente:
    title: RazonFinGrupoDocente
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.RazonSalidaPrograma:
    title: RazonSalidaPrograma
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.RazonSeparacion:
    title: RazonSeparacion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.RecursoAprendizaje:
    title: RecursoAprendizaje
    type: object
    properties:
      AnoDerechosAutor:
        type: string
      AutorEmail:
        type: string
      AutorNombre:
        type: string
      AutorUrl:
        type: string
      CodigoTema:
        type: string
      CondicionDerechosAutor:
        $ref: '#/definitions/models.CondicionDerechosAutor'
      Descripcion:
        type: string
      EdadMaxima:
        type: number
        format: double
      EdadMinima:
        type: number
        format: double
      EditorEmail:
        type: string
      EditorNombre:
        type: string
      EditorUrl:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      FechaPublicacion:
        $ref: '#/definitions/time.Time'
      FormatoLibro:
        $ref: '#/definitions/models.FormatoLibro'
      Id:
        type: integer
        format: int64
      Idioma:
        $ref: '#/definitions/models.Idioma'
      Importancia:
        type: string
      MedioDigital:
        $ref: '#/definitions/models.MedioDigital'
      MetodoEntradaRecurso:
        $ref: '#/definitions/models.MetodoEntradaRecurso'
      ModoAcceso:
        $ref: '#/definitions/models.ModoAcceso'
      PropositoRecurso:
        $ref: '#/definitions/models.PropositoRecurso'
      SistemaAsignacionTema:
        type: string
      SistemaComplejidadTexto:
        type: string
      Tema:
        type: string
      TiempoRecurso:
        type: string
      TipoApiAcceso:
        $ref: '#/definitions/models.TipoApiAcceso'
      TipoAutor:
        $ref: '#/definitions/models.TipoAutor'
      TipoInteractividad:
        $ref: '#/definitions/models.TipoInteractividad'
      TipoRecursoAprendizaje:
        $ref: '#/definitions/models.TipoRecursoAprendizaje'
      TipoRiesgoRecurso:
        $ref: '#/definitions/models.TipoRiesgoRecurso'
      TitularDerechosAutor:
        type: string
      Titulo:
        type: string
      Url:
        type: string
      UrlDerechosAutor:
        type: string
      UsuarioFinal:
        $ref: '#/definitions/models.UsuarioFinal'
      ValorComplejidadTexto:
        type: string
      Version:
        type: string
  models.RefEstadoEstudianteProyecto:
    title: RefEstadoEstudianteProyecto
    type: object
    properties:
      Descripcion:
        type: string
      EstadoEstudiantePlan:
        $ref: '#/definitions/models.EstadoEstudianteProyecto'
      EstudiantePlanEstudios:
        $ref: '#/definitions/models.EstudianteProyecto'
      FechaFin:
        $ref: '#/definitions/time.Time'
      FechaInico:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
  models.RefEstadoGrupo:
    title: RefEstadoGrupo
    type: object
    properties:
      Descripcion:
        type: string
      EstadoGrupo:
        $ref: '#/definitions/models.EstadoGrupo'
      FechaFin:
        $ref: '#/definitions/time.Time'
      FechaInicio:
        $ref: '#/definitions/time.Time'
      GrupoAcademico:
        $ref: '#/definitions/models.GrupoAcademico'
      Id:
        type: integer
        format: int64
  models.RefNormaAcuerdo:
    title: RefNormaAcuerdo
    type: object
    properties:
      Acuerdo:
        $ref: '#/definitions/models.Acuerdo'
      Articulo:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      NormaAcuerdo:
        $ref: '#/definitions/models.NormaAcuerdo'
      Valor:
        type: string
  models.RefTipoRelacionOrg:
    title: RefTipoRelacionOrg
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
      PadreOganizacion:
        $ref: '#/definitions/models.Organizacion'
      TipoRelacionOrg:
        $ref: '#/definitions/models.TipoRelacionOrg'
  models.Responsable:
    title: Responsable
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
  models.ResponsableSesion:
    title: ResponsableSesion
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Responsable:
        $ref: '#/definitions/models.Responsable'
      SesionOrganizacion:
        $ref: '#/definitions/models.SesionOrganizacion'
  models.ResumenAcademico:
    title: ResumenAcademico
    type: object
    properties:
      CantidadCursos:
        type: number
        format: double
      CategoriaCertificado:
        $ref: '#/definitions/models.CategoriaCertificado'
      CreditosOtorgados:
        type: number
        format: double
      FechaDiploma:
        type: string
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      Promedio:
        type: number
        format: double
  models.Rol:
    title: Rol
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
  models.Rubrica:
    title: Rubrica
    type: object
    properties:
      Descripcion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Identificador:
        type: string
      Titulo:
        type: string
      Url:
        type: string
  models.SesionOrganizacion:
    title: SesionOrganizacion
    type: object
    properties:
      CalendarioOrganizacion:
        $ref: '#/definitions/models.CalendarioOrganizacion'
      Descripcion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaFin:
        $ref: '#/definitions/time.Time'
      FechaInicio:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Identificacion:
        type: string
      SesionAsistencia:
        type: boolean
      SesionCalificacion:
        type: boolean
      SesionProgramacion:
        type: boolean
      TipoSesion:
        $ref: '#/definitions/models.TipoSesion'
  models.SistemaCalendario:
    title: SistemaCalendario
    type: object
    properties:
      CodigoAbrevicion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.SolicitudAdmision:
    title: SolicitudAdmision
    type: object
    properties:
      DominioPromedioAcademico:
        $ref: '#/definitions/models.NivelEducativo'
      EstudiantesSecundaria:
        type: number
        format: double
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      PercentilSecundaria:
        type: number
        format: double
      PosicionSecundaria:
        type: number
        format: double
      PromedioAcademico:
        type: number
        format: double
      RequisitosCumplidos:
        type: boolean
      TipoAdmision:
        $ref: '#/definitions/models.TipoAdmision'
  models.SolicitudApoyo:
    title: SolicitudApoyo
    type: object
    properties:
      AnoApoyo:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
      TipoSolicitudApoyo:
        $ref: '#/definitions/models.TipoSolicitudApoyo'
  models.SolicitudConsejeria:
    title: SolicitudConsejeria
    type: object
    properties:
      AprobadaConsejero:
        type: boolean
      AprobadaCoordinacion:
        type: boolean
      Consejeria:
        $ref: '#/definitions/models.Consejeria'
      GrupoAcademico:
        $ref: '#/definitions/models.GrupoAcademico'
      Id:
        type: integer
        format: int64
      ObservacionConsejero:
        type: string
      ObservacionCoordinacion:
        type: string
      PrioridadConsejeria:
        $ref: '#/definitions/models.PrioridadConsejeria'
      TipoSolicitudConsejeria:
        $ref: '#/definitions/models.TipoSolicitudConsejeria'
  models.SoporteFisico:
    title: SoporteFisico
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.SoporteFisicoRecurso:
    title: SoporteFisicoRecurso
    type: object
    properties:
      Id:
        type: integer
        format: int64
      RecursoAprendizaje:
        $ref: '#/definitions/models.RecursoAprendizaje'
      SoporteFisico:
        $ref: '#/definitions/models.SoporteFisico'
  models.TipoActividad:
    title: TipoActividad
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoAdmision:
    title: TipoAdmision
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoAdmisionInstitucion:
    title: TipoAdmisionInstitucion
    type: object
    properties:
      CodigoAbrevicion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoApiAcceso:
    title: TipoApiAcceso
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoAutor:
    title: TipoAutor
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoContrato:
    title: TipoContrato
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoEspacioAcademico:
    title: TipoEspacioAcademico
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoEstadoRol:
    title: TipoEstadoRol
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
  models.TipoEvento:
    title: TipoEvento
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
  models.TipoIdentificacionOrg:
    title: TipoIdentificacionOrg
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
  models.TipoInteractividad:
    title: TipoInteractividad
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoJornada:
    title: TipoJornada
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoMatricula:
    title: TipoMatricula
    type: object
    properties:
      CodigoAbrevicion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoObservacionGrupo:
    title: TipoObservacionGrupo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoObservacionNota:
    title: TipoObservacionNota
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoOrganizacion:
    title: TipoOrganizacion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Definicion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
  models.TipoParticipacion:
    title: TipoParticipacion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoProgramaLaboral:
    title: TipoProgramaLaboral
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoPruebaAdmision:
    title: TipoPruebaAdmision
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoRecursoAprendizaje:
    title: TipoRecursoAprendizaje
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoRelacionOrg:
    title: TipoRelacionOrg
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
  models.TipoResidencia:
    title: TipoResidencia
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoResidenciaCampus:
    title: TipoResidenciaCampus
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoRiesgoRecurso:
    title: TipoRiesgoRecurso
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoSeparacion:
    title: TipoSeparacion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoSesion:
    title: TipoSesion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Organizacion:
        $ref: '#/definitions/models.Organizacion'
  models.TipoSolicitudApoyo:
    title: TipoSolicitudApoyo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TipoSolicitudConsejeria:
    title: TipoSolicitudConsejeria
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.TituloOtorgado:
    title: TituloOtorgado
    type: object
    properties:
      CategoriaTitulo:
        $ref: '#/definitions/models.CategoriaTitulo'
      DescripcionTitulo:
        type: string
      FechaTitulo:
        type: string
      Id:
        type: integer
        format: int64
      OrganizacionPersonaRol:
        $ref: '#/definitions/models.OrganizacionPersonaRol'
  models.TransferenciaLista:
    title: TransferenciaLista
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.UnidadDedicacion:
    title: UnidadDedicacion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.UnidadTiempo:
    title: UnidadTiempo
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
  models.UsuarioFinal:
    title: UsuarioFinal
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
tags:
- name: categoria_titulacion
  description: |
    CategoriaTitulacionController operations for CategoriaTitulacion
- name: condicion_derechos_autor
  description: |
    CondicionDerechosAutorController operations for CondicionDerechosAutor
- name: clase_grupo_academico
  description: |
    ClaseGrupoAcademicoController operations for ClaseGrupoAcademico
- name: categoria_criterio_rubrica
  description: |
    CategoriaCriterioRubricaController operations for CategoriaCriterioRubrica
- name: consejeria
  description: |
    ConsejeriaController operations for Consejeria
- name: cargo_academico
  description: |
    CargoAcademicoController operations for CargoAcademico
- name: caracteristica_espacio
  description: |
    CaracteristicaEspacioController operations for CaracteristicaEspacio
- name: area_conocimiento
  description: |
    AreaConocimientoController operations for AreaConocimiento
- name: acuerdo
  description: |
    AcuerdoController operations for Acuerdo
- name: actividad_recurso_aprendizaje
  description: |
    ActividadRecursoAprendizajeController operations for ActividadRecursoAprendizaje
- name: beneficio_apoyo
  description: |
    BeneficioApoyoController operations for BeneficioApoyo
- name: calendario_organizacion
  description: |
    CalendarioOrganizacionController operations for CalendarioOrganizacion
- name: categoria_certificado
  description: |
    CategoriaCertificadoController operations for CategoriaCertificado
- name: categoria_ocupacional
  description: |
    CategoriaOcupacionalController operations for CategoriaOcupacional
- name: categoria_titulo
  description: |
    CategoriaTituloController operations for CategoriaTitulo
- name: clasificacion_institucion
  description: |
    ClasificacionInstitucionController operations for ClasificacionInstitucion
- name: espacio_fisico
  description: |
    EspacioFisicoController operations for EspacioFisico
- name: educacion_distancia
  description: |
    EducacionDistanciaController operations for EducacionDistancia
- name: demografia_estudiante
  description: |
    DemografiaEstudianteController operations for DemografiaEstudiante
- name: empleado
  description: |
    EmpleadoController operations for Empleado
- name: empleo_estudiante
  description: |
    EmpleoEstudianteController operations for EmpleoEstudiante
- name: espacio_academico
  description: |
    EspacioAcademicoController operations for EspacioAcademico
- name: estado_tiempo_matricula
  description: |
    EstadoTiempoMatriculaController operations for EstadoTiempoMatricula
- name: estado_empleo
  description: |
    EstadoEmpleoController operations for EstadoEmpleo
- name: esquema_identificacion_org
  description: |
    EsquemaIdentificacionOrgController operations for EsquemaIdentificacionOrg
- name: estado_tiempo_completo
  description: |
    EstadoTiempoCompletoController operations for EstadoTiempoCompleto
- name: estado_estudiante_proyecto
  description: |
    EstadoEstudianteProyectoController operations for EstadoEstudianteProyecto
- name: estado_grupo
  description: |
    EstadoGrupoController operations for EstadoGrupo
- name: estado_rol
  description: |
    EstadoRolController operations for EstadoRol
- name: estudiante_proyecto_plan_estudios
  description: |
    EstudianteProyectoPlanEstudiosController operations for EstudianteProyectoPlanEstudios
- name: franja_horaria
  description: |
    FranjaHorariaController operations for FranjaHoraria
- name: modo_acceso
  description: |
    ModoAccesoController operations for ModoAcceso
- name: metodologia_apoyo
  description: |
    MetodologiaApoyoController operations for MetodologiaApoyo
- name: metodo_entrada_recurso
  description: |
    MetodoEntradaRecursoController operations for MetodoEntradaRecurso
- name: modo_instruccion
  description: |
    ModoInstruccionController operations for ModoInstruccion
- name: matricula_estudiante
  description: |
    MatriculaEstudianteController operations for MatriculaEstudiante
- name: inscripcion_grupos
  description: |
    InscripcionGruposController operations for InscripcionGrupos
- name: limites_creditos
  description: |
    LimitesCreditosController operations for LimitesCreditos
- name: medio_digital
  description: |
    MedioDigitalController operations for MedioDigital
- name: metodo_instruccion
  description: |
    MetodoInstruccionController operations for MetodoInstruccion
- name: modalidad_programa
  description: |
    ModalidadProgramaController operations for ModalidadPrograma
- name: nivel_consideracion_admision
  description: |
    NivelConsideracionAdmisionController operations for NivelConsideracionAdmision
- name: nota_estudiante
  description: |
    NotaEstudianteController operations for NotaEstudiante
- name: nivel_semestre
  description: |
    NivelSemestreController operations for NivelSemestre
- name: oportunidad_aprendizaje
  description: |
    OportunidadAprendizajeController operations for OportunidadAprendizaje
- name: nivel_institucion
  description: |
    NivelInstitucionController operations for NivelInstitucion
- name: nivel_educativo
  description: |
    NivelEducativoController operations for NivelEducativo
- name: nivel_programa
  description: |
    NivelProgramaController operations for NivelPrograma
- name: norma_acuerdo
  description: |
    NormaAcuerdoController operations for NormaAcuerdo
- name: nucleo_basico_conocimiento
  description: |
    NucleoBasicoConocimientoController operations for NucleoBasicoConocimiento
- name: proposito_recurso
  description: |
    PropositoRecursoController operations for PropositoRecurso
- name: persona
  description: |
    PersonaController operations for Persona
- name: perfil_titulacion
  description: |
    PerfilTitulacionController operations for PerfilTitulacion
- name: preinscripcion_espacios
  description: |
    PreinscripcionEspaciosController operations for PreinscripcionEspacios
- name: prioridad_consejeria
  description: |
    PrioridadConsejeriaController operations for PrioridadConsejeria
- name: proyecto_curricular
  description: |
    ProyectoCurricularController operations for ProyectoCurricular
- name: razon_salida_programa
  description: |
    RazonSalidaProgramaController operations for RazonSalidaPrograma
- name: ps_institucion
  description: |
    PsInstitucionController operations for PsInstitucion
- name: ref_norma_acuerdo
  description: |
    RefNormaAcuerdoController operations for RefNormaAcuerdo
- name: responsable
  description: |
    ResponsableController operations for Responsable
- name: prueba_admision_estudiante
  description: |
    PruebaAdmisionEstudianteController operations for PruebaAdmisionEstudiante
- name: razon_separacion
  description: |
    RazonSeparacionController operations for RazonSeparacion
- name: ref_estado_estudiante_proyecto
  description: |
    RefEstadoEstudianteProyectoController operations for RefEstadoEstudianteProyecto
- name: ref_estado_grupo
  description: |
    RefEstadoGrupoController operations for RefEstadoGrupo
- name: ref_tipo_relacion_org
  description: |
    RefTipoRelacionOrgController operations for RefTipoRelacionOrg
- name: tipo_api_acceso
  description: |
    TipoApiAccesoController operations for TipoApiAcceso
- name: soporte_fisico
  description: |
    SoporteFisicoController operations for SoporteFisico
- name: tipo_contrato
  description: |
    TipoContratoController operations for TipoContrato
- name: tipo_espacio_academico
  description: |
    TipoEspacioAcademicoController operations for TipoEspacioAcademico
- name: rubrica
  description: |
    RubricaController operations for Rubrica
- name: rol
  description: |
    RolController operations for Rol
- name: sistema_calendario
  description: |
    SistemaCalendarioController operations for SistemaCalendario
- name: solicitud_apoyo
  description: |
    SolicitudApoyoController operations for SolicitudApoyo
- name: solicitud_consejeria
  description: |
    SolicitudConsejeriaController operations for SolicitudConsejeria
- name: tipo_admision
  description: |
    TipoAdmisionController operations for TipoAdmision
- name: tipo_admision_institucion
  description: |
    TipoAdmisionInstitucionController operations for TipoAdmisionInstitucion
- name: tipo_autor
  description: |
    TipoAutorController operations for TipoAutor
- name: tipo_jornada
  description: |
    TipoJornadaController operations for TipoJornada
- name: tipo_observacion_grupo
  description: |
    TipoObservacionGrupoController operations for TipoObservacionGrupo
- name: tipo_relacion_org
  description: |
    TipoRelacionOrgController operations for TipoRelacionOrg
- name: tipo_riesgo_recurso
  description: |
    TipoRiesgoRecursoController operations for TipoRiesgoRecurso
- name: tipo_identificacion_org
  description: |
    TipoIdentificacionOrgController operations for TipoIdentificacionOrg
- name: tipo_observacion_nota
  description: |
    TipoObservacionNotaController operations for TipoObservacionNota
- name: tipo_participacion
  description: |
    TipoParticipacionController operations for TipoParticipacion
- name: tipo_prueba_admision
  description: |
    TipoPruebaAdmisionController operations for TipoPruebaAdmision
- name: titulo_otorgado
  description: |
    TituloOtorgadoController operations for TituloOtorgado
- name: tipo_evento
  description: |
    TipoEventoController operations for TipoEvento
- name: tipo_interactividad
  description: |
    TipoInteractividadController operations for TipoInteractividad
- name: tipo_matricula
  description: |
    TipoMatriculaController operations for TipoMatricula
- name: tipo_organizacion
  description: |
    TipoOrganizacionController operations for TipoOrganizacion
- name: tipo_programa_laboral
  description: |
    TipoProgramaLaboralController operations for TipoProgramaLaboral
- name: tipo_recurso_aprendizaje
  description: |
    TipoRecursoAprendizajeController operations for TipoRecursoAprendizaje
- name: tipo_separacion
  description: |
    TipoSeparacionController operations for TipoSeparacion
- name: tipo_solicitud_apoyo
  description: |
    TipoSolicitudApoyoController operations for TipoSolicitudApoyo
- name: tipo_solicitud_consejeria
  description: |
    TipoSolicitudConsejeriaController operations for TipoSolicitudConsejeria
- name: transferencia_lista
  description: |
    TransferenciaListaController operations for TransferenciaLista
- name: tipo_residencia
  description: |
    TipoResidenciaController operations for TipoResidencia
- name: razon_fin_grupo_docente
  description: |
    RazonFinGrupoDocenteController operations for RazonFinGrupoDocente
- name: control_institucion
  description: |
    ControlInstitucionController operations for ControlInstitucion
- name: contenido_prog_docente
  description: |
    ContenidoProgDocenteController operations for ContenidoProgDocente
- name: corte_evaluacion
  description: |
    CorteEvaluacionController operations for CorteEvaluacion
- name: grupo_academico
  description: |
    GrupoAcademicoController operations for GrupoAcademico
- name: grupo_actividad
  description: |
    GrupoActividadController operations for GrupoActividad
- name: asignacion_docente_clase
  description: |
    AsignacionDocenteClaseController operations for AsignacionDocenteClase
- name: organizacion_persona_rol
  description: |
    OrganizacionPersonaRolController operations for OrganizacionPersonaRol
- name: horario
  description: |
    HorarioController operations for Horario
- name: estado_dependencia
  description: |
    EstadoDependenciaController operations for EstadoDependencia
- name: programa_laboral
  description: |
    ProgramaLaboralController operations for ProgramaLaboral
- name: organizacion
  description: |
    OrganizacionController operations for Organizacion
- name: tipo_residencia_campus
  description: |
    TipoResidenciaCampusController operations for TipoResidenciaCampus
- name: espacio_academico_pregrado
  description: |
    EspacioAcademicoPregradoController operations for EspacioAcademicoPregrado
- name: sesion_organizacion
  description: |
    SesionOrganizacionController operations for SesionOrganizacion
- name: estudiante_proyecto
  description: |
    EstudianteProyectoController operations for EstudianteProyecto
- name: apoyo_financiero
  description: |
    ApoyoFinancieroController operations for ApoyoFinanciero
- name: soporte_fisico_recurso
  description: |
    SoporteFisicoRecursoController operations for SoporteFisicoRecurso
- name: solicitud_admision
  description: |
    SolicitudAdmisionController operations for SolicitudAdmision
- name: proyecto_curricular_maestria
  description: |
    ProyectoCurricularMaestriaController operations for ProyectoCurricularMaestria
- name: unidad_dedicacion
  description: |
    UnidadDedicacionController operations for UnidadDedicacion
- name: actividad_aprendizaje
  description: |
    ActividadAprendizajeController operations for ActividadAprendizaje
- name: plan_estudios
  description: |
    PlanEstudiosController operations for PlanEstudios
- name: criterio_rubrica
  description: |
    CriterioRubricaController operations for CriterioRubrica
- name: contenido_programatico
  description: |
    ContenidoProgramaticoController operations for ContenidoProgramatico
- name: empleado_postsecundaria
  description: |
    EmpleadoPostsecundariaController operations for EmpleadoPostsecundaria
- name: dia_asesoria_docente
  description: |
    DiaAsesoriaDocenteController operations for DiaAsesoriaDocente
- name: recurso_aprendizaje
  description: |
    RecursoAprendizajeController operations for RecursoAprendizaje
- name: grupo_plan_estudios
  description: |
    GrupoPlanEstudiosController operations for GrupoPlanEstudios
- name: espacios_homologables
  description: |
    EspaciosHomologablesController operations for EspaciosHomologables
- name: evento_organizacion
  description: |
    EventoOrganizacionController operations for EventoOrganizacion
- name: espacios_prerrequisitos
  description: |
    EspaciosPrerrequisitosController operations for EspaciosPrerrequisitos
- name: formato_libro
  description: |
    FormatoLibroController operations for FormatoLibro
- name: inclusion_promedio
  description: |
    InclusionPromedioController operations for InclusionPromedio
- name: identificador_organizacion
  description: |
    IdentificadorOrganizacionController operations for IdentificadorOrganizacion
- name: idioma
  description: |
    IdiomaController operations for Idioma
- name: nivel_criterio_rubrica
  description: |
    NivelCriterioRubricaController operations for NivelCriterioRubrica
- name: participacion_programa
  description: |
    ParticipacionProgramaController operations for ParticipacionPrograma
- name: nivel_educativo_recurso
  description: |
    NivelEducativoRecursoController operations for NivelEducativoRecurso
- name: responsable_sesion
  description: |
    ResponsableSesionController operations for ResponsableSesion
- name: plan_estudios_espacio
  description: |
    PlanEstudiosEspacioController operations for PlanEstudiosEspacio
- name: proyecto_curricular_pregrado
  description: |
    ProyectoCurricularPregradoController operations for ProyectoCurricularPregrado
- name: resumen_academico
  description: |
    ResumenAcademicoController operations for ResumenAcademico
- name: tipo_estado_rol
  description: |
    TipoEstadoRolController operations for TipoEstadoRol
- name: tipo_actividad
  description: |
    TipoActividadController operations for TipoActividad
- name: unidad_tiempo
  description: |
    UnidadTiempoController operations for UnidadTiempo
- name: tipo_sesion
  description: |
    TipoSesionController operations for TipoSesion
- name: usuario_final
  description: |
    UsuarioFinalController operations for UsuarioFinal
